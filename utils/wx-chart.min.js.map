{"version":3,"sources":["/dist/wx-chart.min.js"],"names":["_typeof2","Symbol","iterator","obj","constructor","prototype","f","exports","module","define","amd","g","window","global","self","this","WxChart","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_interopRequireDefault","__esModule","default","_toConsumableArray","arr","Array","isArray","arr2","from","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","Object","create","value","enumerable","writable","configurable","setPrototypeOf","__proto__","defineProperty","_typeof","_createClass","defineProperties","target","props","descriptor","key","protoProps","staticProps","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","getter","_wxCanvas","_wxChart","_wxChart2","_title","_title2","_scale","_scale3","_scale4","_scale5","_scale6","_scale7","_scale8","_legend","_legend2","_layout","_layout2","_helper","_tinycolor","_tinycolor2","_randomColor","_randomColor2","WX_BAR_LEGEND_DEFAULT_CONFIG","borderWidth","fillArea","fillAlpha","display","barPercentage","WX_BAR_DEFAULT_CONFIG","minBetweenPixel","pointPercentage","stacked","zeroLine","xScaleOptions","position","xScaleItemOptions","yScaleOptions","yScaleItemOptions","crossScaleOptions","xMargin","xBox","yBox","area","xScale","yScale","xScaleDatasets","calculateTickWidth","xFirstPointSpace","title","legends","legendOptions","color","hue","luminosity","defaultKey","WX_BAR_ITEM_DEFAULT_CONFIG","WxBar","_WxChart","id","config","_this","me","chartConfig","extend","is","PureObject","titleText","String","text","legend","yAxis","xAxis","wxCrossScale","wxLayout","legendsConfig","map","labels","label","datasets","_labels","_legends","removeAllBox","draw","box","ctx","_me$chartConfig","adjustBox","update","addBox","rColors","count","index","strokeStyle","borderColor","darken","toString","fillStyle","_drawScale","barRuler","calculateBarRuler","hasNeg","barConfigs","legendIndex","dataset","visDatasets","data","point","calculateBarRect","forEach","bar","_drawBar","save","lineWidth","baseY","getPoint","y","beginPoint","x","endPoint","ex","beginPath","moveTo","apply","lineTo","stroke","restore","barData","d","rect","barWidth","barHeight","globalAlpha","fill","points","scale","arguments","globalBarWidth","globalBarPercentage","legendLen","tickWidth","pointWidth","pointIntervalWidth","totalStandardPercentage","Math","max","concat","Number","_standardPercentage","standardPercentage","barIntervalWidth","legendOpt","frontBarWidth","slice","reduce","acc","cur","datas","Null","Undefined","xPoint","yPoint","xPointInstance","_getStackPoint","sumNeg","sumPos","stackedVal","j","xDatasets","xScaleAxisDatas","yDatasets","yScaleAxisDatas","_me$wxCrossScale$draw","tickLimits","calculateTickLimit","_visDatasets$reduce","pre","min","curValue","buildDatasets","_ret","v","xScaleConfig","item","tmp","_getLegendConfig","set","../core/layout","../core/legend","../core/scale","../core/title","../scale/scale.category","../scale/scale.crosshelp","../scale/scale.liner","../util/helper","../util/randomColor","../util/tinycolor","../util/wxCanvas","./wxChart","2","WX_DOUGHNUT_DEFAULT_CONFIG","cutoutPercentage","rotation","PI","padding","labelDistancePercentage","WX_DOUGHNUT_ITEM_DEFAULT_CONFIG","fontSize","percentage","WxDoughnut","rBorderColor","legendDatasets","backgroundColor","push","hidden","width","height","_box","outerWidth","outerHeight","minSize","outerRadius","totalValue","calculateTotal","longestLabelWidth","_longestLabel","maximalFontSize","_maximalLabelFontSize","shouldSpace","widthSpace","innerRadius","pointX","pointY","drawAngle","initAvoidCollision","startAngle","endAngle","opt","drawData","drawLabel","options","currentRadius","arc","closePath","lineJoin","format","centerAngle","startX","cos","startY","sin","offsetRadius","turnRadius","turnX","turnY","adjustPoint","avoidCollision","textLen","measureText","endX","endY","textX","textY","fillText","maxLabelWidth","_lastPoint","newPoint","centerPoint","avoidUnit","cpx","lpx","lpy","npx","npy","abs","ny","3","WX_LINE_LEGEND_DEFAULT_CONFIG","spanGaps","tension","WX_LINER_DEFAULT_CONFIG","WX_LINER_ITEM_DEFAULT_CONFIG","pointRadius","pointStyle","pointBorderWidth","pointBorderColor","WxLiner","lineConfigs","xAxisPoint","yAxisPoint","line","_drawLine","lineData","lineToPoint","p","next","controlPoints","splineCurve","bezierCurveTo","previous","getNextPoint","nextDate","firstPoint","currPoint","xAxisY","fillInHere","pointStack","4","wxChartInstances","_wxCanvas2","wxChartDefaultConfig","chartConf","canvas","getContext","isWeiXinAPP","checkWX","uid","_config","initConfig","initContext","console","error","cvWidth","cvHeight","aspectRatio","toFixed","retinaScale","innerBox","BoxInstance","clearRect","fillRect","clear","releaseContext","defaultItemOpt","_datasets","_visDatasets","total","parseFloat","NaN","filter","val","5","WxBaseComponent","wxChart","defaultOptions","init","calculateBox","isVisiable","redraw","../charts/wxChart","./layout","6","_base","_base2","margin","boxInstance","ey","lx","ly","rx","ry","marginLR","marginTB","WxLayout","_boxs","parseInt","boxId","splice","indexOf","clone","./base","7","WX_LEGEND_DEFAULT_CONFIG","fullWidth","boxWidth","WX_LEGEND_DEFAULT_ITEM_CONFIG","WxLegend","_WxBaseComponent","calculateLegendItem","labelsConfig","textWidth","_prop","boxHeight","isHorizontal","lineNum","currentLineWidth","maxLineWidth","prop","warn","_ret2","match","align","wh","currentLineNum","currentX","currentY","lineCap","_dataset$_prop","textBaseline","textAlign","thisX","strokeRect","8","WX_SCALE_DEFAULT_CONFIG","extendLeft","extendTop","titleFontSize","titleFontColor","gridLines","ticks","autoSkip","fontColor","minRotation","maxRotation","WX_SCALE_DEFAULT_ITEM_CONFIG","WxScale","tick","maxTextLen","getTicksText","fixPadding","visTicks","firstTickText","lastTickText","calculateFixPadding","minWidth","minHeight","maxWidth","maxHeight","minFontRotation","toRadians","maxFontRotation","fontRadians","lineSpace","longestText","acos","asin","titleWidth","ticketWidth","defaultLineWidth","totalLineWidth","sum","innerWidth","calculateTitleWidth","innerHeight","titleHeight","offset","baseX","_getTicksLineWidthOffset","sx","sy","_initDrawATickText","translate","rotate","tickConfig","_me$getTicksPosition","getTicksPosition","currX","currY","_drawATickLine","_lineSpace","9","WX_TITLE_DEFAULT_CONFIG","WxTitle","10","_scale2","WxCategoryScale","_WxScale","maxIndex","minIndex","buildTicks","11","WX_CROSSSCALE_CONFIG","WxCrossScale","yScaleDatasets","_me$config","yMHeight","xMWidth","xOffset","xExtendLeft","xAxisXPoint","calXbox","setBox","12","WxLinerScale","maxTicks","stepSize","spacing","niceRange","niceNum","niceMin","floor","niceMax","ceil","numSpaces","almostEquals","round","scaleOptions","reverse","tickOpts","maxTicksLimit","startVal","endVal","range","realWidth","realHeight","13","args","b","_assignGenerator","own","_copy","deep","_len","source","_key","Boolean","shift","sc","_target","hasOwnProperty","so","to","wx","wxConverToPx","windowSize","getWindowSize","m","rpxReg","windowWidth","remReg","degrees","toDegrees","radians","windowHeight","ret","getSystemInfoSync","getDPR","pixelRatio","devicePixelRatio","exponent","log10","fraction","pow","niceFraction","epsilon","middlePoint","afterPoint","current","d01","sqrt","d12","s01","s12","isNaN","fa","fb","getStyle","element","currentStyle","document","defaultView","getComputedStyle","getPropertyValue","readUsedSize","matches","style","ObjProto","name","type","class2type","hasOwn","fnToString","ObjectFunctionString","proto","Ctor","REG_HANZI","REG_ALPHABET","REG_NUMBER","REG_ALPHABET_NUMBER","extendOwn","14","pickHue","hueRange","getHueRange","randomWithin","pickSaturation","saturationRange","getSaturationRange","sMin","sMax","pickBrightness","H","S","bMin","getMinimumBrightness","bMax","setFormat","hsv","HSVtoHSL","hsl","hslColor","alpha","random","HSVtoRGB","rgb","join","rgbColor","HSVtoHex","lowerBounds","getColorInfo","s1","v1","s2","v2","colorInput","number","colorDictionary","colorName","seed","rnd","componentToHex","c","hex","defineColor","brightnessRange","loadColorBounds","h","h_i","q","result","k","stringToInteger","string","MAX_SAFE_INTEGER","charCodeAt","randomColor","B","totalColors","colors","15","tinycolor","opts","inputToRGB","_originalInput","_r","_g","_b","_a","_roundA","mathRound","_format","_gradientType","gradientType","_ok","ok","_tc_id","tinyCounter","stringInputToObject","isValidCSSUnit","rgbToRgb","substr","convertToPercentage","hsvToRgb","hslToRgb","boundAlpha","mathMin","mathMax","bound01","rgbToHsl","hue2rgb","rgbToHsv","mod","rgbToHex","allow3Char","pad2","charAt","rgbaToHex","allow4Char","convertDecimalToHex","rgbaToArgbHex","_desaturate","amount","toHsl","clamp01","_saturate","_greyscale","desaturate","_lighten","_brighten","toRgb","_darken","_spin","_complement","_triad","_tetrad","_splitcomplement","_analogous","results","slices","part","_monochromatic","toHsv","modification","flip","flipped","isOnePointZero","processPercent","isPercentage","parseIntFromHex","convertHexToDecimal","matchers","CSS_UNIT","exec","replace","trimLeft","trimRight","toLowerCase","named","names","rgba","hsla","hsva","hex8","hex6","hex4","hex3","validateWCAG2Parms","parms","level","size","toUpperCase","mathRandom","isDark","getBrightness","isLight","isValid","getOriginalInput","getFormat","getAlpha","getLuminance","RsRGB","GsRGB","BsRGB","R","G","setAlpha","toHsvString","toHslString","toHex","toHexString","toHex8","toHex8String","toRgbString","toPercentageRgb","toPercentageRgbString","toName","hexNames","toFilter","secondColor","hex8String","secondHex8String","formatSet","formattedString","hasAlpha","needsAlphaFormat","_applyModification","fn","lighten","brighten","saturate","greyscale","spin","_applyCombination","analogous","complement","monochromatic","splitcomplement","triad","tetrad","fromRatio","newColor","equals","color1","color2","mix","rgb1","rgb2","readability","c1","c2","isReadable","wcag2","wcag2Parms","out","mostReadable","baseColor","colorList","includeFallbackColors","bestColor","bestScore","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","CSS_INTEGER","CSS_NUMBER","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","RegExp","16","WxCanvasRenderingContext2D","WX_CANVAS_DEFAULT_PROPERTY","WX_CANVAS_CTX_DEFAULT_PROPERTY","miterLimit","shadowBlur","shadowOffsetX","shadowOffsetY","shadowColor","font","WX_BASE_TEXT_SIZE","pxReg","WxCanvas","contextOptions","_acquireContext","acquireContext","context","_canvas","_ctx","wxCanvasRenderingContext2D","createCanvasContext","getElementById","HTMLCanvasElement","initCanvas","renderHeight","renderWidth","getAttribute","displayWidth","displayHeight","initial","removeAttribute","setAttribute","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","done","err","return","str","_ctxOptions","_propertyCache","cp","createStyleProperty","createShadowsProperty","createTextProperty","createLineProperty","createRectProperty","createGradientProperty","createPathProperty","createTransformationProperty","createGlobalAlphaProperty","nProperty","pop","propertyName","wxSetName","setWX","styleProperty","_wxSetPropertyCallable","setShadow","_wxSetProperty","setFontSize","currentFont","hanzi","hanziNum","otherNum","baseNum","culY","culX","_calculateYForTextBaseline","_calculateXFortextAlign","_len2","_key2","_me$_ctx","strokeText","smProperty","functionName","_me$_ctx2","_me$_ctx3","x0","y0","r0","x1","y1","r1","createCircularGradient","createRadialGradient","_me$_ctx4","_me$_ctx5","_me$_ctx6","clip","_me$_ctx7","_me$_ctx8","transform","ctu","./helper","17","_doughnut","_doughnut2","_liner","_liner2","_bar","_bar2","../src/charts/bar","../src/charts/doughnut","../src/charts/liner","./charts/wxChart"],"mappings":"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","file":"wx-chart.min.js","sourcesContent":["\"use strict\";\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function (f) {\n    if ((typeof exports === \"undefined\" ? \"undefined\" : _typeof2(exports)) === \"object\" && typeof module !== \"undefined\") {\n        module.exports = f();\n    } else if (typeof define === \"function\" && define.amd) {\n        define([], f);\n    } else {\n        var g;if (typeof window !== \"undefined\") {\n            g = window;\n        } else if (typeof global !== \"undefined\") {\n            g = global;\n        } else if (typeof self !== \"undefined\") {\n            g = self;\n        } else {\n            g = this;\n        }g.WxChart = f();\n    }\n})(function () {\n    var define, module, exports;return function e(t, n, r) {\n        function s(o, u) {\n            if (!n[o]) {\n                if (!t[o]) {\n                    var a = typeof require == \"function\" && require;if (!u && a) return a(o, !0);if (i) return i(o, !0);var f = new Error(\"Cannot find module '\" + o + \"'\");throw f.code = \"MODULE_NOT_FOUND\", f;\n                }var l = n[o] = { exports: {} };t[o][0].call(l.exports, function (e) {\n                    var n = t[o][1][e];return s(n ? n : e);\n                }, l, l.exports, e, t, n, r);\n            }return n[o].exports;\n        }var i = typeof require == \"function\" && require;for (var o = 0; o < r.length; o++) {\n            s(r[o]);\n        }return s;\n    }({ 1: [function (require, module, exports) {\n            /* global module, wx, window: false, document: false */\n            'use strict';\n\n            Object.defineProperty(exports, \"__esModule\", {\n                value: true\n            });\n\n            var _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n                return typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n            } : function (obj) {\n                return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n            };\n\n            var _createClass = function () {\n                function defineProperties(target, props) {\n                    for (var i = 0; i < props.length; i++) {\n                        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }return function (Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n                };\n            }();\n\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;if (getter === undefined) {\n                        return undefined;\n                    }return getter.call(receiver);\n                }\n            };\n\n            var _wxCanvas = require('../util/wxCanvas');\n\n            var _wxCanvas2 = _interopRequireDefault(_wxCanvas);\n\n            var _wxChart = require('./wxChart');\n\n            var _wxChart2 = _interopRequireDefault(_wxChart);\n\n            var _title = require('../core/title');\n\n            var _title2 = _interopRequireDefault(_title);\n\n            var _scale = require('../core/scale');\n\n            var _scale2 = _interopRequireDefault(_scale);\n\n            var _scale3 = require('../scale/scale.liner');\n\n            var _scale4 = _interopRequireDefault(_scale3);\n\n            var _scale5 = require('../scale/scale.crosshelp');\n\n            var _scale6 = _interopRequireDefault(_scale5);\n\n            var _scale7 = require('../scale/scale.category');\n\n            var _scale8 = _interopRequireDefault(_scale7);\n\n            var _legend = require('../core/legend');\n\n            var _legend2 = _interopRequireDefault(_legend);\n\n            var _layout = require('../core/layout');\n\n            var _layout2 = _interopRequireDefault(_layout);\n\n            var _helper = require('../util/helper');\n\n            var _tinycolor = require('../util/tinycolor');\n\n            var _tinycolor2 = _interopRequireDefault(_tinycolor);\n\n            var _randomColor = require('../util/randomColor');\n\n            var _randomColor2 = _interopRequireDefault(_randomColor);\n\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : { default: obj };\n            }\n\n            function _toConsumableArray(arr) {\n                if (Array.isArray(arr)) {\n                    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n                        arr2[i] = arr[i];\n                    }return arr2;\n                } else {\n                    return Array.from(arr);\n                }\n            }\n\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n\n            function _possibleConstructorReturn(self, call) {\n                if (!self) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof2(call)) === \"object\" || typeof call === \"function\") ? call : self;\n            }\n\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof2(superClass)));\n                }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n\n            // Bar legend's default config\n            var WX_BAR_LEGEND_DEFAULT_CONFIG = {\n                borderWidth: 1,\n                fillArea: true,\n                fillAlpha: 0.5,\n                display: true,\n                // barWidth: 'auto' //Set each bar's width. If not set, the bars are sized automatically.\n                barPercentage: 0.8 // Percent (0-1) of the available width each bar should be within the data point space,like the flexible layout~\n                // fillStyle\n                // strokeStyle\n            };\n            // Bar default config\n            var WX_BAR_DEFAULT_CONFIG = {\n                minBetweenPixel: 5, // The minisize space between each bar.\n                pointPercentage: 0.8, // Percent (0-1) of the space for each data point\n                stacked: false, // If true, bars are stacked on the x-axis\n                zeroLine: false,\n                // barPercentage: 0.8 // If stacked is true, global \"barPercentage\" setting will be effective. Otherwise, legend's setting priorities.\n                // Scale options\n                xScaleOptions: {\n                    position: 'bottom'\n                },\n                xScaleItemOptions: undefined,\n                yScaleOptions: {\n                    position: 'left'\n                },\n                yScaleItemOptions: undefined,\n                crossScaleOptions: {\n                    xMargin: function xMargin(xBox, yBox, area, xScale, yScale, xScaleDatasets) {\n                        return xScale.calculateTickWidth(xScaleDatasets, xBox);\n                    },\n                    xFirstPointSpace: 0\n                },\n                // The title text or a title config object\n                title: undefined,\n\n                // The legend of line chart\n                legends: [], // borderWidth, fillArea, fillAlpha can be set in here\n                legendOptions: {\n                    'position': 'bottom'\n                },\n\n                // The randomColor scheme\n                // See https://github.com/davidmerfield/randomColor\n                color: {\n                    hue: 'red',\n                    luminosity: 'light'\n                },\n\n                // The dataset's default key\n                defaultKey: 'value'\n            };\n\n            var WX_BAR_ITEM_DEFAULT_CONFIG = {\n                //borderWidth: 1,\n                //fillArea: true,\n                //fillAlpha: 0.5,\n                //strokeStyle: '#ffffff',\n                display: true\n            };\n\n            var WxBar = function (_WxChart) {\n                _inherits(WxBar, _WxChart);\n\n                /**\r\n                * WxBar chart\r\n                * @constructor\r\n                * @param {string} id - The canvas element's id\r\n                * @param {Object} config\r\n                * @param {number} [config.width=300] - The width of canvas.\r\n                * @param {number} [config.height=200] - The height of canvas.\r\n                * @param {number} [config.padding=] - The padding of canvas.\r\n                * @param {string} [config.display=block] - The display style of chart.\r\n                *\r\n                * @param {Object} config.legendOptions=[] - The legend & label options.You should set 'key' to bind the attribute in datasets which is the value of the point.\r\n                * @param {(string|Object)} [config.title=] - The title text or title options of chart.\r\n                * @example\r\n                *datasets:[{\r\n                *  valueA: 30,\r\n                *  valueB: 40,\r\n                *  label: '一月'\r\n                * }, {\r\n                *  valueA: 20,\r\n                *  valueB: 50,\r\n                *  pointRadius: 2,\r\n                *  label: '二月'\r\n                *},...]\r\n                *\r\n                * legends: [{\r\n                *   'text': 'valueA Text',\r\n                *   'key': 'valueA',\r\n                *   'strokeStyle': '#3385ff',\r\n                *   'barPercentage': 0.8\r\n                * }, {\r\n                *   text: 'valueB Text',\r\n                *   key: 'valueB'\r\n                * }]\r\n                */\n                function WxBar(id, config) {\n                    _classCallCheck(this, WxBar);\n\n                    var _this = _possibleConstructorReturn(this, (WxBar.__proto__ || Object.getPrototypeOf(WxBar)).call(this, id, config));\n\n                    var me = _this;\n                    me.chartConfig = (0, _helper.extend)({}, WX_BAR_DEFAULT_CONFIG, config);\n\n                    me.title = null;\n                    // Initialize title and legend\n                    if (me.chartConfig.title) {\n                        me.title = new _title2.default(me, _helper.is.PureObject(me.chartConfig.title) ? me.chartConfig.title : null);\n                        me.titleText = _helper.is.String(me.chartConfig.title) ? me.chartConfig.title : me.chartConfig.title.text;\n                    }\n\n                    // Initialize legend\n                    me.legend = new _legend2.default(me, me.chartConfig.legendOptions);\n\n                    // Initialize x,y Scale\n                    me.yAxis = new _scale4.default(me, me.chartConfig.yScaleOptions);\n                    me.xAxis = new _scale8.default(me, me.chartConfig.xScaleOptions);\n                    me.wxCrossScale = new _scale6.default(me.xAxis, me.yAxis, me.chartConfig.crossScaleOptions);\n                    me.wxLayout = new _layout2.default(me);\n                    return _this;\n                }\n\n                // Get/Set labels\n\n\n                _createClass(WxBar, [{\n                    key: '_getLegendConfig',\n\n                    /**\r\n                     * Build legends config\r\n                     * @private\r\n                     */\n                    value: function _getLegendConfig() {\n                        var me = this,\n                            defaultKey = me.chartConfig.defaultKey || 'value',\n                            legendsConfig = me.chartConfig.legends;\n                        if (!legendsConfig) {\n                            if (me.labels && me.labels.length) {\n                                legendsConfig = me.labels.map(function (label) {\n                                    return { 'text': label, 'key': defaultKey };\n                                });\n                            } else {\n                                throw new Error('Can not get legend config!');\n                            }\n                        } else {\n                            legendsConfig = legendsConfig.map(function (legend) {\n                                return (0, _helper.extend)(true, {\n                                    'key': defaultKey\n                                }, legend);\n                            });\n                        }\n                        return legendsConfig;\n                    }\n                    /**\r\n                     * Update a datesets of chart and reDraw\r\n                     * @param {Object} datasets - data sets\r\n                     * @param {string} [datasets[].display] - Disaply the bar or not\r\n                     * @param {string} [datasets[].borderWidth=1] - Bar's border width\r\n                     * @param {string} [datasets[].strokeStyle] - Bar's border color\r\n                     * @param {number} [datasets[].fillArea=true] - Fill color or not\r\n                     * @param {number} [datasets[].fillAlpha=0.6] - Fill color Alpha\r\n                     * @param {number} [datasets[].fillStyle] - Fill color. The default color will randomly assigned by 'color' option.\r\n                     * @returns {*}\r\n                     */\n\n                }, {\n                    key: 'update',\n                    value: function update(datasets) {\n                        var me = this;\n                        me._labels = null;\n                        me._legends = null;\n                        _get(WxBar.prototype.__proto__ || Object.getPrototypeOf(WxBar.prototype), 'update', this).call(this, datasets, WX_BAR_ITEM_DEFAULT_CONFIG);\n                        me.wxLayout.removeAllBox();\n                        return me.draw();\n                    }\n                    /**\r\n                     * Draw chart\r\n                     */\n\n                }, {\n                    key: 'draw',\n                    value: function draw() {\n                        var box = void 0,\n                            me = this,\n                            ctx = me.ctx,\n                            wxLayout = me.wxLayout;\n                        var _me$chartConfig = me.chartConfig,\n                            pointPercentage = _me$chartConfig.pointPercentage,\n                            minBetweenPixel = _me$chartConfig.minBetweenPixel,\n                            stacked = _me$chartConfig.stacked,\n                            color = _me$chartConfig.color,\n                            zeroLine = _me$chartConfig.zeroLine;\n\n                        // First, we draw title\n\n                        box = wxLayout.adjustBox();\n                        if (me.title) {\n                            me.title.update(me.titleText, box);\n                            wxLayout.addBox(me.title.box);\n                        }\n\n                        // Second, random color and get legend datasets\n                        box = wxLayout.adjustBox();\n                        var rColors = (0, _randomColor2.default)((0, _helper.extend)(true, {}, color, { count: me.legends.length }));\n\n                        me.legends = me.legends.map(function (legend, index) {\n                            if (!legend.strokeStyle) {\n                                legend.strokeStyle = legend.borderColor || (0, _tinycolor2.default)(rColors[index]).darken(10).toString();\n                            }\n\n                            return (0, _helper.extend)(true, {\n                                fillStyle: rColors[index]\n                            }, WX_BAR_LEGEND_DEFAULT_CONFIG, legend);\n                        });\n                        me.legend.update(me.legends, box);\n                        wxLayout.addBox(me.legend.box);\n\n                        // Thirdly, draw scale\n                        me._drawScale();\n\n                        // Calculate bar ruler\n                        me.barRuler = me.calculateBarRuler();\n                        // Finally, draw bar\n                        var hasNeg = false;\n                        var barConfigs = me.legends.map(function (legend, legendIndex) {\n                            var config = {\n                                legend: legend\n                            };\n                            var key = legend.key;\n                            config.dataset = me.visDatasets.map(function (data, index) {\n                                hasNeg = hasNeg || data[key] < 0;\n                                return {\n                                    value: data[key],\n                                    data: data,\n                                    point: me.calculateBarRect(index, legendIndex)\n                                };\n                            });\n                            return config;\n                        });\n\n                        barConfigs.forEach(function (bar) {\n                            return me._drawBar(bar, hasNeg);\n                        });\n\n                        // zero line\n                        if (zeroLine) {\n                            ctx.save();\n                            ctx.fillStyle = me.xAxis.config.color;\n                            ctx.lineWidth = me.xAxis.config.lineWidth;\n\n                            var baseY = me.yAxis.getPoint(0).y;\n                            var beginPoint = [me.xAxis.getPoint(-1).x, baseY],\n                                endPoint = [me.xAxis.box.ex, baseY];\n                            ctx.beginPath();\n                            ctx.moveTo.apply(ctx, beginPoint);\n                            ctx.lineTo.apply(ctx, endPoint);\n                            ctx.stroke();\n                            ctx.restore();\n                        }\n                    }\n\n                    /**\r\n                     * Draw one line\r\n                     * @param {Object} barData - Line dataset\r\n                     * @param {Object} barData.legend - Legend's config\r\n                     * @param {Object[]} barData[].value - Data of each line point\r\n                     * @param {Object[]} barData[].data - The data object\r\n                     * @param {Object[]} barData[].point - The point for rending.\r\n                     * @private\r\n                     */\n\n                }, {\n                    key: '_drawBar',\n                    value: function _drawBar(barData, hasNeg) {\n                        var me = this,\n                            stacked = me.chartConfig.stacked,\n                            ctx = me.ctx;\n                        var legend = barData.legend,\n                            dataset = barData.dataset;\n                        var display = legend.display,\n                            borderWidth = legend.borderWidth,\n                            fillStyle = legend.fillStyle,\n                            strokeStyle = legend.strokeStyle,\n                            fillArea = legend.fillArea,\n                            fillAlpha = legend.fillAlpha;\n\n                        if (!display) {\n                            return;\n                        }\n\n                        ctx.save();\n                        ctx.fillStyle = fillStyle;\n                        ctx.strokeStyle = strokeStyle;\n                        ctx.lineWidth = borderWidth;\n\n                        dataset.forEach(function (d) {\n                            ctx.beginPath();\n                            var value = d.value,\n                                data = d.data,\n                                point = d.point;\n\n                            if (stacked && hasNeg) {\n                                ctx.rect(point.x, point.y, point.barWidth, point.barHeight);\n                                if (borderWidth) {\n                                    ctx.stroke();\n                                }\n                                if (fillArea) {\n                                    ctx.globalAlpha = fillAlpha;\n                                    ctx.fill();\n                                    ctx.globalAlpha = 1;\n                                }\n                            } else {\n                                // | 1 2 |\n                                // | 0 3 |\n                                var points = [[point.x, point.y + point.barHeight], [point.x, point.y], [point.x + point.barWidth, point.y], [point.x + point.barWidth, point.y + point.barHeight]];\n\n                                ctx.moveTo.apply(ctx, _toConsumableArray(points[0]));\n                                ctx.lineTo.apply(ctx, _toConsumableArray(points[1]));\n                                ctx.lineTo.apply(ctx, _toConsumableArray(points[2]));\n                                ctx.lineTo.apply(ctx, _toConsumableArray(points[3]));\n\n                                if (borderWidth) {\n                                    ctx.stroke();\n                                }\n                                if (fillArea) {\n                                    ctx.globalAlpha = fillAlpha;\n                                    ctx.fill();\n                                    ctx.globalAlpha = 1;\n                                }\n                            }\n                        });\n\n                        ctx.draw();\n                        ctx.restore();\n                    }\n\n                    /**\r\n                     * Bar's render ruler\r\n                     * @typedef {Object} BarRuler\r\n                     * @property {number} tickWidth - The width of one ticket.\r\n                     * @property {number} pointPercentage - Percent (0-1) of the space for each data point\r\n                     * @property {number} pointWidth - The width of each data point\r\n                     * @property {number} pointIntervalWidth - The remaining width of the space for each data point\r\n                     * @property {number} barIntervalWidth - The remaining width of each bar\r\n                     * @property {Object[]} legends - legends's setting\r\n                     * @property {number} legends.barPercentage - Percent (0-1) of the available width each bar should be within the data point space\r\n                     * @property {number} legends._standardPercentage - The real percent of the available with at each point scope\r\n                     * @property {number} legends.barWidth - The width of bar\r\n                     */\n\n                    /**\r\n                     * Calculate the bar's base ruler\r\n                     * @param {WxScale} [scale=this.xAxis] - Bar's scale\r\n                     * @return {BarRuler} Bar ruler\r\n                     */\n\n                }, {\n                    key: 'calculateBarRuler',\n                    value: function calculateBarRuler() {\n                        var scale = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.xAxis;\n\n                        var me = this;\n                        var globalBarWidth = void 0,\n                            globalBarPercentage = me.chartConfig.barPercentage,\n                            pointPercentage = me.chartConfig.pointPercentage,\n                            stacked = me.chartConfig.stacked,\n                            legends = me.legends;\n                        var legendLen = legends.length;\n\n                        var tickWidth = scale.calculateTickWidth();\n                        // One scale's point space\n                        var pointWidth = tickWidth * pointPercentage;\n                        var pointIntervalWidth = (tickWidth - pointWidth) / 2;\n\n                        // Standardization every bar's percentage\n                        var totalStandardPercentage = 0;\n                        if (!globalBarPercentage) {\n                            globalBarPercentage = stacked ? Math.max.apply(Math, _toConsumableArray(legends.map(function (x) {\n                                return x.barPercentage || 0.8;\n                            }))) || 0.8 : 0.8;\n                        }\n                        globalBarWidth = Math.max.apply(Math, _toConsumableArray([globalBarPercentage * pointWidth].concat(legends.map(function (x) {\n                            return _helper.is.Number(x.barWidth) ? x.barWidth : 0;\n                        }))));\n\n                        legends.forEach(function (legend) {\n                            if (stacked) {\n                                legend.barWidth = globalBarWidth;\n                                legend.barPercentage = globalBarPercentage;\n                                legend._standardPercentage = globalBarPercentage / legendLen;\n                            } else {\n                                var standardPercentage = void 0;\n                                var barPercentage = legend.barPercentage ? legend.barPercentage > 1 ? 1.0 : legend.barPercentage : globalBarPercentage;\n\n                                if (legend.barWidth) {\n                                    // Bar fixed width...\n                                    standardPercentage = legend.barWidth / tickWidth;\n                                } else {\n                                    standardPercentage = barPercentage / legendLen;\n                                    legend.barWidth = pointWidth * standardPercentage;\n                                }\n                                totalStandardPercentage += standardPercentage;\n                                legend._standardPercentage = standardPercentage;\n                            }\n                        });\n\n                        // Check total percentage\n                        if (totalStandardPercentage > 1) {\n                            throw Error('Bar\\'s width too large!');\n                        } else if (stacked) {\n                            totalStandardPercentage = globalBarPercentage;\n                        }\n\n                        var barIntervalWidth = legendLen > 1 ? pointWidth * (1 - totalStandardPercentage) / (legendLen - 1) : pointWidth * (1 - totalStandardPercentage);\n\n                        return { tickWidth: tickWidth, pointPercentage: pointPercentage, pointWidth: pointWidth, pointIntervalWidth: pointIntervalWidth, legends: legends, barIntervalWidth: barIntervalWidth };\n                    }\n\n                    /**\r\n                     * Calculate the box of one \"rect\"\r\n                     * @param {number} index - The index of item\r\n                     * @param {number} legendIndex - The index of legend\r\n                     * @param {WxScale} [xScale=this.xAxis] - Bar's x-axis\r\n                     * @param {WxScale} [yScale=this.yAxis] - Bar's x-axis\r\n                     */\n\n                }, {\n                    key: 'calculateBarRect',\n                    value: function calculateBarRect(index, legendIndex) {\n                        var xScale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.xAxis;\n                        var yScale = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this.yAxis;\n\n                        var me = this,\n                            stacked = me.chartConfig.stacked,\n                            barRuler = me.barRuler || me.calculateBarRuler(xScale);\n\n                        var legendOpt = me.legends[legendIndex];\n                        if (!legendOpt) {\n                            return;\n                        }\n                        // Calculate the bar's width in front of this legend\n                        var frontBarWidth = me.legends.slice(0, legendIndex).reduce(function (acc, cur) {\n                            return acc + cur.barWidth;\n                        }, 0);\n                        var datas = me.visDatasets[index];\n                        var value = legendOpt.key && typeof datas[legendOpt.key] !== 'undefined' ? datas[legendOpt.key] : null;\n                        if (_helper.is.Null(value) || _helper.is.Undefined(value)) {\n                            return;\n                        }\n\n                        var xPoint = void 0,\n                            yPoint = void 0,\n                            barWidth = void 0,\n                            barHeight = void 0;\n                        var xPointInstance = xScale.getPoint(index);\n                        if (stacked) {\n                            xPoint = xPointInstance.x - barRuler.pointWidth / 2 + barRuler.barIntervalWidth / 2;\n                            yPoint = me._getStackPoint(index, legendIndex, barRuler).y;\n                            barWidth = legendOpt.barWidth;\n\n                            var baseY = yScale.getPoint(0).y;\n                            barHeight = value < 0 ? value / legendOpt.sumNeg * (yScale.getPoint(legendOpt.sumNeg).y - baseY) : value / legendOpt.sumPos * (baseY - yScale.getPoint(legendOpt.sumPos).y);\n                        } else {\n                            xPoint = xPointInstance.x - barRuler.pointWidth / 2 + frontBarWidth + barRuler.barIntervalWidth / 2 * (legendIndex + 1);\n                            yPoint = yScale.getPoint(value).y;\n                            barWidth = legendOpt.barWidth;\n                            barHeight = xPointInstance.y - yPoint;\n                        }\n\n                        return { x: xPoint, y: yPoint, barWidth: barWidth, barHeight: barHeight };\n                    }\n\n                    /**\r\n                     * Calculate the stack bar\r\n                     * @param {number} index - The index of item\r\n                     * @param {Object} legendIndex - The index of legend\r\n                     * @param {BarRuler} barRuler\r\n                     * @param {WxScale} [yScale=this.yAxis] - Y-Axis instance\r\n                     * @retrun {Object}\r\n                     * @private\r\n                     */\n\n                }, {\n                    key: '_getStackPoint',\n                    value: function _getStackPoint(index, legendIndex, barRuler) {\n                        var yScale = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this.yAxis;\n\n                        var me = this,\n                            data = me.visDatasets[index],\n                            value = data[me.legends[legendIndex].key];\n\n                        var stackedVal = void 0,\n                            sumNeg = 0,\n                            sumPos = 0;\n                        for (var j = 0; j < legendIndex; j++) {\n                            stackedVal = data[me.legends[j].key];\n                            if (stackedVal < 0) {\n                                sumNeg += stackedVal || 0;\n                            } else {\n                                sumPos += stackedVal || 0;\n                            }\n                        }\n                        // let stackedVal, sumNeg = 0, sumPos = 0;\n                        // for (let i = 0; i < index; i++) {\n                        //     let data = me.visDatasets[i];\n                        //     for (let j = 0; j < legendIndex; j++) {\n                        //         stackedVal = data[me.legends[j].key];\n                        //         if (stackedVal < 0) {\n                        //             sumNeg += stackedVal || 0;\n                        //         } else {\n                        //             sumPos += stackedVal || 0;\n                        //         }\n                        //     }\n                        // }\n\n                        return value < 0 ? yScale.getPoint(sumNeg) : yScale.getPoint(sumPos + value);\n                    }\n\n                    /**\r\n                     * Draw the scale of chart\r\n                     *\r\n                     * @private\r\n                     */\n\n                }, {\n                    key: '_drawScale',\n                    value: function _drawScale() {\n                        var box = void 0,\n                            me = this,\n                            wxLayout = me.wxLayout;\n\n                        box = wxLayout.adjustBox();\n                        var xDatasets = me.xScaleAxisDatas(),\n                            yDatasets = me.yScaleAxisDatas(box);\n\n                        var _me$wxCrossScale$draw = me.wxCrossScale.draw(box, xDatasets, yDatasets),\n                            xBox = _me$wxCrossScale$draw.xBox,\n                            yBox = _me$wxCrossScale$draw.yBox;\n\n                        wxLayout.addBox(xBox);\n                        wxLayout.addBox(yBox);\n                    }\n\n                    /**\r\n                     * Build the yAxis datasets\r\n                     * @param {BoxInstance} area - The area of chart\r\n                     */\n\n                }, {\n                    key: 'yScaleAxisDatas',\n                    value: function yScaleAxisDatas(area) {\n                        var me = this,\n                            stacked = me.chartConfig.stacked,\n                            ctx = me.ctx;\n                        var yScaleItemOptions = me.chartConfig.yScaleItemOptions;\n                        var tickLimits = me.yAxis.calculateTickLimit(area, ctx);\n\n                        if (stacked) {\n                            var _ret = function () {\n                                var min = 0,\n                                    max = 0;\n                                me.legends.forEach(function (legend) {\n                                    var key = legend.key;\n                                    var sumNeg = 0,\n                                        sumPos = 0;\n                                    me.visDatasets.forEach(function (data) {\n                                        var stackedVal = data[key];\n                                        if (stackedVal < 0) {\n                                            sumNeg += stackedVal || 0;\n                                        } else {\n                                            sumPos += stackedVal || 0;\n                                        }\n                                    });\n                                    if (sumNeg < min) min = sumNeg;\n                                    if (sumPos > max) max = sumPos;\n                                    legend.sumNeg = sumNeg;\n                                    legend.sumPos = sumPos;\n                                });\n                                return {\n                                    v: me.yAxis.buildDatasets(max, min, tickLimits, undefined, yScaleItemOptions)\n                                };\n                            }();\n\n                            if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n                        } else {\n                            // First, get all available values and calculate the max/min value\n                            var _visDatasets$reduce = this.visDatasets.reduce(function (pre, cur) {\n                                var max = pre.max,\n                                    min = pre.min;\n\n                                if (cur.display) {\n                                    var curValue = me.legends.map(function (legend) {\n                                        if (legend.key) {\n                                            return cur[legend.key] || 0;\n                                        }\n                                    }).concat(max, min);\n                                    max = Math.max.apply(Math, _toConsumableArray(curValue));\n                                    min = Math.min.apply(Math, _toConsumableArray(curValue));\n                                }\n                                return { max: max, min: min };\n                            }, {\n                                max: 0,\n                                min: 0\n                            }),\n                                max = _visDatasets$reduce.max,\n                                min = _visDatasets$reduce.min;\n\n                            return me.yAxis.buildDatasets(max, min, tickLimits, undefined, yScaleItemOptions);\n                        }\n                    }\n\n                    /**\r\n                     * Build the xAxis datasets\r\n                     */\n\n                }, {\n                    key: 'xScaleAxisDatas',\n                    value: function xScaleAxisDatas() {\n                        var me = this;\n                        var xScaleItemOptions = me.chartConfig.xScaleItemOptions;\n                        var xScaleConfig = me.labels.map(function (label) {\n                            var item = {\n                                'text': label\n                            };\n                            if (typeof xScaleItemOptions !== 'undefined') {\n                                item = (0, _helper.extend)(item, xScaleItemOptions);\n                            }\n                            return item;\n                        });\n\n                        return me.xAxis.buildDatasets(xScaleConfig);\n                    }\n                }, {\n                    key: 'labels',\n                    get: function get() {\n                        var me = this,\n                            tmp = void 0;\n                        if (me._labels) {\n                            return me._labels;\n                        } else if (tmp = me.chartConfig.labels) {\n                            if (_helper.is.Array(tmp)) {\n                                return tmp;\n                            }\n                        }\n                        me._labels = me.visDatasets.map(function (dataset) {\n                            return dataset.label;\n                        });\n                        return me._labels;\n                    }\n                }, {\n                    key: 'legends',\n                    get: function get() {\n                        var me = this;\n                        if (!me._legends) {\n                            me._legends = me._getLegendConfig();\n                        }\n                        return me._legends;\n                    },\n                    set: function set(value) {\n                        this._legends = value;\n                    }\n                }]);\n\n                return WxBar;\n            }(_wxChart2.default);\n\n            exports.default = WxBar;\n        }, { \"../core/layout\": 6, \"../core/legend\": 7, \"../core/scale\": 8, \"../core/title\": 9, \"../scale/scale.category\": 10, \"../scale/scale.crosshelp\": 11, \"../scale/scale.liner\": 12, \"../util/helper\": 13, \"../util/randomColor\": 14, \"../util/tinycolor\": 15, \"../util/wxCanvas\": 16, \"./wxChart\": 4 }], 2: [function (require, module, exports) {\n            /* global module, wx, window: false, document: false */\n            'use strict';\n\n            Object.defineProperty(exports, \"__esModule\", {\n                value: true\n            });\n\n            var _createClass = function () {\n                function defineProperties(target, props) {\n                    for (var i = 0; i < props.length; i++) {\n                        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }return function (Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n                };\n            }();\n\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;if (getter === undefined) {\n                        return undefined;\n                    }return getter.call(receiver);\n                }\n            };\n\n            var _wxCanvas = require('../util/wxCanvas');\n\n            var _wxCanvas2 = _interopRequireDefault(_wxCanvas);\n\n            var _wxChart = require('./wxChart');\n\n            var _wxChart2 = _interopRequireDefault(_wxChart);\n\n            var _title = require('../core/title');\n\n            var _title2 = _interopRequireDefault(_title);\n\n            var _layout = require('../core/layout');\n\n            var _layout2 = _interopRequireDefault(_layout);\n\n            var _legend = require('../core/legend');\n\n            var _legend2 = _interopRequireDefault(_legend);\n\n            var _randomColor = require('../util/randomColor');\n\n            var _randomColor2 = _interopRequireDefault(_randomColor);\n\n            var _helper = require('../util/helper');\n\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : { default: obj };\n            }\n\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n\n            function _possibleConstructorReturn(self, call) {\n                if (!self) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof2(call)) === \"object\" || typeof call === \"function\") ? call : self;\n            }\n\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof2(superClass)));\n                }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n\n            // Doughnut default config\n            var WX_DOUGHNUT_DEFAULT_CONFIG = {\n                legendOptions: {\n                    'position': 'bottom'\n                },\n                // The percentage of the chart that we cut out of the middle.\n                cutoutPercentage: 50,\n\n                // The rotation of the chart, where the first data arc begins.\n                rotation: Math.PI * -0.5,\n\n                // The randomColor scheme\n                // See https://github.com/davidmerfield/randomColor\n                color: {\n                    hue: 'red',\n                    luminosity: 'light'\n                },\n\n                // The title text or a title config object\n                title: undefined,\n\n                // The borderWidth\n                borderWidth: 2,\n\n                // Chart padding, default auto set\n                padding: undefined,\n\n                labelDistancePercentage: 0.15\n            };\n\n            /**\n             * Doughnut item config\n             *\n             * value: The value of chart\n             * label: The legend text\n             * color: The color of item ,by default we use the randomColour scheme to create color\n             * radius: The percentage of radius, default is '100'\n             * legend: [Object] legend options\n             */\n            var WX_DOUGHNUT_ITEM_DEFAULT_CONFIG = {\n                display: true,\n                fontSize: 11,\n                percentage: 100\n            };\n\n            var WxDoughnut = function (_WxChart) {\n                _inherits(WxDoughnut, _WxChart);\n\n                /**\n                 * WxDoughnut chart\n                 * @constructor\n                 * @param {string} id - The canvas element's id\n                 * @param {Object} config\n                 * @param {number} [config.width=300] - The width of canvas.\n                 * @param {number} [config.height=200] - The height of canvas.\n                 * @param {number} [config.padding=] - The padding of canvas.\n                 * @param {string} [config.display=block] - The display style of chart.\n                 *\n                 * @param {number} [config.cutoutPercentage=50] - The percentage of the chart that we cut out of the middle.\n                 * @param {number} [config.rotation=Math.PI * -0.5] - The rotation of the chart, where the first data arc begins.\n                 * @param {Object} [config.color=red] - The randomColor options.\n                 * @param {(string|Object)} [config.title=] - The title text or title options of chart.\n                 * @param {Object} [config.legendOptions=] - The legend options of chart.\n                 */\n                function WxDoughnut(id, config) {\n                    _classCallCheck(this, WxDoughnut);\n\n                    var _this = _possibleConstructorReturn(this, (WxDoughnut.__proto__ || Object.getPrototypeOf(WxDoughnut)).call(this, id, config));\n\n                    var me = _this;\n                    me.chartConfig = (0, _helper.extend)({}, WX_DOUGHNUT_DEFAULT_CONFIG, config);\n\n                    me.title = null;\n                    // Initialize title and legend\n                    if (me.chartConfig.title) {\n                        me.title = new _title2.default(me, _helper.is.PureObject(me.chartConfig.title) ? me.chartConfig.title : null);\n                        me.titleText = _helper.is.String(me.chartConfig.title) ? me.chartConfig.title : me.chartConfig.title.text;\n                    }\n\n                    me.legend = new _legend2.default(me, me.chartConfig.legendOptions);\n                    me.wxLayout = new _layout2.default(me);\n                    return _this;\n                }\n\n                /**\n                 * Update a datesets of chart and reDraw\n                 * @param {Object[]} datasets\n                 * @param {string} [datasets[].hidden=false] - Display or not.\n                 * @param {string} datasets[].label - The label text of an dataset.\n                 * @param {function} datasets[].format - The label text format function.\n                 * @param {number} datasets[].value - The value of an dataset.\n                 * @param {string} [datasets[].color] - The color of an dataset.\n                 * @param {string} [datasets[].borderColor]- The border color of an dataset.\n                 * @param {string} [datasets[].percentage=100] - The percentage of radius, default is '100'\n                 * @param {string} [datasets[].legend] - The legend option of an dataset. We will set legend text as same as label text.\n                 *\n                 */\n\n                _createClass(WxDoughnut, [{\n                    key: 'update',\n                    value: function update(datasets) {\n                        var me = this;\n                        _get(WxDoughnut.prototype.__proto__ || Object.getPrototypeOf(WxDoughnut.prototype), 'update', this).call(this, datasets, WX_DOUGHNUT_ITEM_DEFAULT_CONFIG);\n                        me.wxLayout.removeAllBox();\n                        return me.draw();\n                    }\n\n                    /**\n                     * Draw chart\n                     */\n\n                }, {\n                    key: 'draw',\n                    value: function draw() {\n                        var box = void 0,\n                            me = this,\n                            labelDistancePercentage = me.chartConfig.labelDistancePercentage,\n                            wxLayout = me.wxLayout;\n                        var _me$chartConfig = me.chartConfig,\n                            cutoutPercentage = _me$chartConfig.cutoutPercentage,\n                            rotation = _me$chartConfig.rotation,\n                            color = _me$chartConfig.color,\n                            title = _me$chartConfig.title,\n                            borderWidth = _me$chartConfig.borderWidth,\n                            padding = _me$chartConfig.padding;\n\n                        box = wxLayout.adjustBox();\n                        // First, we draw title\n                        if (me.title) {\n                            me.title.update(me.titleText, box);\n                            wxLayout.addBox(me.title.box);\n                        }\n\n                        box = wxLayout.adjustBox();\n                        // Second, random color and get legend datasets\n                        var rColors = (0, _randomColor2.default)((0, _helper.extend)(true, {}, color, { count: me.visDatasets.length }));\n                        var rBorderColor = (0, _randomColor2.default)({\n                            hue: color.hue || 'black',\n                            luminosity: 'dark',\n                            count: 1\n                        });\n                        var legendDatasets = [];\n                        me.visDatasets.forEach(function (dataset, index) {\n                            if (!dataset.color) {\n                                dataset.color = rColors[index];\n                            }\n                            if (!dataset.borderColor) {\n                                dataset.borderColor = me.config.backgroundColor || \"#ffffff\";\n                            }\n\n                            var legend = dataset.legend;\n                            if (!legend || _helper.is.String(legend)) {\n                                legendDatasets.push({\n                                    hidden: dataset.hidden || false,\n                                    text: _helper.is.String(legend) ? legend : dataset.label,\n                                    fillStyle: dataset.color,\n                                    strokeStyle: rBorderColor[0]\n                                });\n                            } else if (_helper.is.PureObject(legend)) {\n                                legendDatasets.push((0, _helper.extend)({\n                                    hidden: dataset.hidden\n                                }, legend));\n                            }\n                        });\n                        me.legend.update(legendDatasets, box);\n                        wxLayout.addBox(me.legend.box);\n\n                        box = wxLayout.adjustBox();\n                        padding = padding || box.width * 0.1;\n                        box.width -= padding;\n                        box.height -= padding;\n                        me.box = box;\n\n                        var _box = box,\n                            x = _box.x,\n                            y = _box.y,\n                            width = _box.width,\n                            height = _box.height,\n                            outerWidth = _box.outerWidth,\n                            outerHeight = _box.outerHeight;\n\n                        var minSize = Math.min(width, height);\n                        var outerRadius = Math.max((minSize - borderWidth * 2) / 2, 0) - 10;\n                        var totalValue = me.calculateTotal(),\n                            longestLabelWidth = me._longestLabel(totalValue),\n                            maximalFontSize = me._maximalLabelFontSize(),\n                            shouldSpace = longestLabelWidth + maximalFontSize + outerRadius * labelDistancePercentage;\n\n                        // Calculate the space between pie's border and margin of chart\n                        var widthSpace = (width - (outerRadius + borderWidth) * 2) / 2;\n                        if (widthSpace < shouldSpace) {\n                            outerRadius -= shouldSpace - widthSpace;\n                        }\n\n                        var innerRadius = cutoutPercentage ? outerRadius / 100 * cutoutPercentage : 0,\n                            innerRadiusColor = me.config.backgroundColor || \"#ffffff\";\n                        var pointX = x + outerWidth / 2,\n                            pointY = y + outerHeight / 2;\n\n                        var drawAngle = rotation;\n                        me.initAvoidCollision();\n                        me.visDatasets.forEach(function (dataset, index) {\n                            var startAngle = drawAngle,\n                                endAngle = startAngle + Math.PI * 2.0 * (dataset.value / totalValue);\n                            var opt = {\n                                pointX: pointX,\n                                pointY: pointY,\n                                startAngle: startAngle,\n                                endAngle: endAngle,\n                                innerRadius: innerRadius,\n                                outerRadius: outerRadius,\n                                totalValue: totalValue,\n                                borderWidth: borderWidth\n                            };\n                            me.drawData(dataset, opt);\n                            me.drawLabel(dataset, opt);\n\n                            drawAngle = endAngle;\n                        });\n                        wxLayout.addBox(me.box);\n                    }\n                }, {\n                    key: 'drawData',\n                    value: function drawData(dataset, options) {\n                        var me = this,\n                            ctx = me.ctx;\n                        var pointX = options.pointX,\n                            pointY = options.pointY,\n                            startAngle = options.startAngle,\n                            endAngle = options.endAngle,\n                            outerRadius = options.outerRadius,\n                            innerRadius = options.innerRadius,\n                            totalValue = options.totalValue,\n                            borderWidth = options.borderWidth;\n                        var label = dataset.label,\n                            value = dataset.value,\n                            color = dataset.color,\n                            borderColor = dataset.borderColor,\n                            percentage = dataset.percentage,\n                            hidden = dataset.hidden;\n\n                        if (!!hidden) {\n                            return endAngle;\n                        }\n\n                        var centerAngle = startAngle + (endAngle - startAngle) / 2;\n                        var currentRadius = outerRadius / 100 * percentage;\n\n                        ctx.save();\n                        ctx.beginPath();\n\n                        ctx.arc(pointX, pointY, currentRadius, startAngle, endAngle);\n                        ctx.arc(pointX, pointY, innerRadius, endAngle, startAngle, true);\n\n                        ctx.closePath();\n                        ctx.strokeStyle = borderColor;\n                        ctx.lineWidth = borderWidth || 0;\n                        ctx.fillStyle = color;\n\n                        ctx.fill();\n                        ctx.lineJoin = 'bevel';\n\n                        if (borderWidth) {\n                            ctx.stroke();\n                        }\n                        ctx.draw();\n                        ctx.restore();\n                        return endAngle;\n                    }\n                }, {\n                    key: 'drawLabel',\n                    value: function drawLabel(dataset, options) {\n                        var me = this,\n                            ctx = me.ctx;\n                        var labelDistancePercentage = me.chartConfig.labelDistancePercentage || 0.2;\n                        var pointX = options.pointX,\n                            pointY = options.pointY,\n                            startAngle = options.startAngle,\n                            endAngle = options.endAngle,\n                            outerRadius = options.outerRadius,\n                            innerRadius = options.innerRadius,\n                            totalValue = options.totalValue,\n                            borderWidth = options.borderWidth;\n                        var label = dataset.label,\n                            value = dataset.value,\n                            color = dataset.color,\n                            borderColor = dataset.borderColor,\n                            fontSize = dataset.fontSize,\n                            percentage = dataset.percentage,\n                            format = dataset.format,\n                            hidden = dataset.hidden;\n\n                        if (!!hidden) {\n                            return;\n                        }\n\n                        var centerAngle = startAngle + (endAngle - startAngle) / 2;\n                        var currentRadius = outerRadius / 100 * percentage;\n                        label = _helper.is.Function(format) ? format.call(me, label, value, totalValue, currentRadius, dataset, options) : label;\n\n                        // Line start point\n                        var startX = Math.cos(centerAngle) * currentRadius + pointX;\n                        var startY = Math.sin(centerAngle) * currentRadius + pointY;\n\n                        // Line turn around point\n                        var offsetRadius = currentRadius * labelDistancePercentage,\n                            turnRadius = currentRadius + offsetRadius;\n                        var turnX = Math.cos(centerAngle) * turnRadius + pointX;\n                        var turnY = Math.sin(centerAngle) * turnRadius + pointY;\n\n                        // Avoid Collision\n                        var adjustPoint = me.avoidCollision({\n                            x: turnX,\n                            y: turnY\n                        }, {\n                            x: pointX,\n                            y: pointY\n                        });\n                        turnX = adjustPoint.x;\n                        turnY = adjustPoint.y;\n\n                        var textLen = ctx.measureText(label).width;\n                        var endX = turnX + (turnX - pointX > 0 ? offsetRadius : -offsetRadius),\n                            endY = turnY;\n                        var textX = turnX - pointX > 0 ? endX + 4 : endX - 4 - textLen,\n                            textY = endY + ctx.fontSize / 2;\n\n                        ctx.save();\n                        ctx.beginPath();\n                        ctx.lineWidth = 1;\n                        ctx.strokeStyle = color;\n                        ctx.fillStyle = color;\n                        ctx.fontSize = fontSize;\n                        ctx.fontSize = ctx.moveTo(startX, startY);\n                        ctx.lineTo(turnX, turnY);\n                        ctx.lineTo(endX, endY);\n                        ctx.stroke();\n                        ctx.fillText(label, textX, textY);\n                        ctx.draw();\n                        ctx.restore();\n                    }\n                }, {\n                    key: '_longestLabel',\n\n                    // Get longest label\n                    value: function _longestLabel(totalValue) {\n                        var me = this,\n                            visDatasets = me.visDatasets,\n                            ctx = me.ctx;\n                        var maxLabelWidth = 0;\n                        visDatasets.forEach(function (dataset) {\n                            var label = dataset.label,\n                                value = dataset.value,\n                                format = dataset.format;\n\n                            label = _helper.is.Function(format) ? format.call(me, label, value, totalValue, 0, dataset) : label;\n                            var textLen = ctx.measureText(label).width;\n\n                            maxLabelWidth = textLen > maxLabelWidth ? textLen : maxLabelWidth;\n                        });\n                        return maxLabelWidth;\n                    }\n                    // Get maximal font size of label\n\n                }, {\n                    key: '_maximalLabelFontSize',\n                    value: function _maximalLabelFontSize() {\n                        var me = this,\n                            visDatasets = me.visDatasets;\n                        var max = 0;\n                        visDatasets.forEach(function (dataset) {\n                            var fontSize = dataset.fontSize;\n\n                            max = fontSize > max ? fontSize : max;\n                        });\n                        return max;\n                    }\n                    // Avoid Collision\n\n                }, {\n                    key: 'initAvoidCollision',\n                    value: function initAvoidCollision() {\n                        this._lastPoint = null;\n                    }\n                }, {\n                    key: 'avoidCollision',\n                    value: function avoidCollision(newPoint, centerPoint) {\n                        var avoidUnit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.ctx.fontSize + 4;\n\n                        var me = this,\n                            box = me.box;\n                        var cpx = centerPoint.x,\n                            cpy = centerPoint.y;\n                        if (me._lastPoint) {\n                            var lpx = me._lastPoint.x,\n                                lpy = me._lastPoint.y;\n                            var npx = newPoint.x,\n                                npy = newPoint.y;\n                            if ((npx - cpx) * (lpx - cpx) > 0 && Math.abs(lpy - npy) < avoidUnit) {\n                                var ny = npx - cpx > 0 ? lpy + avoidUnit : lpy - avoidUnit;\n                                newPoint.y = ny;\n                            }\n                        }\n                        this._lastPoint = newPoint;\n                        return newPoint;\n                    }\n                }]);\n\n                return WxDoughnut;\n            }(_wxChart2.default);\n\n            exports.default = WxDoughnut;\n        }, { \"../core/layout\": 6, \"../core/legend\": 7, \"../core/title\": 9, \"../util/helper\": 13, \"../util/randomColor\": 14, \"../util/wxCanvas\": 16, \"./wxChart\": 4 }], 3: [function (require, module, exports) {\n            /* global module, wx, window: false, document: false */\n            'use strict';\n\n            Object.defineProperty(exports, \"__esModule\", {\n                value: true\n            });\n\n            var _createClass = function () {\n                function defineProperties(target, props) {\n                    for (var i = 0; i < props.length; i++) {\n                        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }return function (Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n                };\n            }();\n\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;if (getter === undefined) {\n                        return undefined;\n                    }return getter.call(receiver);\n                }\n            };\n\n            var _wxCanvas = require('../util/wxCanvas');\n\n            var _wxCanvas2 = _interopRequireDefault(_wxCanvas);\n\n            var _wxChart = require('./wxChart');\n\n            var _wxChart2 = _interopRequireDefault(_wxChart);\n\n            var _title = require('../core/title');\n\n            var _title2 = _interopRequireDefault(_title);\n\n            var _scale = require('../core/scale');\n\n            var _scale2 = _interopRequireDefault(_scale);\n\n            var _scale3 = require('../scale/scale.liner');\n\n            var _scale4 = _interopRequireDefault(_scale3);\n\n            var _scale5 = require('../scale/scale.crosshelp');\n\n            var _scale6 = _interopRequireDefault(_scale5);\n\n            var _scale7 = require('../scale/scale.category');\n\n            var _scale8 = _interopRequireDefault(_scale7);\n\n            var _legend = require('../core/legend');\n\n            var _legend2 = _interopRequireDefault(_legend);\n\n            var _layout = require('../core/layout');\n\n            var _layout2 = _interopRequireDefault(_layout);\n\n            var _helper = require('../util/helper');\n\n            var _randomColor = require('../util/randomColor');\n\n            var _randomColor2 = _interopRequireDefault(_randomColor);\n\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : { default: obj };\n            }\n\n            function _toConsumableArray(arr) {\n                if (Array.isArray(arr)) {\n                    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n                        arr2[i] = arr[i];\n                    }return arr2;\n                } else {\n                    return Array.from(arr);\n                }\n            }\n\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n\n            function _possibleConstructorReturn(self, call) {\n                if (!self) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof2(call)) === \"object\" || typeof call === \"function\") ? call : self;\n            }\n\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof2(superClass)));\n                }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n\n            // Line legend's default config\n            var WX_LINE_LEGEND_DEFAULT_CONFIG = {\n                lineWidth: 2,\n                // 'capStyle': 'butt', //Default line cap is cap,\n                lineJoin: 'miter',\n                fillArea: false,\n                fillAlpha: 0.5,\n                display: true,\n                spanGaps: false, // If set true, will draw line between the point\n                tension: 0.4 // Default bezier curve tension. Set to 0 for no bezier curves.\n            };\n            // Line default config\n            var WX_LINER_DEFAULT_CONFIG = {\n                // Scale options\n                xScaleOptions: {\n                    position: 'bottom'\n                },\n                xScaleItemOptions: undefined,\n                yScaleOptions: {\n                    position: 'left'\n                },\n                yScaleItemOptions: undefined,\n                crossScaleOptions: {},\n                // The title text or a title config object\n                title: undefined,\n\n                // The legend of line chart\n                legends: [], // lineWidth, lineJoin, fillStyle, strokeStyle, fillArea can be set in here\n                legendOptions: {\n                    'position': 'bottom'\n                },\n\n                // The randomColor scheme\n                // See https://github.com/davidmerfield/randomColor\n                color: {\n                    hue: 'red',\n                    luminosity: 'light'\n                },\n\n                // The dataset's default key\n                defaultKey: 'value'\n            };\n\n            var WX_LINER_ITEM_DEFAULT_CONFIG = {\n                pointRadius: 4,\n                pointStyle: 'circle', // Support triangle, rect and Image object\n                pointBorderWidth: 1.5,\n                pointBorderColor: '#ffffff',\n                tension: 0.4,\n                display: true\n            };\n\n            var WxLiner = function (_WxChart) {\n                _inherits(WxLiner, _WxChart);\n\n                /**\r\n                 * WxLiner chart\r\n                 * @constructor\r\n                 * @param {string} id - The canvas element's id\r\n                 * @param {Object} config\r\n                 * @param {number} [config.width=300] - The width of canvas.\r\n                 * @param {number} [config.height=200] - The height of canvas.\r\n                 * @param {number} [config.padding=] - The padding of canvas.\r\n                 * @param {string} [config.display=block] - The display style of chart.\r\n                 *\r\n                 * @param {Object} config.legendOptions=[] - The legend & label options.You should set 'key' to bind the attribute in datasets which is the value of the point.\r\n                 * @param {(string|Object)} [config.title=] - The title text or title options of chart.\r\n                 * @example\r\n                 * datasets:[{\r\n                 *  valueA: 30,\r\n                 *  valueB: 40,\r\n                 *  label: '一月'\r\n                 * }, {\r\n                 *  valueA: 20,\r\n                 *  valueB: 50,\r\n                 *  pointRadius: 2,\r\n                 *  label: '二月'\r\n                  * },...]\r\n                 *\r\n                 * legends: [{\r\n                 *   'text': 'valueA Text',\r\n                 *   'key': 'valueA',\r\n                 *   'strokeStyle': '#3385ff'\r\n                 * }, {\r\n                 *   text: 'valueB Text',\r\n                 *   key: 'valueB'\r\n                 * }]\r\n                 */\n                function WxLiner(id, config) {\n                    _classCallCheck(this, WxLiner);\n\n                    var _this = _possibleConstructorReturn(this, (WxLiner.__proto__ || Object.getPrototypeOf(WxLiner)).call(this, id, config));\n\n                    var me = _this;\n                    me.chartConfig = (0, _helper.extend)({}, WX_LINER_DEFAULT_CONFIG, config);\n\n                    me.title = null;\n                    // Initialize title and legend\n                    if (me.chartConfig.title) {\n                        me.title = new _title2.default(me, _helper.is.PureObject(me.chartConfig.title) ? me.chartConfig.title : null);\n                        me.titleText = _helper.is.String(me.chartConfig.title) ? me.chartConfig.title : me.chartConfig.title.text;\n                    }\n\n                    // Initialize legend\n                    me.legend = new _legend2.default(me, me.chartConfig.legendOptions);\n\n                    // Initialize x,y Scale\n                    me.yAxis = new _scale4.default(me, me.chartConfig.yScaleOptions);\n                    me.xAxis = new _scale8.default(me, me.chartConfig.xScaleOptions);\n                    me.wxCrossScale = new _scale6.default(me.xAxis, me.yAxis, me.chartConfig.crossScaleOptions);\n                    me.wxLayout = new _layout2.default(me);\n                    return _this;\n                }\n\n                // Get/Set labels\n\n\n                _createClass(WxLiner, [{\n                    key: '_getLegendConfig',\n\n                    /**\r\n                     * Build legends config\r\n                     * @private\r\n                     */\n                    value: function _getLegendConfig() {\n                        var me = this,\n                            defaultKey = me.chartConfig.defaultKey || 'value',\n                            legendsConfig = me.chartConfig.legends;\n                        if (!legendsConfig) {\n                            if (me.labels && me.labels.length) {\n                                legendsConfig = me.labels.map(function (label) {\n                                    return { 'text': label, 'key': defaultKey };\n                                });\n                            } else {\n                                throw new Error('Can not get legend config!');\n                            }\n                        } else {\n                            legendsConfig = legendsConfig.map(function (legend) {\n                                return (0, _helper.extend)(true, {\n                                    'key': defaultKey\n                                }, legend);\n                            });\n                        }\n                        return legendsConfig;\n                    }\n\n                    /**\r\n                     * Update a datesets of chart and reDraw\r\n                     * @param {Object} datasets - data sets\r\n                     * @param {string} [datasets[].display] - Disaply the bar or not\r\n                     * @param {number} [datasets[].fillStyle] - Point fill color. The default color will randomly assigned by 'color' option.\r\n                     * @param {string} [datasets[].strokeStyle='#ffffff'] - Point's border color\r\n                     * @param {string} [datasets[].pointStyle='circle'] - Point style, support triangle, rect and Image object\r\n                     * @param {number} [datasets[].pointRadius=3] - Point radius if style is circle\r\n                     * @param {number} [datasets[].pointBorderWidth=0] - Point border width\r\n                     * @param {string} [datasets[].pointBorderColor='auto'] - Point border color. If not set, will same as lineColor(luminosity+50%)\r\n                     * @param {number} [datasets[].display=true] - display the point or not\r\n                     * @returns {*}\r\n                     */\n\n                }, {\n                    key: 'update',\n                    value: function update(datasets) {\n                        var me = this;\n                        me._labels = null;\n                        me._legends = null;\n                        _get(WxLiner.prototype.__proto__ || Object.getPrototypeOf(WxLiner.prototype), 'update', this).call(this, datasets, WX_LINER_ITEM_DEFAULT_CONFIG);\n                        me.wxLayout.removeAllBox();\n                        return me.draw();\n                    }\n\n                    /**\r\n                     * Draw chart\r\n                     */\n\n                }, {\n                    key: 'draw',\n                    value: function draw() {\n                        var box = void 0,\n                            me = this,\n                            wxLayout = me.wxLayout;\n                        var _me$chartConfig = me.chartConfig,\n                            cutoutPercentage = _me$chartConfig.cutoutPercentage,\n                            rotation = _me$chartConfig.rotation,\n                            color = _me$chartConfig.color,\n                            borderWidth = _me$chartConfig.borderWidth,\n                            padding = _me$chartConfig.padding;\n\n                        // First, we draw title\n\n                        box = wxLayout.adjustBox();\n                        if (me.title) {\n                            me.title.update(me.titleText, box);\n                            wxLayout.addBox(me.title.box);\n                        }\n\n                        // Second, random color and get legend datasets\n                        box = wxLayout.adjustBox();\n                        var rColors = (0, _randomColor2.default)((0, _helper.extend)(true, {}, color, { count: me.legends.length }));\n\n                        me.legends = me.legends.map(function (legend, index) {\n                            if (!legend.strokeStyle) {\n                                legend.strokeStyle = me.chartConfig.backgroundColor || legend.borderColor || rColors[index];\n                            }\n\n                            return (0, _helper.extend)(true, {\n                                fillStyle: rColors[index]\n                            }, WX_LINE_LEGEND_DEFAULT_CONFIG, legend);\n                        });\n                        me.legend.update(me.legends, box);\n                        wxLayout.addBox(me.legend.box);\n\n                        // Thirdly, draw scale\n                        me._drawScale();\n\n                        // Finally, draw line\n                        var lineConfigs = me.legends.map(function (legend) {\n                            var config = {\n                                legend: legend\n                            };\n                            var key = legend.key;\n                            // config.dataset = me.visDatasets.map(data => {return {value: data[key], data: data}});\n                            config.dataset = me.visDatasets.map(function (data, index) {\n                                var value = data[key],\n                                    point = void 0;\n\n                                if (value) {\n                                    var xAxisPoint = me.xAxis.getPoint(index);\n                                    var yAxisPoint = me.yAxis.getPoint(value);\n                                    point = {\n                                        x: xAxisPoint.x,\n                                        y: yAxisPoint.y\n                                    };\n                                }\n\n                                return { value: value, point: point, data: data };\n                            });\n                            return config;\n                        });\n\n                        lineConfigs.forEach(function (line) {\n                            return me._drawLine(line);\n                        });\n                    }\n\n                    /**\r\n                     * Draw the scale of chart\r\n                     *\r\n                     * @private\r\n                     */\n\n                }, {\n                    key: '_drawScale',\n                    value: function _drawScale() {\n                        var box = void 0,\n                            me = this,\n                            wxLayout = me.wxLayout;\n\n                        box = wxLayout.adjustBox();\n                        var xDatasets = me.xScaleAxisDatas(),\n                            yDatasets = me.yScaleAxisDatas(box);\n\n                        var _me$wxCrossScale$draw = me.wxCrossScale.draw(box, xDatasets, yDatasets),\n                            xBox = _me$wxCrossScale$draw.xBox,\n                            yBox = _me$wxCrossScale$draw.yBox;\n\n                        wxLayout.addBox(xBox);\n                        wxLayout.addBox(yBox);\n                    }\n\n                    /**\r\n                     * Draw one line\r\n                     * @param {Object} lineData - Line dataset\r\n                     * @param {Object} lineData.legend - Legend's config\r\n                     * @param {Object[]} lineData[].value - Data of each line point\r\n                     * @param {Object[]} lineData[].data - The data object\r\n                     * @param {Object[]} lineData[].point - The point for rending.\r\n                     * @private\r\n                     */\n\n                }, {\n                    key: '_drawLine',\n                    value: function _drawLine(lineData) {\n                        var me = this,\n                            ctx = me.ctx;\n                        var legend = lineData.legend,\n                            dataset = lineData.dataset;\n                        var display = legend.display,\n                            spanGaps = legend.spanGaps,\n                            tension = legend.tension,\n                            lineWidth = legend.lineWidth,\n                            lineJoin = legend.lineJoin,\n                            fillStyle = legend.fillStyle,\n                            strokeStyle = legend.strokeStyle,\n                            fillArea = legend.fillArea,\n                            fillAlpha = legend.fillAlpha;\n\n                        if (!display) {\n                            return;\n                        }\n\n                        ctx.save();\n                        var lineToPoint = function lineToPoint(pre, p, next) {\n                            if (!tension || tension === 0) {\n                                ctx.lineTo(p.x, p.y);\n                            } else {\n                                var controlPoints = (0, _helper.splineCurve)(pre, p, next, tension);\n                                if (!pre) {\n                                    ctx.moveTo(p.x, p.y);\n                                } else {\n                                    ctx.bezierCurveTo(pre.controlPoints.next.x, pre.controlPoints.next.y, controlPoints.previous.x, controlPoints.previous.y, p.x, p.y);\n                                }\n                                p.controlPoints = controlPoints;\n                            }\n                        };\n                        var getNextPoint = function getNextPoint(dataset, index, spanGaps) {\n                            // The end\n                            if (index >= dataset.length - 1) {\n                                return;\n                            }\n                            var nextDate = dataset[index + 1];\n                            if (!nextDate.point) {\n                                if (!!spanGaps) return getNextPoint(dataset, index + 1, spanGaps);else return;\n                            }\n                            return nextDate.point;\n                        };\n                        // Draw fill area\n                        if (fillArea) {\n                            (function () {\n                                var firstPoint = void 0,\n                                    currPoint = void 0,\n                                    xAxisY = me.xAxis.getPoint(0).y;\n                                var fillInHere = function fillInHere() {\n                                    ctx.globalAlpha = fillAlpha;\n                                    ctx.fill();\n                                    ctx.globalAlpha = 1;\n                                };\n                                ctx.beginPath();\n                                ctx.lineWidth = 0;\n                                ctx.fillStyle = fillStyle;\n                                dataset.forEach(function (d, index) {\n                                    var point = d.point;\n\n                                    if (!!currPoint) {\n                                        if (point) {\n                                            //ctx.lineTo(point.x, point.y);\n                                            lineToPoint(currPoint, point, getNextPoint(dataset, index, spanGaps));\n                                        } else if (!spanGaps) {\n                                            // Not spanGap, close path and fill\n                                            ctx.lineTo(currPoint.x, xAxisY);\n                                            ctx.lineTo(firstPoint.x, xAxisY);\n                                            fillInHere();\n                                            // First point reset\n                                            firstPoint = undefined;\n                                            ctx.beginPath();\n                                        } else {\n                                            // SpanGap, not record this point.\n                                            return;\n                                        }\n                                    } else {\n                                        if (point) {\n                                            //ctx.moveTo(point.x, point.y);\n                                            lineToPoint(currPoint, point, getNextPoint(dataset, index, spanGaps));\n                                            firstPoint = point;\n                                        }\n                                    }\n                                    currPoint = point;\n                                });\n                                if (currPoint && firstPoint) {\n                                    ctx.lineTo(currPoint.x, xAxisY);\n                                    ctx.lineTo(firstPoint.x, xAxisY);\n                                    fillInHere();\n                                }\n                            })();\n                        }\n\n                        // Draw line\n                        var currPoint = void 0,\n                            pointStack = [];\n                        ctx.beginPath();\n                        ctx.lineWidth = lineWidth;\n                        ctx.lineJoin = lineJoin;\n                        ctx.strokeStyle = strokeStyle;\n                        dataset.forEach(function (d, index) {\n                            var value = d.value,\n                                point = d.point,\n                                data = d.data;\n                            var pointBorderColor = data.pointBorderColor,\n                                pointBorderWidth = data.pointBorderWidth,\n                                pointRadius = data.pointRadius,\n                                pointStyle = data.pointStyle,\n                                label = data.label;\n\n                            pointStack.push({ point: point, pointBorderColor: pointBorderColor, pointBorderWidth: pointBorderWidth, pointRadius: pointRadius, pointStyle: pointStyle });\n\n                            if (point) {\n                                lineToPoint(currPoint, point, getNextPoint(dataset, index, spanGaps));\n                                //!!currPoint ? ctx.lineTo(point.x, point.y): ctx.moveTo(point.x, point.y);\n                                // !!currPoint ?\n                                //     lineToPoint(currPoint, point, getNextPoint(dataset, index, spanGaps)):\n                                //     ctx.moveTo(point.x, point.y);\n                            } else if (spanGaps) {\n                                // SpanGap, not record this point.\n                                return;\n                            }\n                            currPoint = point;\n                        });\n                        ctx.stroke();\n\n                        // Draw Point\n                        ctx.fillStyle = fillStyle;\n                        pointStack.forEach(function (p) {\n                            var point = p.point,\n                                pointBorderColor = p.pointBorderColor,\n                                pointBorderWidth = p.pointBorderWidth,\n                                pointRadius = p.pointRadius,\n                                pointStyle = p.pointStyle;\n\n                            if (!point) {\n                                return;\n                            }\n\n                            ctx.beginPath();\n                            // TODO: pointStyle NOT IMPLEMENT, Only can render line\n                            if (pointRadius) {\n                                ctx.arc(point.x, point.y, pointRadius, 0, 2 * Math.PI);\n                                ctx.fill();\n                            }\n\n                            if (pointBorderWidth) {\n                                ctx.lineWidth = pointBorderWidth;\n                                ctx.strokeStyle = pointBorderColor || legend.strokeStyle;\n                                ctx.stroke();\n                            }\n                            ////\n                        });\n\n                        ctx.draw();\n                        ctx.restore();\n                    }\n\n                    /**\r\n                     * Build the yAxis datasets\r\n                     * @param {BoxInstance} area - The area of chart\r\n                     */\n\n                }, {\n                    key: 'yScaleAxisDatas',\n                    value: function yScaleAxisDatas(area) {\n                        var me = this,\n                            ctx = me.ctx;\n                        var yScaleItemOptions = me.chartConfig.yScaleItemOptions;\n\n                        // First, get all available values and calculate the max/min value\n\n                        var _visDatasets$reduce = this.visDatasets.reduce(function (pre, cur) {\n                            var max = pre.max,\n                                min = pre.min;\n\n                            if (cur.display) {\n                                var curValue = me.legends.map(function (legend) {\n                                    if (legend.key) {\n                                        return cur[legend.key] || 0;\n                                    }\n                                }).concat(max, min);\n                                max = Math.max.apply(Math, _toConsumableArray(curValue));\n                                min = Math.min.apply(Math, _toConsumableArray(curValue));\n                            }\n                            return { max: max, min: min };\n                        }, {\n                            max: 0,\n                            min: 0\n                        }),\n                            max = _visDatasets$reduce.max,\n                            min = _visDatasets$reduce.min;\n\n                        var tickLimits = me.yAxis.calculateTickLimit(area, ctx);\n                        return me.yAxis.buildDatasets(max, min, tickLimits);\n                    }\n\n                    /**\r\n                     * Build the xAxis datasets\r\n                     */\n\n                }, {\n                    key: 'xScaleAxisDatas',\n                    value: function xScaleAxisDatas() {\n                        var me = this;\n                        var xScaleItemOptions = me.chartConfig.xScaleItemOptions;\n                        var xScaleConfig = me.labels.map(function (label) {\n                            var item = {\n                                'text': label\n                            };\n                            if (typeof xScaleItemOptions !== 'undefined') {\n                                item = (0, _helper.extend)(item, xScaleItemOptions);\n                            }\n                            return item;\n                        });\n\n                        return me.xAxis.buildDatasets(xScaleConfig);\n                    }\n                }, {\n                    key: 'labels',\n                    get: function get() {\n                        var me = this,\n                            tmp = void 0;\n                        if (me._labels) {\n                            return me._labels;\n                        } else if (tmp = me.chartConfig.labels) {\n                            if (_helper.is.Array(tmp)) {\n                                return tmp;\n                            }\n                        }\n                        me._labels = me.visDatasets.map(function (dataset) {\n                            return dataset.label;\n                        });\n                        return me._labels;\n                    }\n                }, {\n                    key: 'legends',\n                    get: function get() {\n                        var me = this;\n                        if (!me._legends) {\n                            me._legends = me._getLegendConfig();\n                        }\n                        return me._legends;\n                    },\n                    set: function set(value) {\n                        this._legends = value;\n                    }\n                }]);\n\n                return WxLiner;\n            }(_wxChart2.default);\n\n            exports.default = WxLiner;\n        }, { \"../core/layout\": 6, \"../core/legend\": 7, \"../core/scale\": 8, \"../core/title\": 9, \"../scale/scale.category\": 10, \"../scale/scale.crosshelp\": 11, \"../scale/scale.liner\": 12, \"../util/helper\": 13, \"../util/randomColor\": 14, \"../util/wxCanvas\": 16, \"./wxChart\": 4 }], 4: [function (require, module, exports) {\n            /* global module, wx, window: false, document: false */\n            'use strict';\n\n            Object.defineProperty(exports, \"__esModule\", {\n                value: true\n            });\n            exports.wxChartInstances = undefined;\n\n            var _createClass = function () {\n                function defineProperties(target, props) {\n                    for (var i = 0; i < props.length; i++) {\n                        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }return function (Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n                };\n            }();\n\n            var _helper = require('../util/helper');\n\n            var _wxCanvas = require('../util/wxCanvas');\n\n            var _wxCanvas2 = _interopRequireDefault(_wxCanvas);\n\n            var _layout = require('../core/layout');\n\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : { default: obj };\n            }\n\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n\n            // Chart default config\n            var wxChartDefaultConfig = {\n                fontSize: 10,\n                width: 300,\n                height: 200,\n                display: 'block',\n                padding: 0,\n                backgroundColor: null\n            };\n\n            // Store all references of 'WxChart' instances - allowing us to globally resize chart instances on window resize.\n            var wxChartInstances = exports.wxChartInstances = {};\n            // The basic class of WeiXin chart\n\n            var WxChart = function () {\n                /**\n                 * @constructor\n                 * @param {string} id - Canvas id ,DOM ID or HTMLElement\n                 * @param {Object|number} [config] - The config of Canvas or the width of chart.\n                 * @param {number} [config.width] - The width of canvas.\n                 * @param {number} [config.height] - The height of canvas.\n                 * @param {number} [config.padding] - The padding of canvas.\n                 * @param {string} [config.display] - The display style of chart.\n                 */\n                function WxChart(id, config) {\n                    _classCallCheck(this, WxChart);\n\n                    var me = this;\n\n                    // Arguments parse...\n                    var chartConf = void 0;\n                    if (_helper.is.PureObject(config)) {\n                        chartConf = (0, _helper.extend)({}, wxChartDefaultConfig, config);\n                    } else if (_helper.is.Number(config) || _helper.is.String(config)) {\n                        // WxChart(id, width, height, display, ...options)\n                        chartConf = {\n                            'width': arguments[1],\n                            'height': 2 in arguments ? arguments[2] : wxChartDefaultConfig.height,\n                            'display': 3 in arguments ? arguments[3] : wxChartDefaultConfig.display\n                        };\n                        if (4 in arguments && _helper.is.PureObject(arguments[4])) {\n                            (0, _helper.extend)({}, wxChartDefaultConfig, chartConf, arguments[4]);\n                        } else {\n                            (0, _helper.extend)({}, wxChartDefaultConfig, chartConf);\n                        }\n                    }\n\n                    me.canvas = new _wxCanvas2.default(id, chartConf);\n                    me.ctx = me.canvas.getContext('2d');\n                    me.isWeiXinAPP = (0, _helper.checkWX)();\n                    me.id = (0, _helper.uid)();\n\n                    me._config = me.initConfig(chartConf);\n                    me.initContext();\n\n                    // Append to wxChartInstances\n                    wxChartInstances[me.id + ''] = me;\n\n                    return me;\n                }\n\n                _createClass(WxChart, [{\n                    key: 'initConfig',\n                    value: function initConfig(config) {\n                        var me = this;\n                        if (!me.canvas) {\n                            console.error(\"Failed to create WxChart: can't acquire context!\");\n                        }\n\n                        var canvas = me.canvas,\n                            cvWidth = canvas.width,\n                            cvHeight = canvas.height;\n                        config.width = cvWidth;\n                        config.height = cvHeight;\n                        config.aspectRatio = config.aspectRatio ? config.aspectRatio : !_helper.is.Undefined(cvHeight) && !_helper.is.Undefined(cvWidth) ? (cvWidth / cvWidth).toFixed(2) : null;\n                        config.display = config.display || 'block';\n                        return config;\n                    }\n                }, {\n                    key: 'initContext',\n                    value: function initContext() {\n                        var me = this;\n                        if (!me.canvas) {\n                            console.error(\"Failed to create WxChart: can't acquire context!\");\n                            return me;\n                        }\n                        // Set scale of canvas\n                        (0, _helper.retinaScale)(me.ctx, me.canvas.width, me.canvas.height);\n\n                        // Set font size\n                        if (me.config.fontSize) {\n                            me.ctx.fontSize = me.config.fontSize;\n                        }\n\n                        // calculate box\n                        var padding = me.config.padding || 0;\n                        me.innerBox = new _layout.BoxInstance('top', 0, 0, me.config.width - padding * 2, me.config.height - padding * 2, me.config.width, me.config.height);\n                    }\n                }, {\n                    key: 'clear',\n                    value: function clear() {\n                        var me = this;\n                        me.ctx.clearRect(0, 0, me.canvas.width, me.canvas.height);\n                        if (me.config.backgroundColor) {\n                            me.ctx.save();\n                            me.ctx.fillStyle = me.config.backgroundColor;\n                            me.ctx.fillRect(0, 0, me.canvas.width, me.canvas.height);\n                            me.ctx.restore();\n                            me.ctx.draw();\n                        }\n                    }\n                }, {\n                    key: 'destroy',\n                    value: function destroy() {\n                        var me = this;\n\n                        me.clear();\n                        me.canvas.releaseContext();\n\n                        if (me.id && me.id in wxChartInstances) {\n                            delete wxChartInstances[me.id];\n                        }\n\n                        me.id = null;\n                        me.canvas = null;\n                        me.ctx = null;\n                        me._config = null;\n                        me.innerBox = null;\n                    }\n                    // The 'config' property\n\n                }, {\n                    key: 'draw',\n                    value: function draw() {\n                        // Do nothing...\n                    }\n                }, {\n                    key: 'update',\n                    value: function update(datasets, defaultItemOpt) {\n                        var me = this;\n                        if (_helper.is.Undefined(datasets)) {\n                            return;\n                        }\n                        if (!_helper.is.Array(datasets)) {\n                            datasets = [datasets];\n                        }\n\n                        datasets = datasets.map(function (dataset) {\n                            return (0, _helper.extend)({}, defaultItemOpt, dataset);\n                        });\n                        // Fill default Options\n                        me.clear();\n                        me._datasets = datasets;\n                        me._visDatasets = null;\n                        return me._datasets;\n                    }\n                }, {\n                    key: 'calculateTotal',\n                    value: function calculateTotal() {\n                        var datasets = this.datasets;\n                        var total = 0;\n                        var value = void 0;\n\n                        datasets.forEach(function (dataset, index) {\n                            value = parseFloat(dataset.value);\n                            if (!_helper.is.NaN(value) && !dataset.hidden) {\n                                total += Math.abs(value);\n                            }\n                        });\n\n                        return total;\n                    }\n                }, {\n                    key: 'config',\n                    get: function get() {\n                        if (!this._config) {\n                            this._config = (0, _helper.extend)({}, wxChartDefaultConfig);\n                        }\n                        return this._config;\n                    },\n                    set: function set(chartConf) {\n                        var me = this;\n                        // Update chart config\n                        me.initConfig(chartConf);\n                        me.initContext();\n                        // Clear canvas\n                        me.clear();\n                        // Call redraw\n                        me.draw();\n                    }\n                }, {\n                    key: 'datasets',\n                    get: function get() {\n                        return this._datasets;\n                    },\n                    set: function set(datasets) {\n                        return this.update(datasets);\n                    }\n\n                    /**\n                     * Get visible ticks\n                     */\n\n                }, {\n                    key: 'visDatasets',\n                    get: function get() {\n                        return this._visDatasets ? this._visDatasets : this._visDatasets = this.datasets.filter(function (v) {\n                            return !!v.display;\n                        });\n                    }\n                    // Can not reset\n\n                    , set: function set(val) {}\n                }]);\n\n                return WxChart;\n            }();\n\n            exports.default = WxChart;\n        }, { \"../core/layout\": 6, \"../util/helper\": 13, \"../util/wxCanvas\": 16 }], 5: [function (require, module, exports) {\n            /* global module, wx, window: false, document: false */\n            'use strict';\n\n            Object.defineProperty(exports, \"__esModule\", {\n                value: true\n            });\n\n            var _createClass = function () {\n                function defineProperties(target, props) {\n                    for (var i = 0; i < props.length; i++) {\n                        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }return function (Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n                };\n            }();\n\n            var _helper = require('../util/helper');\n\n            var _layout = require('./layout');\n\n            var _wxChart = require('../charts/wxChart');\n\n            var _wxChart2 = _interopRequireDefault(_wxChart);\n\n            var _wxCanvas = require('../util/wxCanvas');\n\n            var _wxCanvas2 = _interopRequireDefault(_wxCanvas);\n\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : { default: obj };\n            }\n\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n\n            // The basic component\n            var WxBaseComponent = function () {\n                function WxBaseComponent(wxChart, config) {\n                    _classCallCheck(this, WxBaseComponent);\n\n                    var me = this;\n\n                    if (!wxChart || !wxChart instanceof _wxChart2.default) {\n                        throw new Error('Should be an WxChart instance');\n                    }\n                    me.wxChart = wxChart;\n\n                    // scale set options\n                    this._datasets = [];\n\n                    return me;\n                }\n\n                /**\n                 * Initialize datasets and options\n                 * @param {Object[]} datasets\n                 * @param {Object} [defaultOptions]\n                 * @returns {Array|*}\n                 */\n\n                _createClass(WxBaseComponent, [{\n                    key: 'init',\n                    value: function init(datasets) {\n                        var defaultOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n                        var me = this;\n\n                        if (_helper.is.Undefined(datasets) || _helper.is.Null(datasets)) {\n                            datasets = me.datasets;\n                            if (!datasets) {\n                                throw new Error('Datasets is null');\n                            }\n                        }\n\n                        if (!_helper.is.Array(datasets)) {\n                            datasets = [datasets];\n                        }\n\n                        datasets = datasets.map(function (dataset) {\n                            return (0, _helper.extend)({}, defaultOptions, dataset);\n                        });\n\n                        me._datasets = datasets;\n                        me._visDatasets = null;\n                        return me._datasets;\n                    }\n\n                    /**\n                     * Update data and re-draw\n                     * @param {Object[]} datasets\n                     * @param {BoxInstance} [area]\n                     * @param {Object} [config]\n                     */\n\n                }, {\n                    key: 'update',\n                    value: function update(datasets, area) {\n                        var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.config;\n\n                        var me = this;\n\n                        me.clear();\n                        if (!datasets) {\n                            return;\n                        }\n                        datasets = me.init(datasets);\n\n                        if (area && area instanceof _layout.BoxInstance) {\n                            area = me.box = me.calculateBox(area, datasets, config);\n                        } else if (me.box) {\n                            area = me.box;\n                        } else {\n                            return;\n                        }\n\n                        if (me.isVisiable()) {\n                            me.draw(datasets, area, config);\n                        }\n                    }\n\n                    /**\n                     * Calculate occupied space\n                     * @param {Object[]} [datasets] - datasets\n                     * @param {BoxInstance} [area] - Current box area\n                     * @param {Object} [config]\n                     * @returns {BoxInstance}\n                     */\n\n                }, {\n                    key: 'calculateBox',\n                    value: function calculateBox(area) {\n                        var datasets = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.datasets;\n                        var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.config;\n\n                        return area;\n                    }\n\n                    /**\n                     * Set an occupied space for component\n                     * @param {BoxInstance} box - New box\n                     * @param {Boolean} [redraw=true] - Re-draw the component\n                     */\n\n                }, {\n                    key: 'setBox',\n                    value: function setBox(box) {\n                        var redraw = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n                        var me = this;\n                        if (redraw) {\n                            me.clear();\n                        }\n                        if (box && box instanceof _layout.BoxInstance) {\n                            me.box = box;\n                        }\n                        if (redraw && me.isVisiable()) {\n                            me.draw();\n                        }\n                    }\n\n                    /**\n                     * Draw the component\n                     *\n                     * @param {Object[]} [datasets] - datasets\n                     * @param {BoxInstance} [box] - Current box area\n                     * @param {Object} [config]\n                     */\n\n                }, {\n                    key: 'draw',\n                    value: function draw() {\n                        var datasets = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.datasets;\n                        var box = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.box;\n                        var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.config;\n                    }\n                    /**\n                     * Clear canvas in component's box\n                     */\n\n                }, {\n                    key: 'clear',\n                    value: function clear() {\n                        var me = this;\n                        if (me.box) {\n                            me.wxChart.ctx.clearRect(me.box.x, me.box.y, me.box.outerWidth, me.box.outerHeight);\n                            me.wxChart.ctx.draw();\n                        }\n                    }\n                }, {\n                    key: 'isVisiable',\n                    value: function isVisiable() {\n                        return !!this.config.display;\n                    }\n                }, {\n                    key: 'isHorizontal',\n                    value: function isHorizontal() {\n                        return this.position == 'top' || this.position == 'bottom';\n                    }\n                }, {\n                    key: 'datasets',\n                    get: function get() {\n                        return this._datasets;\n                    },\n                    set: function set(datasets) {\n                        return this.update(datasets);\n                    }\n\n                    /**\n                     * Get visible ticks\n                     */\n\n                }, {\n                    key: 'visDatasets',\n                    get: function get() {\n                        return this._visDatasets ? this._visDatasets : this._visDatasets = this.datasets.filter(function (v) {\n                            return !!v.display;\n                        });\n                    }\n                    // Can not reset\n\n                    , set: function set(val) {}\n                }, {\n                    key: 'position',\n                    get: function get() {\n                        return this.config.position;\n                    },\n                    set: function set(value) {\n                        this.config.position = value;\n                        return this.update();\n                    }\n                }]);\n\n                return WxBaseComponent;\n            }();\n\n            exports.default = WxBaseComponent;\n        }, { \"../charts/wxChart\": 4, \"../util/helper\": 13, \"../util/wxCanvas\": 16, \"./layout\": 6 }], 6: [function (require, module, exports) {\n            /* global module, wx, window: false, document: false */\n            'use strict';\n\n            Object.defineProperty(exports, \"__esModule\", {\n                value: true\n            });\n            exports.BoxInstance = undefined;\n\n            var _createClass = function () {\n                function defineProperties(target, props) {\n                    for (var i = 0; i < props.length; i++) {\n                        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }return function (Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n                };\n            }();\n\n            var _base = require('./base');\n\n            var _base2 = _interopRequireDefault(_base);\n\n            var _helper = require('../util/helper');\n\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : { default: obj };\n            }\n\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n\n            /**\n             * A box model description\n             * @typedef {Object} BoxInstance\n             * @property {number} x - The x point.\n             * @property {number} y - The y point.\n             * @property {number} width - Inner width (context only, not calculate padding and margin)\n             * @property {number} height - Inner height (context only, not calculate padding and margin)\n             * @property {number} outerWidth - Outer width\n             * @property {number} outerHeight - Outer height\n             *\n             * @description\n             * (x,y) -------------------------- (ex, y)\n             *   |                                 |\n             *   |    (lx,ly)-------------(rx,ly)  |\n             *   |      |                    |     |\n             *   |      |                    |     |\n             *   |    (lx,ry)-------------(rx,ry)  |\n             *   |                                 |\n             * (x,ey) ------------------------- (ex, ey)\n             */\n            var BoxInstance = exports.BoxInstance = function () {\n                function BoxInstance(position, x, y, width, height, outerWidth, outerHeight) {\n                    _classCallCheck(this, BoxInstance);\n\n                    var me = this;\n                    if (_helper.is.PureObject(position)) {\n                        var opt = position;\n\n                        position = opt.position;\n                        x = opt.x;\n                        y = opt.y;\n                        width = opt.width;\n                        height = opt.height;\n\n                        var padding = opt.padding,\n                            margin = opt.margin;\n                        if (_helper.is.Number(padding) && _helper.is.Number(margin)) {\n                            outerWidth = width + padding * 2 + margin * 2;\n                            outerHeight = height + padding * 2 + margin * 2;\n                        } else {\n                            outerWidth = opt.outerWidth;\n                            outerHeight = opt.outerHeight;\n                        }\n                    }\n\n                    me.position = position;\n                    me.width = width;\n                    me.height = height;\n                    me.outerWidth = outerWidth;\n                    me.outerHeight = outerHeight;\n\n                    Object.defineProperty(this, 'x', {\n                        get: function get() {\n                            return x;\n                        },\n                        set: function set(value) {\n                            me.width += x - value;\n                            me.outerWidth += x - value;\n                            x = value;\n                        }\n                    });\n\n                    Object.defineProperty(this, 'y', {\n                        get: function get() {\n                            return y;\n                        },\n                        set: function set(value) {\n                            me.height += y - value;\n                            me.outerHeight += y - value;\n                            y = value;\n                        }\n                    });\n                }\n\n                /**\n                 * The x,y in right-bottom\n                 */\n\n                _createClass(BoxInstance, [{\n                    key: 'clone',\n\n                    /**\n                     * Clone this box and return an new Instance\n                     * @returns {BoxInstance}\n                     */\n                    value: function clone() {\n                        var me = this;\n                        return new BoxInstance(me.position, me.x, me.y, me.width, me.height, me.outerWidth, me.outerHeight);\n                    }\n\n                    /**\n                     * Check whether intersect with other BoxInstance\n                     */\n\n                }, {\n                    key: 'isIntersect',\n                    value: function isIntersect(boxInstance) {\n                        var me = this;\n                        return !(me.ex < boxInstance.x || me.x > boxInstance.ex || me.ey < boxInstance.y || me.y < boxInstance.ey);\n                    }\n                }, {\n                    key: 'toObject',\n                    value: function toObject() {\n                        return {\n                            position: this.position,\n                            x: this.x,\n                            y: this.y,\n                            ex: this.ex,\n                            ey: this.ey,\n                            lx: this.lx,\n                            ly: this.ly,\n                            rx: this.rx,\n                            ry: this.ry,\n                            width: this.width,\n                            height: this.height,\n                            outerHeight: this.outerHeight,\n                            outerWidth: this.outerWidth\n                        };\n                    }\n                }, {\n                    key: 'ex',\n                    get: function get() {\n                        return this.x + this.outerWidth;\n                    }\n                }, {\n                    key: 'ey',\n                    get: function get() {\n                        return this.y + this.outerHeight;\n                    }\n                    /**\n                     * The x,y in content\n                     */\n\n                }, {\n                    key: 'lx',\n                    get: function get() {\n                        return this.x + this.marginLR;\n                    }\n                }, {\n                    key: 'ly',\n                    get: function get() {\n                        return this.y + this.marginTB;\n                    }\n                }, {\n                    key: 'rx',\n                    get: function get() {\n                        return this.x + this.width + this.marginLR;\n                    }\n                }, {\n                    key: 'ry',\n                    get: function get() {\n                        return this.y + this.height + this.marginTB;\n                    }\n                }, {\n                    key: 'marginLR',\n                    get: function get() {\n                        return (this.outerWidth - this.width) / 2;\n                    },\n                    set: function set(value) {\n                        if (_helper.is.Number(value)) {\n                            this.width -= value * 2;\n                        }\n                    }\n                }, {\n                    key: 'marginTB',\n                    get: function get() {\n                        return (this.outerHeight - this.height) / 2;\n                    },\n                    set: function set(value) {\n                        if (_helper.is.Number(value)) {\n                            this.height -= value * 2;\n                        }\n                    }\n                }]);\n\n                return BoxInstance;\n            }();\n            /**\n             * @class WxLayout\n             * Find the best box area of items\n             */\n\n            var WxLayout = function () {\n                function WxLayout(wxChart) {\n                    _classCallCheck(this, WxLayout);\n\n                    var me = this;\n\n                    if (!wxChart || !wxChart instanceof _base2.default) {\n                        throw new Error('Should be an WxChart instance');\n                    }\n                    me.wxChart = wxChart;\n                    //me.initBox = wx.wxChart.innerBox.clone();\n                    me._boxs = [];\n                }\n\n                /**\n                 * Add an boxInstance\n                 * @param {BoxInstance} boxInstance\n                 * @returns {number} The box id\n                 */\n\n                _createClass(WxLayout, [{\n                    key: 'addBox',\n                    value: function addBox(boxInstance) {\n                        var me = this;\n                        if (!boxInstance instanceof BoxInstance) {\n                            throw new Error('Please add an BoxInstance Object');\n                        }\n                        return parseInt(me._boxs.push(boxInstance)) - 1;\n                    }\n\n                    /**\n                     * Remove an boxInstance\n                     * @param {(BoxInstance|number)} boxId - The box id\n                     */\n\n                }, {\n                    key: 'removeBox',\n                    value: function removeBox(boxId) {\n                        var me = this;\n                        if (_helper.is.Number(boxId)) {\n                            me._boxs.splice(boxId, 1);\n                        } else if (boxId instanceof BoxInstance) {\n                            me._boxs.splice(me._boxs.indexOf(boxId), 1);\n                        }\n                    }\n                }, {\n                    key: 'removeAllBox',\n                    value: function removeAllBox() {\n                        this._boxs = [];\n                    }\n                }, {\n                    key: 'adjustBox',\n                    value: function adjustBox() {\n                        var me = this;\n                        var box = me.wxChart.innerBox.clone();\n                        me._boxs.forEach(function (boxInstance) {\n                            var position = boxInstance.position,\n                                x = boxInstance.x,\n                                y = boxInstance.y,\n                                height = boxInstance.height,\n                                width = boxInstance.width,\n                                outerWidth = boxInstance.outerWidth,\n                                outerHeight = boxInstance.outerHeight;\n\n                            switch (position) {\n                                case 'top':\n                                    box.y += outerHeight;\n                                    break;\n                                case 'bottom':\n                                    box.outerHeight -= outerHeight;\n                                    box.height -= outerHeight;\n                                    break;\n                                case 'left':\n                                    box.x += outerWidth;\n                                    break;\n                                case 'right':\n                                    box.outerWidth -= outerWidth;\n                                    box.width -= outerWidth;\n                                    break;\n                            }\n                        });\n                        return box;\n                    }\n                }]);\n\n                return WxLayout;\n            }();\n\n            exports.default = WxLayout;\n        }, { \"../util/helper\": 13, \"./base\": 5 }], 7: [function (require, module, exports) {\n            /* global module, wx, window: false, document: false */\n            'use strict';\n\n            Object.defineProperty(exports, \"__esModule\", {\n                value: true\n            });\n\n            var _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n                return typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n            } : function (obj) {\n                return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n            };\n\n            var _createClass = function () {\n                function defineProperties(target, props) {\n                    for (var i = 0; i < props.length; i++) {\n                        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }return function (Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n                };\n            }();\n\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;if (getter === undefined) {\n                        return undefined;\n                    }return getter.call(receiver);\n                }\n            };\n\n            var _base = require('./base');\n\n            var _base2 = _interopRequireDefault(_base);\n\n            var _helper = require('../util/helper');\n\n            var _layout = require('./layout');\n\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : { default: obj };\n            }\n\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n\n            function _possibleConstructorReturn(self, call) {\n                if (!self) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof2(call)) === \"object\" || typeof call === \"function\") ? call : self;\n            }\n\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof2(superClass)));\n                }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n\n            // Legend default config\n            var WX_LEGEND_DEFAULT_CONFIG = {\n                display: true,\n                /**\n                 * position can set to :top, bottom, left(same as left bottom), right(same as right bottom), left top, left bottom, right top, right bottom\n                 */\n                position: 'top',\n                fullWidth: true, // if the fullWidth is false, the 'width' property should be existed.\n                labels: {\n                    boxWidth: 30,\n                    fontSize: 11,\n                    padding: 10 // Padding width between legend items\n                }\n            };\n\n            //\n            // The datasets is an empty array at the first time\n            // When you set 'data' attribute, the legend items will draw on Canvas\n            // Format\n            // {\n            //    text: 'Displayed Text String',\n            //    fillAlpha: 1, // Global fill alpha\n            //    fillStyle: 'Color', // Fill style of the legend box\n            //    display: Boolean, // If true, this item represents a hidden datasets. Label will be rendered with a strike-through effect,\n            //    strokeStyle: 'Color'\n            //    lineCap: String,\n            //    lineJoin: String,\n            //    lineWidth: Number\n            // }\n            var WX_LEGEND_DEFAULT_ITEM_CONFIG = {\n                'lineWidth': 1,\n                'display': true\n            };\n\n            var WxLegend = function (_WxBaseComponent) {\n                _inherits(WxLegend, _WxBaseComponent);\n\n                function WxLegend(wxChart, config) {\n                    _classCallCheck(this, WxLegend);\n\n                    var _this = _possibleConstructorReturn(this, (WxLegend.__proto__ || Object.getPrototypeOf(WxLegend)).call(this, wxChart, config));\n\n                    _this.config = (0, _helper.extend)(true, {}, WX_LEGEND_DEFAULT_CONFIG, config);\n                    return _this;\n                }\n\n                _createClass(WxLegend, [{\n                    key: 'init',\n                    value: function init(datasets) {\n                        var defaultOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : WX_LEGEND_DEFAULT_ITEM_CONFIG;\n\n                        var me = this;\n                        var config = me.config;\n\n                        datasets = _get(WxLegend.prototype.__proto__ || Object.getPrototypeOf(WxLegend.prototype), 'init', this).call(this, datasets, defaultOptions);\n                        // Reset legendBox\n                        // Calculate the legend items\n                        datasets = me.calculateLegendItem(datasets, config);\n\n                        me._datasets = datasets;\n\n                        return datasets;\n                    }\n                }, {\n                    key: 'calculateLegendItem',\n                    value: function calculateLegendItem(datasets, config) {\n                        var me = this;\n                        var labelsConfig = config.labels || {};\n\n                        var ctx = me.wxChart.ctx;\n                        var boxWidth = labelsConfig.boxWidth;\n                        var fontSize = labelsConfig.fontSize;\n                        if (!_helper.is.Array(datasets) && _helper.is.PureObject(datasets)) {\n                            datasets = [datasets];\n                        }\n\n                        datasets = datasets.map(function (dataset) {\n                            var textWidth = ctx.measureText(dataset.text).width;\n\n                            var width = boxWidth + fontSize / 2 + textWidth;\n                            dataset._prop = {\n                                'fontSize': fontSize,\n                                'boxHeight': fontSize,\n                                'boxWidth': boxWidth,\n                                'textWidth': textWidth,\n                                'width': width\n                            };\n                            return dataset;\n                        });\n\n                        return datasets;\n                    }\n                }, {\n                    key: 'calculateBox',\n                    value: function calculateBox(area) {\n                        var datasets = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.datasets;\n                        var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.config;\n\n                        var me = this;\n                        var outerWidth = void 0,\n                            outerHeight = void 0,\n                            width = void 0,\n                            height = void 0;\n                        var wxChart = me.wxChart,\n                            ctx = wxChart.ctx,\n                            fontSize = ctx.fontSize;\n                        var x = area.x,\n                            y = area.y;\n                        var padding = config.labels.padding || 10;\n\n                        if (me.isHorizontal()) {\n                            (function () {\n                                width = !!config.fullWidth ? area.width - padding * 2 : config.width;\n                                outerWidth = !!config.fullWidth ? area.width : config.width;\n                                height = fontSize;\n                                outerHeight = height + padding * 2;\n\n                                // Calculate all items\n                                var lineNum = 0,\n                                    currentLineWidth = 0,\n                                    maxLineWidth = 0;\n                                datasets.forEach(function (dataset) {\n                                    var prop = dataset._prop,\n                                        outerWidth = prop.width + padding;\n                                    var lineWidth = currentLineWidth + outerWidth;\n                                    if (lineWidth > width) {\n                                        // The previous line width\n                                        maxLineWidth = maxLineWidth < currentLineWidth ? currentLineWidth : maxLineWidth;\n                                        // We should take a new line\n                                        lineNum++;\n                                        // Set currentLineWidth = 0\n                                        currentLineWidth = outerWidth;\n\n                                        // The first item width insufficient..\n                                        if (outerWidth > width) {\n                                            // The width options is tooooo small!\n                                            console.warn('The width options is too small! width=', width, '.The chart will set to ', lineWidth);\n                                            width = outerWidth;\n                                        }\n                                    } else {\n                                        currentLineWidth += outerWidth;\n                                    }\n\n                                    prop.padding = padding;\n                                    prop.lineNum = lineNum;\n                                    prop.outerWidth = outerWidth;\n                                });\n                                maxLineWidth = maxLineWidth < currentLineWidth ? currentLineWidth : maxLineWidth;\n\n                                // Re calculate the height of legend\n                                if (lineNum > 0) {\n                                    height = fontSize * (lineNum + 1) + lineNum * fontSize / 2;\n                                    outerHeight = height + padding * 2;\n                                }\n\n                                x += (width - maxLineWidth) / 2;\n                                if (me.position == 'bottom') {\n                                    y = area.ry - outerHeight;\n                                    y = y < area.y ? area.y : y;\n                                }\n                            })();\n                        } else {\n                            var _ret2 = function () {\n                                var position = me.position.match(/left/) ? 'left' : 'right';\n                                var align = me.position.match(/top/) ? 'top' : 'bottom';\n                                var width = 0,\n                                    lineNum = 0;\n                                datasets.forEach(function (dataset) {\n                                    var wh = dataset._prop.width;\n                                    width = width < wh ? wh : width;\n\n                                    dataset._prop.padding = padding;\n                                    dataset._prop.lineNum = lineNum;\n                                    // not use to set prop.outerWidth\n                                    dataset._prop.outerWidth = null;\n                                    lineNum++;\n                                });\n                                outerWidth = width + padding * 2;\n                                height = fontSize * (lineNum + 1) + lineNum * padding / 2;\n                                outerHeight = height + padding * 2;\n\n                                if (align == 'bottom') {\n                                    y = area.ry - outerHeight;\n                                    y = y < area.y ? area.y : y;\n                                }\n                                if (position == 'right') {\n                                    x = area.rx - outerWidth;\n                                    x = x < 0 ? 0 : x;\n                                }\n                                return {\n                                    v: new _layout.BoxInstance({\n                                        position: position,\n                                        x: x,\n                                        y: y,\n                                        width: width,\n                                        outerWidth: outerWidth,\n                                        height: height,\n                                        outerHeight: outerHeight\n                                    })\n                                };\n                            }();\n\n                            if ((typeof _ret2 === 'undefined' ? 'undefined' : _typeof(_ret2)) === \"object\") return _ret2.v;\n                        }\n\n                        return new _layout.BoxInstance({\n                            position: config.position,\n                            x: x,\n                            y: y,\n                            width: width,\n                            outerWidth: outerWidth,\n                            height: height,\n                            outerHeight: outerHeight\n                        });\n                    }\n                }, {\n                    key: 'draw',\n                    value: function draw() {\n                        var datasets = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.datasets;\n                        var box = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.box;\n                        var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.config;\n\n                        var me = this,\n                            ctx = me.wxChart.ctx;\n                        var x = box.x,\n                            y = box.y,\n                            width = box.width,\n                            outerWidth = box.outerWidth,\n                            height = box.height,\n                            outerHeight = box.outerHeight;\n\n                        // Clear the area of legend\n\n                        me.clear();\n\n                        // Begin a new sub-context\n                        ctx.save();\n                        // Draw all items\n                        var currentLineNum = -1;\n                        var currentX = x,\n                            currentY = y;\n                        datasets.forEach(function (dataset) {\n                            var text = dataset.text,\n                                display = dataset.display,\n                                fillStyle = dataset.fillStyle,\n                                fillAlpha = dataset.fillAlpha,\n                                strokeStyle = dataset.strokeStyle,\n                                lineCap = dataset.lineCap,\n                                lineJoin = dataset.lineJoin,\n                                lineWidth = dataset.lineWidth;\n                            var _dataset$_prop = dataset._prop,\n                                width = _dataset$_prop.width,\n                                fontSize = _dataset$_prop.fontSize,\n                                textWidth = _dataset$_prop.textWidth,\n                                padding = _dataset$_prop.padding,\n                                lineNum = _dataset$_prop.lineNum,\n                                boxWidth = _dataset$_prop.boxWidth,\n                                boxHeight = _dataset$_prop.boxHeight,\n                                outerWidth = _dataset$_prop.outerWidth;\n\n                            if (!width) {\n                                // No need to draw\n                                return;\n                            }\n\n                            // Set style\n                            ctx.textBaseline = 'top';\n                            ctx.textAlign = 'start';\n                            ctx.fillStyle = fillStyle;\n                            ctx.fontSize = fontSize;\n                            ctx.strokeStyle = strokeStyle;\n                            ctx.lineCap = lineCap;\n                            ctx.lineJoin = lineJoin;\n                            ctx.lineWidth = lineWidth;\n\n                            if (currentLineNum < lineNum) {\n                                currentLineNum = lineNum;\n                                currentX = x + padding;\n                                currentY = y + lineNum * fontSize * 1.5 + padding;\n                            }\n                            var thisX = currentX;\n                            // draw rect\n                            if (ctx.lineWidth != 0) {\n                                ctx.strokeRect(currentX, currentY, boxWidth, boxHeight);\n                            }\n                            ctx.globalAlpha = fillAlpha;\n                            ctx.fillRect(currentX, currentY, boxWidth, boxHeight);\n                            ctx.globalAlpha = 1;\n\n                            // draw text\n                            currentX += boxWidth + fontSize / 2;\n                            ctx.fillText(text, currentX, currentY);\n\n                            // draw hidden strike through\n                            if (!display) {\n                                ctx.save();\n                                // Strike through the text if hidden\n                                ctx.beginPath();\n                                ctx.lineWidth = 1;\n                                ctx.moveTo(currentX, currentY + fontSize / 2);\n                                ctx.lineTo(currentX + textWidth, currentY + fontSize / 2);\n                                ctx.stroke();\n                                ctx.restore();\n                            }\n\n                            currentX = thisX + outerWidth;\n                        });\n                        ctx.restore();\n\n                        ctx.draw();\n                    }\n                }]);\n\n                return WxLegend;\n            }(_base2.default);\n\n            exports.default = WxLegend;\n        }, { \"../util/helper\": 13, \"./base\": 5, \"./layout\": 6 }], 8: [function (require, module, exports) {\n            /* global module, wx, window: false, document: false */\n            'use strict';\n\n            Object.defineProperty(exports, \"__esModule\", {\n                value: true\n            });\n\n            var _createClass = function () {\n                function defineProperties(target, props) {\n                    for (var i = 0; i < props.length; i++) {\n                        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }return function (Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n                };\n            }();\n\n            var _get = function get(object, property, receiver) {\n                if (object === null) object = Function.prototype;var desc = Object.getOwnPropertyDescriptor(object, property);if (desc === undefined) {\n                    var parent = Object.getPrototypeOf(object);if (parent === null) {\n                        return undefined;\n                    } else {\n                        return get(parent, property, receiver);\n                    }\n                } else if (\"value\" in desc) {\n                    return desc.value;\n                } else {\n                    var getter = desc.get;if (getter === undefined) {\n                        return undefined;\n                    }return getter.call(receiver);\n                }\n            };\n\n            var _helper = require('../util/helper');\n\n            var _wxCanvas = require('../util/wxCanvas');\n\n            var _wxCanvas2 = _interopRequireDefault(_wxCanvas);\n\n            var _layout = require('./layout');\n\n            var _base = require('./base');\n\n            var _base2 = _interopRequireDefault(_base);\n\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : { default: obj };\n            }\n\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n\n            function _possibleConstructorReturn(self, call) {\n                if (!self) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof2(call)) === \"object\" || typeof call === \"function\") ? call : self;\n            }\n\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof2(superClass)));\n                }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n\n            // Scale default config\n            var WX_SCALE_DEFAULT_CONFIG = {\n                display: true,\n                position: 'top', // left, bottom, right, top\n                extendLeft: 0,\n                extendTop: 0,\n                title: undefined,\n                titleFontSize: 12,\n                titleFontColor: '#4c4d4d',\n                //'lineSpace' = fontSize * 0.5'\n                color: '#000000', // Line color\n                lineWidth: 1,\n\n                gridLines: {\n                    display: true,\n                    color: '#e0e0e0', // Line color\n                    lineWidth: 1\n                },\n\n                ticks: {\n                    display: true,\n                    autoSkip: true,\n                    lineWidth: 1,\n                    fontColor: '#000000',\n                    fontSize: 11,\n                    minRotation: 0,\n                    maxRotation: 90\n\n                    //maxTicksLimit: null,\n                }\n            };\n\n            var WX_SCALE_DEFAULT_ITEM_CONFIG = {\n                display: true,\n                // text: '',\n                lineWidth: 1,\n                fontColor: '#000000'\n            };\n\n            // The WeinXin APP scale\n\n            var WxScale = function (_WxBaseComponent) {\n                _inherits(WxScale, _WxBaseComponent);\n\n                function WxScale(wxChart, config) {\n                    _classCallCheck(this, WxScale);\n\n                    var _this = _possibleConstructorReturn(this, (WxScale.__proto__ || Object.getPrototypeOf(WxScale)).call(this, wxChart, config));\n\n                    _this.config = (0, _helper.extend)(true, {}, WX_SCALE_DEFAULT_CONFIG, config);\n                    return _this;\n                }\n\n                /**\n                 * Get visible tick's text data\n                 */\n\n                _createClass(WxScale, [{\n                    key: 'getTicksText',\n                    value: function getTicksText(tick) {\n                        if (!!tick && !!tick.text) {\n                            return tick.format ? tick.format.call(tick, tick.text, tick) : tick.text;\n                        }\n                        return null;\n                    }\n\n                    /**\n                     * Get lineSpace\n                     * @returns {*|number}\n                     */\n\n                }, {\n                    key: 'longestText',\n\n                    /**\n                     * Get longest text\n                     */\n                    value: function longestText() {\n                        var ctx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.wxChart.ctx;\n                        var datasets = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.datasets;\n\n                        var me = this;\n                        var maxTextLen = 0;\n                        datasets.forEach(function (dataset) {\n                            if (!!dataset.display) {\n                                var textWidth = void 0;\n                                if (dataset.textWidth) {\n                                    textWidth = dataset.textWidth;\n                                } else {\n                                    var text = me.getTicksText(dataset);\n                                    textWidth = ctx.measureText(text).width;\n                                    dataset.textWidth = textWidth;\n                                }\n                                maxTextLen = maxTextLen < textWidth ? textWidth : maxTextLen;\n                            }\n                        });\n                        return maxTextLen;\n                    }\n                }, {\n                    key: 'calculateFixPadding',\n                    value: function calculateFixPadding(datasets, config) {\n                        var me = this,\n                            ctx = me.wxChart.ctx;\n                        if (config.fixPadding) {\n                            return config.fixPadding;\n                        }\n                        if (me.isHorizontal()) {\n                            var visTicks = me.visDatasets;\n                            var firstTickText = me.getTicksText(visTicks[0]),\n                                lastTickText = me.getTicksText(visTicks[visTicks.length - 1]);\n                            return Math.max(ctx.measureText(firstTickText).width, ctx.measureText(lastTickText).width);\n                        } else {\n                            return ctx.fontSize;\n                        }\n                    }\n                }, {\n                    key: 'init',\n                    value: function init(datasets) {\n                        var defaultOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : WX_SCALE_DEFAULT_ITEM_CONFIG;\n\n                        var me = this;\n                        var config = me.config;\n\n                        datasets = _get(WxScale.prototype.__proto__ || Object.getPrototypeOf(WxScale.prototype), 'init', this).call(this, datasets, defaultOptions);\n                        me.visDatasets = null;\n                        me._datasets = datasets;\n                        me.fixPadding = me.calculateFixPadding(datasets, config);\n\n                        return datasets;\n                    }\n                }, {\n                    key: 'calculateBox',\n                    value: function calculateBox(area) {\n                        var datasets = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.datasets;\n                        var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.config;\n\n                        var me = this,\n                            ctx = me.wxChart.ctx;\n                        var fontSize = ctx.fontSize;\n                        var tickWidth = me.calculateTickWidth(datasets, area, config);\n                        var x = void 0,\n                            y = void 0,\n                            minWidth = void 0,\n                            minHeight = void 0,\n                            maxWidth = void 0,\n                            maxHeight = void 0;\n                        var minFontRotation = (0, _helper.toRadians)(config.ticks.minRotation || 0),\n                            maxFontRotation = (0, _helper.toRadians)(config.ticks.maxRotation || 90),\n                            fontRadians = minFontRotation;\n                        var lineSpace = me.lineSpace;\n                        var lineWidth = 1;\n\n                        var longestText = me.longestText();\n                        if (me.isHorizontal()) {\n                            if (longestText > tickWidth) {\n                                // Ticket's width not satisfied with the longest text's width\n                                if (tickWidth <= ctx.fontSize) {\n                                    fontRadians = maxFontRotation;\n                                } else {\n                                    fontRadians = Math.acos(tickWidth / longestText);\n                                    minHeight = Math.sin(fontRadians) * longestText + lineWidth + lineSpace + fontSize / 2;\n                                    if (minHeight > area.height) {\n                                        minHeight = area.height;\n                                        fontRadians = Math.asin((minHeight - lineWidth - lineSpace - fontSize / 2) / longestText);\n                                    } else if (fontRadians > maxFontRotation) {\n                                        fontRadians = maxFontRotation;\n                                        minHeight = Math.sin(fontRadians) * longestText + lineWidth + lineSpace + fontSize / 2;\n                                    }\n                                }\n                            } else {\n                                minHeight = fontSize * 1.5 + lineWidth + lineSpace;\n                            }\n                            minWidth = area.width;\n                            maxWidth = area.outerWidth;\n                            maxHeight = minHeight;\n                        } else {\n                            var titleWidth = 0;\n                            if (config.title) {\n                                titleWidth = ctx.measureText(config.title, config.titleFontSize).width - lineWidth - lineSpace - fontSize / 2;\n                            }\n                            minWidth = longestText + lineWidth + lineSpace + fontSize / 2;\n                            minWidth = minWidth > titleWidth ? minWidth : titleWidth;\n                            if (minWidth > area.width) {\n                                minWidth = area.width;\n                                fontRadians = Math.acos((minWidth - lineWidth - lineSpace - fontSize / 2) / longestText);\n                                fontRadians = fontRadians > maxFontRotation ? maxFontRotation : fontRadians;\n                            }\n                            minHeight = area.height;\n                            maxWidth = minWidth;\n                            maxHeight = area.outerHeight;\n                        }\n                        switch (me.position) {\n                            case 'left':\n                            case 'top':\n                                x = area.x;\n                                y = area.y;\n                                break;\n                            case 'right':\n                                x = area.x + area.width - maxWidth;\n                                y = area.y;\n                                break;\n                            case 'bottom':\n                                x = area.x;\n                                y = area.y + area.height - maxHeight;\n                                break;\n                        }\n\n                        me.fontRadians = fontRadians;\n                        return new _layout.BoxInstance(me.position, x, y, minWidth, minHeight, maxWidth, maxHeight);\n                    }\n                }, {\n                    key: 'calculateTickWidth',\n\n                    /**\n                     * Calculate ticks' separation distance\n                     * @param {BoxInstance} [area=this.box]\n                     *\n                     *\n                     * Horizontal Scale:\n                     * x------------------------------------.--x(first tick)--------------------------.--x(last tick)--margin--x\n                     * x------------------------------------.--x(first tick)-----x(last tick)--margin-.--x--titleWidth+padding--\n                     * |---extendLeft---|(box.x)---margin---|-----------area.width----------------------|---------margin------|\n                     *                  |----------------------------area box-------------------------------------------------|\n                     * Vertical Scale:\n                     * x----------------------------------------.--x--------(first tick)----------.--x(last tick)-x\n                     * x------------------titleHeight+padding---.--x---margin-x-------(first tick).--x(last tick)-x\n                     * |---extendTop----|(box.y)---margin-------|-----------area.height--------------|---margin---|\n                     *                  |----------------------------area box-------------------------------------|\n                     */\n                    value: function calculateTickWidth() {\n                        var datasets = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.datasets;\n                        var area = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.box;\n                        var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.config;\n\n                        var me = this,\n                            ticketWidth = void 0;\n                        var visTicks = me.visDatasets;\n                        var defaultLineWidth = config.ticks.lineWidth;\n                        // total line width\n                        var totalLineWidth = _helper.sum.apply(null, visTicks.map(function (v) {\n                            return v.lineWidth || defaultLineWidth;\n                        }));\n                        var fixPadding = me.fixPadding;\n\n                        if (me.isHorizontal()) {\n                            var innerWidth = area.width,\n                                marginLR = area.marginLR;\n                            var titleWidth = me.calculateTitleWidth();\n                            var extendLeft = me.config.extendLeft;\n                            if (marginLR !== 0) {\n                                totalLineWidth += defaultLineWidth * 2;\n                            } else if (extendLeft !== 0) {\n                                totalLineWidth += defaultLineWidth;\n                            }\n                            ticketWidth = (innerWidth - titleWidth - totalLineWidth - fixPadding) / (visTicks.length - 1);\n                        } else {\n                            var innerHeight = area.height,\n                                marginTB = area.marginTB;\n                            var titleHeight = me.calculateTitleWidth();\n                            var extendTop = config.extendTop;\n                            if (marginTB !== 0) {\n                                totalLineWidth += defaultLineWidth * 2;\n                            } else if (extendTop !== 0) {\n                                totalLineWidth += defaultLineWidth;\n                            }\n                            ticketWidth = (innerHeight - titleHeight - totalLineWidth - fixPadding) / (visTicks.length - 1);\n                        }\n                        return ticketWidth;\n                    }\n                }, {\n                    key: 'calculateTitleWidth',\n                    value: function calculateTitleWidth() {\n                        var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.config;\n\n                        var titleWidth = void 0,\n                            me = this,\n                            ctx = me.wxChart.ctx;\n                        if (me.isHorizontal()) {\n                            titleWidth = config.title ? ctx.measureText(config.title, config.titleFontSize).width : 0;\n                        } else {\n                            titleWidth = config.title ? config.titleFontSize : 0;\n                        }\n                        return titleWidth;\n                    }\n                }, {\n                    key: '_getTicksLineWidthOffset',\n                    value: function _getTicksLineWidthOffset(index, visTicks) {\n                        var offset = 0,\n                            me = this;\n                        if (!visTicks) {\n                            visTicks = me.visDatasets;\n                        }\n                        var defaultLineWidth = this.config.ticks.lineWidth;\n                        visTicks.map(function (tick, i) {\n                            if (index >= i) {\n                                offset += tick.lineWidth || defaultLineWidth;\n                            }\n                        });\n                        return offset;\n                    }\n\n                    /**\n                     * Get position of ticket\n                     * @param {number} index - Begin from zero. If set -1, the function will return the actual x,y included extendLeft or extendTop\n                     * @param {number} [ticketWidth=this.ticketWidth]\n                     * @param {BoxInstance} [area=this.box]\n                     */\n\n                }, {\n                    key: 'getTicksPosition',\n                    value: function getTicksPosition(index, ticketWidth) {\n                        var area = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.box;\n\n                        var me = this,\n                            ctx = me.wxChart.ctx;\n                        var fixPadding = me.fixPadding;\n                        if (!ticketWidth) {\n                            ticketWidth = me.calculateTickWidth();\n                        }\n                        var visTicks = me.visDatasets;\n\n                        var baseX = void 0,\n                            baseY = void 0;\n                        if (me.isHorizontal()) {\n                            baseX = index === -1 ? area.x - me.config.extendLeft + fixPadding / 2 + (me.config.extendLeft ? me.config.ticks.lineWidth : 0) : area.lx + me._getTicksLineWidthOffset(index, visTicks) + ticketWidth * index + fixPadding / 2;\n                            baseY = me.position === 'top' ? area.ry - me.lineSpace : area.ly + me.lineSpace;\n                        } else {\n                            baseY = index === -1 ? area.y - me.config.extendTop + fixPadding / 2 + (me.config.extendTop ? me.config.ticks.lineWidth : 0) : area.ly + me.calculateTitleWidth() + me._getTicksLineWidthOffset(index, visTicks) + ticketWidth * index + fixPadding / 2;\n                            baseX = me.position === 'left' ? area.rx - me.lineSpace : area.lx + me.lineSpace;\n                        }\n                        return { x: baseX, y: baseY };\n                    }\n                }, {\n                    key: '_initDrawATickText',\n                    value: function _initDrawATickText() {\n                        var me = this,\n                            ctx = me.wxChart.ctx;\n                        switch (me.position) {\n                            case 'left':\n                                ctx.textAlign = 'end';\n                                ctx.textBaseline = 'middle';\n                                break;\n                            case 'right':\n                                ctx.textAlign = 'start';\n                                ctx.textBaseline = 'middle';\n                                break;\n                            case 'top':\n                                ctx.textAlign = 'center';\n                                ctx.textBaseline = 'alphabetic';\n                                break;\n                            case 'bottom':\n                                ctx.textAlign = 'center';\n                                ctx.textBaseline = 'top';\n                                break;\n                        }\n                    }\n                }, {\n                    key: '_drawATickLine',\n                    value: function _drawATickLine(x, y, fontSize) {\n                        var tick = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n                        var me = this,\n                            ctx = me.wxChart.ctx;\n                        var lineSpace = me.lineSpace;\n                        var sx = x;\n                        var sy = y;\n                        switch (me.position) {\n                            case 'left':\n                                sx += lineSpace;\n                                break;\n                            case 'right':\n                                sx -= lineSpace;\n                                break;\n                            case 'top':\n                                sy += lineSpace;\n                                break;\n                            case 'bottom':\n                                sy -= lineSpace;\n                                break;\n                        }\n                        ctx.beginPath();\n                        ctx.moveTo(sx, sy);\n                        ctx.lineTo(x, y);\n                        ctx.stroke();\n\n                        // Draw text\n                        var text = void 0;\n                        if (tick && tick.text && _helper.is.String(tick.text)) {\n                            ctx.save();\n                            me._initDrawATickText();\n                            text = tick.format ? tick.format.call(me, tick.text, tick, x, y, me.fontRadians) : tick.text;\n                            var textWidth = tick.textWidth ? tick.textWidth : ctx.measureText(text).width;\n                            switch (me.position) {\n                                case 'left':\n                                    ctx.translate(x - fontSize / 2, y + Math.sin(me.fontRadians) * textWidth / 2);\n                                    ctx.rotate(me.fontRadians);\n                                    //ctx.fillText(text, x - ctx.fontSize/2, y);\n                                    break;\n                                case 'right':\n                                    ctx.translate(x + fontSize / 2, y + Math.sin(me.fontRadians) * textWidth / 2);\n                                    ctx.rotate(-me.fontRadians);\n                                    // ctx.fillText(text, x + ctx.fontSize/2, y);\n                                    break;\n                                case 'top':\n                                    ctx.translate(x, y - fontSize / 2);\n                                    ctx.rotate(-me.fontRadians);\n                                    break;\n                                case 'bottom':\n                                    ctx.translate(x, y + fontSize / 2);\n                                    ctx.rotate(me.fontRadians);\n                                    break;\n                            }\n                            ctx.fillText(text, 0, 0);\n\n                            ctx.restore();\n                        }\n                    }\n                }, {\n                    key: 'draw',\n                    value: function draw() {\n                        var datasets = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.datasets;\n                        var box = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.box;\n                        var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.config;\n\n                        var me = this,\n                            ctx = me.wxChart.ctx;\n                        var fontSize = ctx.fontSize;\n                        var fixPadding = me.fixPadding,\n                            tickWidth = me.calculateTickWidth(datasets, box, config);\n                        var tickConfig = config.ticks;\n                        var x = box.x,\n                            y = box.y,\n                            width = box.width,\n                            outerWidth = box.outerWidth,\n                            height = box.height,\n                            outerHeight = box.outerHeight;\n\n                        var visTicks = me.visDatasets;\n\n                        var _me$getTicksPosition = me.getTicksPosition(-1, tickWidth),\n                            currX = _me$getTicksPosition.x,\n                            currY = _me$getTicksPosition.y,\n                            baseX = _me$getTicksPosition.x,\n                            baseY = _me$getTicksPosition.y;\n\n                        ctx.save();\n                        ctx.fillStyle = tickConfig.fontColor;\n                        ctx.fontSize = tickConfig.fontSize;\n                        ctx.lineWidth = tickConfig.lineWidth;\n                        var titleWidth = me.calculateTitleWidth();\n\n                        if (me.isHorizontal()) {\n                            // Draw the first point\n                            if (me.box.marginLR || config.extendLeft) {\n                                me._drawATickLine(currX, currY, fontSize);\n                            }\n                            // Move to first tick\n                            currX = me.box.lx + fixPadding / 2;\n                            // Draw ticks\n                            visTicks.map(function (tick) {\n                                currX += tick.lineWidth;\n                                ctx.fillStyle = tick.fontColor;\n                                ctx.lineWidth = tick.lineWidth;\n                                ctx.fontSize = tick.fontSize || ctx.fontSize;\n                                me._drawATickLine(currX, currY, fontSize, tick);\n                                currX += tickWidth;\n                            });\n                            // Draw the last point\n                            currX = me.box.ex - fixPadding / 2 - titleWidth;\n                            if (me.box.marginLR) {\n                                me._drawATickLine(currX, currY, fontSize);\n                            }\n\n                            ctx.fillStyle = tickConfig.fontColor;\n                            ctx.lineWidth = config.lineWidth;\n                            // draw axis line\n                            ctx.beginPath();\n                            ctx.moveTo(baseX, currY);\n                            ctx.lineTo(currX, currY);\n                            ctx.stroke();\n\n                            if (config.title) {\n                                ctx.save();\n                                currX += fontSize / 2;\n                                ctx.fontSize = config.titleFontSize;\n                                ctx.textAlign = 'start';\n                                ctx.textBaseline = 'bottom';\n                                ctx.fillStyle = config.titleFontColor;\n                                ctx.fillText(config.title, currX, currY);\n                                ctx.restore();\n                            }\n                        } else {\n                            if (config.title) {\n                                ctx.save();\n                                ctx.fontSize = config.titleFontSize;\n                                ctx.textAlign = 'center';\n                                ctx.textBaseline = 'bottom';\n                                ctx.fillStyle = config.titleFontColor;\n                                ctx.fillText(config.title, currX, currY);\n                                ctx.restore();\n                            }\n\n                            // Draw the first point\n                            if (me.box.marginTB || config.extendTop) {\n                                currY += titleWidth;\n                                me._drawATickLine(currX, currY, fontSize);\n                            }\n                            currY = me.box.ly + fixPadding / 2 + titleWidth;\n                            // Draw ticks\n                            visTicks.map(function (tick) {\n                                currY += tick.lineWidth;\n                                ctx.fillStyle = tick.fontColor;\n                                ctx.lineWidth = tick.lineWidth;\n                                ctx.fontSize = tick.fontSize || ctx.fontSize;\n                                me._drawATickLine(currX, currY, fontSize, tick);\n                                currY += tickWidth;\n                            });\n                            // Draw the last point\n                            currY = me.box.ey - fixPadding / 2;\n                            if (me.box.marginTB) {\n                                me._drawATickLine(currX, currY, fontSize);\n                            }\n\n                            ctx.fillStyle = tickConfig.fontColor;\n                            ctx.lineWidth = config.lineWidth;\n                            // draw axis line\n                            ctx.beginPath();\n                            ctx.moveTo(currX, baseY + titleWidth);\n                            ctx.lineTo(currX, currY);\n                            ctx.stroke();\n                        }\n                        ctx.draw();\n                        ctx.restore();\n                    }\n\n                    // Empty interface\n                    /**\n                     * Get one point by a value\n                     * @param {number} index - The index of category\n                     */\n\n                }, {\n                    key: 'getPoint',\n                    value: function getPoint(index) {\n                        return null;\n                    }\n                }, {\n                    key: 'lineSpace',\n                    get: function get() {\n                        var me = this;\n                        if (me._lineSpace) {\n                            return me._lineSpace;\n                        }\n                        me._lineSpace = this.config.lineSpace || this.wxChart.ctx.fontSize * 0.5;\n                        return me._lineSpace;\n                    }\n                }]);\n\n                return WxScale;\n            }(_base2.default);\n\n            exports.default = WxScale;\n        }, { \"../util/helper\": 13, \"../util/wxCanvas\": 16, \"./base\": 5, \"./layout\": 6 }], 9: [function (require, module, exports) {\n            /* global module, wx, window: false, document: false */\n            'use strict';\n\n            Object.defineProperty(exports, \"__esModule\", {\n                value: true\n            });\n\n            var _createClass = function () {\n                function defineProperties(target, props) {\n                    for (var i = 0; i < props.length; i++) {\n                        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }return function (Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n                };\n            }();\n\n            var _base = require('./base');\n\n            var _base2 = _interopRequireDefault(_base);\n\n            var _helper = require('../util/helper');\n\n            var _layout = require('./layout');\n\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : { default: obj };\n            }\n\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n\n            function _possibleConstructorReturn(self, call) {\n                if (!self) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof2(call)) === \"object\" || typeof call === \"function\") ? call : self;\n            }\n\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof2(superClass)));\n                }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n\n            // Legend default config\n            var WX_TITLE_DEFAULT_CONFIG = {\n                display: true,\n                position: 'top', // top, bottom\n                fullWidth: true, // if the fullWidth is false, the 'width' property should be existed.\n                fontSize: 16,\n                fontColor: '#666666',\n                padding: 10\n            };\n\n            var WxTitle = function (_WxBaseComponent) {\n                _inherits(WxTitle, _WxBaseComponent);\n\n                function WxTitle(wxChart, config) {\n                    _classCallCheck(this, WxTitle);\n\n                    var _this = _possibleConstructorReturn(this, (WxTitle.__proto__ || Object.getPrototypeOf(WxTitle)).call(this, wxChart, config));\n\n                    _this.config = (0, _helper.extend)(true, {}, WX_TITLE_DEFAULT_CONFIG, config);\n                    return _this;\n                }\n\n                /**\n                 * Update data and re-draw\n                 * @param {Object[]} text\n                 * @param {Object} [defaultOptions]\n                 * @returns {string} text\n                 */\n\n                _createClass(WxTitle, [{\n                    key: 'init',\n                    value: function init(text) {\n                        var defaultOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n                        var me = this;\n                        var config = me.config;\n\n                        text = text ? text : config.text;\n                        if (_helper.is.Undefined(text) || _helper.is.Null(text)) {\n                            throw new Error('Text is null');\n                        }\n\n                        me._datasets = text;\n                        return text;\n                    }\n                }, {\n                    key: 'calculateBox',\n                    value: function calculateBox(area) {\n                        var datasets = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.config.text;\n                        var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.config;\n\n                        var me = this;\n                        var wxChart = me.wxChart,\n                            ctx = wxChart.ctx,\n                            fontSize = config.fontSize || 16;\n                        var x = area.x,\n                            y = area.y;\n                        var padding = config.padding || 10;\n\n                        var width = !!config.fullWidth ? area.width - padding * 2 : config.width,\n                            outerWidth = !!config.fullWidth ? area.width : config.width,\n                            height = fontSize,\n                            outerHeight = height + padding * 2;\n\n                        if (config.position == 'bottom') {\n                            y = area.ry - outerHeight;\n                            y = y < area.y ? area.y : y;\n                        }\n\n                        return new _layout.BoxInstance({\n                            position: config.position,\n                            x: x,\n                            y: y,\n                            width: width,\n                            height: height,\n                            outerWidth: outerWidth,\n                            outerHeight: outerHeight\n                        });\n                    }\n                }, {\n                    key: 'draw',\n                    value: function draw() {\n                        var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.config.text;\n                        var box = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.box;\n                        var config = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.config;\n\n                        var me = this,\n                            ctx = me.wxChart.ctx;\n                        var x = box.x,\n                            y = box.y,\n                            width = box.width,\n                            outerWidth = box.outerWidth,\n                            height = box.height,\n                            outerHeight = box.outerHeight;\n\n                        if (_helper.is.Undefined(text) || _helper.is.Null(text)) {\n                            throw new Error('Text is null');\n                        }\n\n                        var fontColor = config.fontColor,\n                            fontSize = config.fontSize;\n                        // Clear the area of legend\n\n                        me.clear();\n                        // Begin a new sub-context\n                        ctx.save();\n\n                        ctx.textBaseline = 'top';\n                        ctx.textAlign = 'start';\n                        ctx.fillStyle = fontColor;\n                        ctx.fontSize = fontSize;\n\n                        var textLen = ctx.measureText(text).width;\n                        x += (width - textLen) / 2;\n                        ctx.fillText(text, x, y);\n\n                        ctx.restore();\n                        ctx.draw();\n                    }\n                }]);\n\n                return WxTitle;\n            }(_base2.default);\n\n            exports.default = WxTitle;\n            ;\n        }, { \"../util/helper\": 13, \"./base\": 5, \"./layout\": 6 }], 10: [function (require, module, exports) {\n            /* global module, wx, window: false, document: false */\n            'use strict';\n\n            Object.defineProperty(exports, \"__esModule\", {\n                value: true\n            });\n\n            var _createClass = function () {\n                function defineProperties(target, props) {\n                    for (var i = 0; i < props.length; i++) {\n                        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }return function (Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n                };\n            }();\n\n            var _scale = require('../core/scale');\n\n            var _scale2 = _interopRequireDefault(_scale);\n\n            var _helper = require('../util/helper');\n\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : { default: obj };\n            }\n\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n\n            function _possibleConstructorReturn(self, call) {\n                if (!self) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof2(call)) === \"object\" || typeof call === \"function\") ? call : self;\n            }\n\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof2(superClass)));\n                }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n\n            /**\n             * @class Liner scale\n             */\n            var WxCategoryScale = function (_WxScale) {\n                _inherits(WxCategoryScale, _WxScale);\n\n                function WxCategoryScale() {\n                    _classCallCheck(this, WxCategoryScale);\n\n                    return _possibleConstructorReturn(this, (WxCategoryScale.__proto__ || Object.getPrototypeOf(WxCategoryScale)).apply(this, arguments));\n                }\n\n                _createClass(WxCategoryScale, [{\n                    key: 'buildTicks',\n\n                    /**\n                     * Build a ticks array by minIndex or maxIndex\n                     * Use to generator category scale ticks\n                     *\n                     * @param {Array} legends - The legend config of chart\n                     * @param {number} maxIndex - Max index\n                     * @param {number} minIndex - Min index\n                     *\n                     * @return {Array} The ticks data\n                     */\n                    value: function buildTicks(legends, maxIndex, minIndex) {\n                        if (!legends || !_helper.is.Array(legends)) {\n                            return legends;\n                        }\n                        minIndex = minIndex || 0;\n                        maxIndex = maxIndex || legends.length;\n\n                        return legends.slice(minIndex, maxIndex);\n                    }\n                }, {\n                    key: 'buildDatasets',\n                    value: function buildDatasets(legends, maxIndex, minIndex) {\n                        return this.buildTicks.apply(this, arguments);\n                    }\n\n                    /**\n                     * Get one point by a value\n                     * @param {number} index - The index of category\n                     */\n\n                }, {\n                    key: 'getPoint',\n                    value: function getPoint(index) {\n                        return this.getTicksPosition(index);\n                    }\n                }]);\n\n                return WxCategoryScale;\n            }(_scale2.default);\n\n            exports.default = WxCategoryScale;\n        }, { \"../core/scale\": 8, \"../util/helper\": 13 }], 11: [function (require, module, exports) {\n            /* global module, wx, window: false, document: false */\n            'use strict';\n\n            Object.defineProperty(exports, \"__esModule\", {\n                value: true\n            });\n\n            var _createClass = function () {\n                function defineProperties(target, props) {\n                    for (var i = 0; i < props.length; i++) {\n                        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }return function (Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n                };\n            }();\n\n            var _scale = require('../core/scale');\n\n            var _scale2 = _interopRequireDefault(_scale);\n\n            var _layout = require('../core/layout');\n\n            var _layout2 = _interopRequireDefault(_layout);\n\n            var _helper = require('../util/helper');\n\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : { default: obj };\n            }\n\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n\n            var WX_CROSSSCALE_CONFIG = {\n                xMargin: undefined, // undefined, a number or a function\n                xFirstPointSpace: 'auto' };\n            /**\n             * An cross scale helper\n             */\n\n            var WxCrossScale = function () {\n                /**\n                 * @constructor\n                 * @param {WxScale} xScale - x-Axis instance\n                 * @param {WxScale} yScale - y-Axis instance\n                 * @param {Object} [config]\n                 */\n                function WxCrossScale(xScale, yScale, config) {\n                    _classCallCheck(this, WxCrossScale);\n\n                    if (!xScale instanceof _scale2.default && !yScale instanceof _scale2.default) {\n                        throw new Error('Should be an WxScale instance');\n                    }\n\n                    var me = this;\n                    me.xScale = xScale;\n                    me.yScale = yScale;\n\n                    me.config = (0, _helper.extend)(true, {}, WX_CROSSSCALE_CONFIG, config);\n                }\n\n                /**\n                 * Draw a cross scale\n                 */\n\n                _createClass(WxCrossScale, [{\n                    key: 'draw',\n                    value: function draw(area, xScaleDatasets, yScaleDatasets) {\n                        var me = this,\n                            _me$config = me.config,\n                            xMargin = _me$config.xMargin,\n                            xFirstPointSpace = _me$config.xFirstPointSpace;\n\n                        me.yScale.init(yScaleDatasets);\n                        var yBox = me.yScale.calculateBox(area, yScaleDatasets);\n                        me.xScale.init(xScaleDatasets);\n                        var xBox = me.xScale.calculateBox(area, xScaleDatasets);\n\n                        // Y-Base\n                        var yMHeight = xBox.outerHeight - xBox.marginTB - me.xScale.lineSpace;\n                        //yBox.y = yBox.y + yMHeight*2;\n                        me.yScale.config.fixPadding = yMHeight * 2;\n\n                        // Adjust X-BOX\n                        var xMWidth = yBox.outerWidth - yBox.marginLR - me.yScale.lineSpace;\n                        var xOffset = xMWidth - me.xScale.fixPadding / 2;\n                        var xExtendLeft = void 0;\n                        if (xFirstPointSpace === 'auto') {\n                            xExtendLeft = me.xScale.config.extendLeft || Math.min(xBox.width / 10, me.xScale.calculateTickWidth(xScaleDatasets, xBox) / xScaleDatasets.length);\n                        } else if (xFirstPointSpace === 0) {\n                            // Zero y-space; The first point of Y will overlap the last point of X, so remove the last point of X\n                            yScaleDatasets[yScaleDatasets.length - 1].text = '';\n                            xExtendLeft = 0;\n                        } else if (_helper.is.Function(xFirstPointSpace)) {\n                            xExtendLeft = xFirstPointSpace(xBox, yBox, area, me.xScale, me.yScale, xScaleDatasets, yScaleDatasets);\n                        } else {\n                            xExtendLeft = parseFloat(xFirstPointSpace);\n                        }\n                        if (xExtendLeft) {\n                            xOffset -= me.xScale.config.ticks.lineWidth || 1;\n                        }\n                        xOffset += xExtendLeft;\n\n                        var xAxisXPoint = area.x + xOffset;\n                        if (_helper.is.Function(xMargin)) {\n                            xMargin = xMargin(xBox, yBox, area, me.xScale, me.yScale, xScaleDatasets, yScaleDatasets);\n                        } else if (!xMargin || !_helper.is.Number(xMargin)) {\n                            xMargin = 0;\n                        }\n\n                        var calXbox = new _layout.BoxInstance(xBox.position, xAxisXPoint, xBox.y, xBox.width - xOffset - xMargin, xBox.height, xBox.outerWidth - xOffset, xBox.outerHeight);\n\n                        me.yScale.setBox(yBox, false);\n                        me.yScale.update(yScaleDatasets);\n\n                        me.xScale.setBox(calXbox, false);\n                        me.xScale.config.extendLeft = xExtendLeft;\n                        me.xScale.update(xScaleDatasets);\n\n                        return { xBox: calXbox, yBox: yBox };\n                    }\n                }]);\n\n                return WxCrossScale;\n            }();\n\n            exports.default = WxCrossScale;\n        }, { \"../core/layout\": 6, \"../core/scale\": 8, \"../util/helper\": 13 }], 12: [function (require, module, exports) {\n            /* global module, wx, window: false, document: false */\n            'use strict';\n\n            Object.defineProperty(exports, \"__esModule\", {\n                value: true\n            });\n\n            var _createClass = function () {\n                function defineProperties(target, props) {\n                    for (var i = 0; i < props.length; i++) {\n                        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }return function (Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n                };\n            }();\n\n            var _scale = require('../core/scale');\n\n            var _scale2 = _interopRequireDefault(_scale);\n\n            var _helper = require('../util/helper');\n\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : { default: obj };\n            }\n\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n\n            function _possibleConstructorReturn(self, call) {\n                if (!self) {\n                    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n                }return call && ((typeof call === \"undefined\" ? \"undefined\" : _typeof2(call)) === \"object\" || typeof call === \"function\") ? call : self;\n            }\n\n            function _inherits(subClass, superClass) {\n                if (typeof superClass !== \"function\" && superClass !== null) {\n                    throw new TypeError(\"Super expression must either be null or a function, not \" + (typeof superClass === \"undefined\" ? \"undefined\" : _typeof2(superClass)));\n                }subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n            }\n\n            /**\n             * @class Liner scale\n             */\n            var WxLinerScale = function (_WxScale) {\n                _inherits(WxLinerScale, _WxScale);\n\n                function WxLinerScale() {\n                    _classCallCheck(this, WxLinerScale);\n\n                    return _possibleConstructorReturn(this, (WxLinerScale.__proto__ || Object.getPrototypeOf(WxLinerScale)).apply(this, arguments));\n                }\n\n                _createClass(WxLinerScale, [{\n                    key: 'buildTicks',\n\n                    /**\n                     * Build a ticks array by max/min value\n                     * Use to generator liner scale ticks\n                     *\n                     * @param {number} max - Max value\n                     * @param {number} min - Min value\n                     * @param {number} maxTicks - The maxinum number of ticks\n                     * @param {number} [stepSize] - Special space size\n                     *\n                     * @return {Array} The ticks data\n                     */\n                    value: function buildTicks(max, min, maxTicks, stepSize) {\n                        var spacing = void 0,\n                            ticks = [];\n                        if (!!stepSize && stepSize > 0) {\n                            spacing = stepSize;\n                        } else {\n                            var niceRange = (0, _helper.niceNum)(max - min, false);\n                            spacing = (0, _helper.niceNum)(niceRange / (maxTicks - 1), true);\n                        }\n\n                        var niceMin = Math.floor(min / spacing) * spacing;\n                        var niceMax = Math.ceil(max / spacing) * spacing;\n                        var numSpaces = (niceMax - niceMin) / spacing;\n\n                        if ((0, _helper.almostEquals)(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n                            numSpaces = Math.round(numSpaces);\n                        } else {\n                            numSpaces = Math.ceil(numSpaces);\n                        }\n\n                        for (var j = 0; j < numSpaces; j++) {\n                            ticks.push(niceMin + j * spacing);\n                        }\n                        ticks.push(niceMax);\n\n                        return ticks;\n                    }\n\n                    /**\n                     * Build a datasets base on buildTicks\n                     *\n                     * @param {number} max - Max value\n                     * @param {number} min - Min value\n                     * @param {number} maxTicks - The maximum number of ticks\n                     * @param {number} [stepSize] - Assign the space size\n                     * @param {Object} [scaleOptions] - Assign the dataset item's options\n                     *\n                     * @return {Array} The ticks data\n                     */\n\n                }, {\n                    key: 'buildDatasets',\n                    value: function buildDatasets(max, min, maxTicks, stepSize, scaleOptions) {\n                        var me = this;\n                        var ticks = me.buildTicks(max, min, maxTicks, stepSize);\n                        if (!me.isHorizontal()) ticks.reverse();\n                        return ticks.map(function (val) {\n                            return (0, _helper.extend)({\n                                text: val + '',\n                                value: val\n                            }, scaleOptions);\n                        });\n                    }\n\n                    /**\n                     * Calculate the maximum ticks of scale\n                     *\n                     * @param {BoxInstance} area - area of chart\n                     * @param {WxCanvasRenderingContext2D} ctx - Content of chart\n                     * @returns {number} maxTicks\n                     */\n\n                }, {\n                    key: 'calculateTickLimit',\n                    value: function calculateTickLimit(area, ctx) {\n                        var me = this,\n                            fontSize = ctx.fontSize;\n                        var maxTicks = void 0;\n                        var tickOpts = me.config.ticks;\n\n                        if (me.isHorizontal()) {\n                            maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(area.width / 50));\n                        } else {\n                            // The factor of 2 used to scale the font size has been experimentally determined.\n                            maxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(area.height / (2 * fontSize)));\n                        }\n\n                        return maxTicks;\n                    }\n\n                    /**\n                     * Get one point by a value\n                     * **Must** run after 'setBox' or 'update'\n                     * @param {number} value\n                     * @returns {object} point\n                     *\n                     */\n\n                }, {\n                    key: 'getPoint',\n                    value: function getPoint(value) {\n                        var me = this,\n                            box = this.box;\n                        var pointX = void 0,\n                            pointY = void 0;\n\n                        var startVal = parseInt(me.visDatasets[0].value),\n                            endVal = parseInt(me.visDatasets[me.visDatasets.length - 1].value);\n                        // if (!me.isHorizontal()) {\n                        //     [startVal,endVal] = [endVal,startVal];\n                        // }\n                        var range = endVal - startVal;\n\n                        if (me.isHorizontal()) {\n                            var realWidth = me.getTicksPosition(me.visDatasets.length - 1).x - me.getTicksPosition(0).x;\n                            pointX = me.getTicksPosition(0).x + realWidth / range * (value - startVal);\n                            pointY = me.position === 'top' ? box.ry - me.lineSpace : box.ly + me.lineSpace;\n                        } else {\n                            var realHeight = me.getTicksPosition(me.visDatasets.length - 1).y - me.getTicksPosition(0).y;\n                            pointX = me.position === 'left' ? box.rx - me.lineSpace : box.lx + me.lineSpace;\n                            pointY = me.getTicksPosition(0).y + realHeight / range * (value - startVal);\n                        }\n                        return { x: Math.round(pointX), y: Math.round(pointY) };\n                    }\n                }]);\n\n                return WxLinerScale;\n            }(_scale2.default);\n\n            exports.default = WxLinerScale;\n        }, { \"../core/scale\": 8, \"../util/helper\": 13 }], 13: [function (require, module, exports) {\n            /* global module, wx, window: false, document: false */\n            'use strict';\n\n            Object.defineProperty(exports, \"__esModule\", {\n                value: true\n            });\n\n            var _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n                return typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n            } : function (obj) {\n                return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n            };\n\n            exports.sum = sum;\n            exports.checkWX = checkWX;\n            exports.wxConverToPx = wxConverToPx;\n            exports.toRadians = toRadians;\n            exports.toDegrees = toDegrees;\n            exports.getWindowSize = getWindowSize;\n            exports.getDPR = getDPR;\n            exports.niceNum = niceNum;\n            exports.almostEquals = almostEquals;\n            exports.splineCurve = splineCurve;\n            exports.getStyle = getStyle;\n            exports.readUsedSize = readUsedSize;\n            exports.retinaScale = retinaScale;\n\n            function _toConsumableArray(arr) {\n                if (Array.isArray(arr)) {\n                    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n                        arr2[i] = arr[i];\n                    }return arr2;\n                } else {\n                    return Array.from(arr);\n                }\n            }\n\n            var ObjProto = Object.prototype;\n\n            // IS function, check variable's type\n            var is = exports.is = {};\n\n            ['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'].forEach(function (name) {\n                is[name] = function (obj) {\n                    return ObjProto.toString.call(obj) === '[object ' + name + ']';\n                };\n            });\n\n            // Is a given value an array?\n            // Delegates to ECMA5's native Array.isArray\n            is['Array'] = Array.isArray || function (obj) {\n                return ObjProto.toString.call(obj) === '[object Array]';\n            };\n\n            // Is a given variable an object?\n            is['Object'] = function (obj) {\n                var type = typeof obj === 'undefined' ? 'undefined' : _typeof(obj);\n                return type === 'function' || type === 'object' && !!obj;\n            };\n\n            var class2type = {};\n            var toString = class2type.toString;\n            var hasOwn = class2type.hasOwnProperty;\n            var fnToString = hasOwn.toString;\n            var ObjectFunctionString = fnToString.call(Object);\n            // Is a given variable an object?\n            is['PureObject'] = function (obj) {\n                var proto = void 0,\n                    Ctor = void 0;\n\n                // Detect obvious negatives\n                // Use toString instead of jQuery.type to catch host objects\n                if (!obj || ObjProto.toString.call(obj) !== \"[object Object]\") {\n                    return false;\n                }\n\n                proto = Object.getPrototypeOf(obj);\n                // Objects with no prototype (e.g., `Object.create( null )`) are plain\n                if (!proto) {\n                    return true;\n                }\n                // Objects with prototype are plain iff they were constructed by a global Object function\n                Ctor = hasOwn.call(proto, \"constructor\") && proto.constructor;\n                return typeof Ctor === \"function\" && fnToString.call(Ctor) === ObjectFunctionString;\n            };\n\n            is['Boolean'] = function (obj) {\n                return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n            };\n\n            // Is a given value equal to null?\n            is['Null'] = function (obj) {\n                return obj === null;\n            };\n\n            // Is a given variable undefined?\n            is['Undefined'] = function (obj) {\n                return obj === void 0;\n            };\n\n            // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n            is['NaN'] = function (obj) {\n                return is.Number(obj) && obj !== +obj;\n            };\n\n            // Some helper function\n            function sum() {\n                var args = Array.from(arguments);\n                var res = 0;\n                return args.reduce(function (a, b) {\n                    return a + b;\n                }, 0);\n            }\n\n            // Some regex\n            var REG_HANZI = exports.REG_HANZI = /[\\u4e00-\\u9fa5]/;\n            var REG_ALPHABET = exports.REG_ALPHABET = /[a-zA-Z]/;\n            var REG_NUMBER = exports.REG_NUMBER = /[0-9]/;\n            var REG_ALPHABET_NUMBER = exports.REG_ALPHABET_NUMBER = /[0-9a-zA-Z]/;\n\n            // Assign function generator\n            function _assignGenerator(own) {\n                var _copy = function _copy(target) {\n                    var deep = true;\n\n                    for (var _len = arguments.length, source = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                        source[_key - 1] = arguments[_key];\n                    }\n\n                    if (is.Boolean(target)) {\n                        deep = target;\n                        target = 0 in source ? source.shift() : null;\n                    }\n\n                    if (is.Array(target)) {\n                        source.forEach(function (sc) {\n                            var _target;\n\n                            (_target = target).push.apply(_target, _toConsumableArray(sc));\n                        });\n                    } else if (is.Object(target)) {\n                        source.forEach(function (sc) {\n                            for (var key in sc) {\n                                if (own && !sc.hasOwnProperty(key)) continue;\n                                var so = sc[key],\n                                    to = target[key];\n                                if (is.PureObject(so)) {\n                                    target[key] = deep ? extend(true, is.PureObject(to) ? to : {}, so) : so;\n                                } else if (is.Array(so)) {\n                                    target[key] = deep ? extend(true, is.Array(to) ? to : [], so) : so;\n                                } else {\n                                    target[key] = so;\n                                }\n                            }\n                        });\n                    }\n                    // Do nothing\n                    return target;\n                };\n                return _copy;\n            }\n\n            /**\r\n             *\r\n             * Extend a given object\r\n             * @param {Boolean|Object|Array} target - target object or deep mark (default is true)\r\n             * @param {Array|Object} source - target object if the first argument represent the deep mark, otherwise the source for merging\r\n             * @returns {*}\r\n             */\n            var extend = exports.extend = _assignGenerator(false);\n            var extendOwn = exports.extendOwn = _assignGenerator(true);\n            /**\r\n             * Check WeiXin environment\r\n             */\n            function checkWX() {\n                return false === true || typeof wx != 'undefined' && (typeof wx === 'undefined' ? 'undefined' : _typeof(wx)) === 'object';\n            }\n\n            var isWeiXinAPP = exports.isWeiXinAPP = checkWX();\n            /**\r\n             * Convert (rpx/rem) to px\r\n             * @param unit\r\n             */\n            var rpxReg = /([\\d.]+)rpx/,\n                remReg = /([\\d.]+)rem/;\n            function wxConverToPx(val) {\n                if (!isWeiXinAPP) {\n                    return Number.parseInt(val);\n                }\n\n                var windowSize = getWindowSize();\n                if (is.String(val)) {\n                    var m = val.match(rpxReg);\n                    if (!!m) {\n                        return +m[1] * windowSize.windowWidth / 750;\n                    }\n\n                    m = val.match(remReg);\n                    if (!!m) {\n                        return +m[1] * windowSize.windowWidth / 20;\n                    }\n\n                    return Number.parseInt(val);\n                } else if (is.Number(val)) {\n                    return val;\n                } else {\n                    throw new Error('Convert px error');\n                }\n            }\n\n            function toRadians(degrees) {\n                return degrees * (Math.PI / 180);\n            }\n            function toDegrees(radians) {\n                return radians * (180 / Math.PI);\n            }\n            /**\r\n             * Get window size (px)\r\n             * @returns {*}\r\n             */\n            function getWindowSize() {\n                var windowHeight = void 0,\n                    windowWidth = void 0;\n                if (isWeiXinAPP) {\n                    var ret = wx.getSystemInfoSync();\n                    windowWidth = ret.windowWidth;\n                    windowHeight = ret.windowHeight;\n                } else {\n                    windowWidth = window.innerWidth;\n                    windowHeight = window.innerHeight;\n                }\n                return { windowWidth: windowWidth, windowHeight: windowHeight };\n            };\n\n            /**\r\n             * Get window's Device Pixel Ratio\r\n             */\n            function getDPR() {\n                if (isWeiXinAPP) {\n                    var ret = wx.getSystemInfoSync();\n                    return ret.pixelRatio;\n                } else {\n                    return window.devicePixelRatio || 1;\n                }\n            };\n\n            var uid = exports.uid = function () {\n                var id = 0;\n                return function () {\n                    id++;\n                    return 'u' + id;\n                };\n            }();\n\n            function niceNum(range, round) {\n                var exponent = Math.floor(Math.log10(range));\n                var fraction = range / Math.pow(10, exponent);\n                var niceFraction = void 0;\n\n                if (round) {\n                    if (fraction < 1.5) {\n                        niceFraction = 1;\n                    } else if (fraction < 3) {\n                        niceFraction = 2;\n                    } else if (fraction < 7) {\n                        niceFraction = 5;\n                    } else {\n                        niceFraction = 10;\n                    }\n                } else if (fraction <= 1.0) {\n                    niceFraction = 1;\n                } else if (fraction <= 2) {\n                    niceFraction = 2;\n                } else if (fraction <= 5) {\n                    niceFraction = 5;\n                } else {\n                    niceFraction = 10;\n                }\n\n                return niceFraction * Math.pow(10, exponent);\n            }\n\n            function almostEquals(a, b, epsilon) {\n                return Math.abs(a - b) < epsilon;\n            }\n\n            function splineCurve(firstPoint, middlePoint, afterPoint) {\n                var t = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.4;\n\n                // Props to Rob Spencer at scaled innovation for his post on splining between points\n                // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n                // This function must also respect \"skipped\" points\n\n                var previous = !firstPoint ? middlePoint : firstPoint,\n                    current = middlePoint,\n                    next = !afterPoint ? middlePoint : afterPoint;\n\n                var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n                var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n                var s01 = d01 / (d01 + d12);\n                var s12 = d12 / (d01 + d12);\n\n                // If all points are the same, s01 & s02 will be inf\n                s01 = isNaN(s01) ? 0 : s01;\n                s12 = isNaN(s12) ? 0 : s12;\n\n                var fa = t * s01; // scaling factor for triangle Ta\n                var fb = t * s12;\n\n                return {\n                    previous: {\n                        x: current.x - fa * (next.x - previous.x),\n                        y: current.y - fa * (next.y - previous.y)\n                    },\n                    next: {\n                        x: current.x + fb * (next.x - previous.x),\n                        y: current.y + fb * (next.y - previous.y)\n                    }\n                };\n            }\n\n            /**\r\n             * Get element style\r\n             * @param element\r\n             */\n            function getStyle(element, property) {\n                return element.currentStyle ? element.currentStyle[property] : document.defaultView.getComputedStyle(element, null).getPropertyValue(property);\n            }\n            /**\r\n             * The 'used' size is the final value of a dimension property after all calculations have\r\n             * been performed. This method uses the computed style of `element` but returns undefined\r\n             * if the computed style is not expressed in pixels. That can happen in some cases where\r\n             * `element` has a size relative to its parent and this last one is not yet displayed,\r\n             * for example because of `display: none` on a parent node.\r\n             * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\r\n             * @param element\r\n             * @param property\r\n             * @returns {Number} Size in pixels or undefined if unknown.\r\n             */\n            function readUsedSize(element, property) {\n                var value = getStyle(element, property);\n                var matches = value && value.match(/(\\d+)px/);\n                return matches ? Number(matches[1]) : undefined;\n            }\n            /**\r\n             * For retina screen\r\n             * @param ctx\r\n             * @param width\r\n             * @param height\r\n             */\n            function retinaScale(ctx, width, height) {\n                var pixelRatio = getDPR();\n                if (pixelRatio === 1) {\n                    return;\n                }\n\n                var canvas = ctx.canvas;\n                if (isWeiXinAPP) {\n                    // Do I resize the height or width?\n                } else {\n                    canvas.height = canvas.height * pixelRatio;\n                    canvas.width = canvas.width * pixelRatio;\n                    ctx.scale(pixelRatio, pixelRatio);\n\n                    // If no style has been set on the canvas, the render size is used as display size,\n                    // making the chart visually bigger, so let's enforce it to the 'correct' values.\n                    // See https://github.com/chartjs/Chart.js/issues/3575\n                    canvas.style.height = height + 'px';\n                    canvas.style.width = width + 'px';\n                }\n            }\n        }, {}], 14: [function (require, module, exports) {\n            'use strict';\n\n            Object.defineProperty(exports, \"__esModule\", {\n                value: true\n            });\n            // Modified from randomColor by David Merfield under the CC0 license\n            // https://github.com/davidmerfield/randomColor/\n\n            var seed = null;\n\n            // Shared color dictionary\n            var colorDictionary = {};\n\n            // Populate the color dictionary\n            loadColorBounds();\n\n            var randomColor = function randomColor(options) {\n\n                options = options || {};\n\n                // Check if there is a seed and ensure it's an\n                // integer. Otherwise, reset the seed value.\n                if (options.seed !== undefined && options.seed !== null && options.seed === parseInt(options.seed, 10)) {\n                    seed = options.seed;\n\n                    // A string was passed as a seed\n                } else if (typeof options.seed === 'string') {\n                    seed = stringToInteger(options.seed);\n\n                    // Something was passed as a seed but it wasn't an integer or string\n                } else if (options.seed !== undefined && options.seed !== null) {\n                    throw new TypeError('The seed value must be an integer or string');\n\n                    // No seed, reset the value outside.\n                } else {\n                    seed = null;\n                }\n\n                var H = void 0,\n                    S = void 0,\n                    B = void 0;\n\n                // Check if we need to generate multiple colors\n                if (options.count !== null && options.count !== undefined) {\n\n                    var totalColors = options.count,\n                        colors = [];\n\n                    options.count = null;\n\n                    while (totalColors > colors.length) {\n\n                        // Since we're generating multiple colors,\n                        // incremement the seed. Otherwise we'd just\n                        // generate the same color each time...\n                        if (seed && options.seed) options.seed += 1;\n\n                        colors.push(randomColor(options));\n                    }\n\n                    options.count = totalColors;\n\n                    return colors;\n                }\n\n                // First we pick a hue (H)\n                H = pickHue(options);\n\n                // Then use H to determine saturation (S)\n                S = pickSaturation(H, options);\n\n                // Then use S and H to determine brightness (B).\n                B = pickBrightness(H, S, options);\n\n                // Then we return the HSB color in the desired format\n                return setFormat([H, S, B], options);\n            };\n\n            function pickHue(options) {\n\n                var hueRange = getHueRange(options.hue),\n                    hue = randomWithin(hueRange);\n\n                // Instead of storing red as two seperate ranges,\n                // we group them, using negative numbers\n                if (hue < 0) {\n                    hue = 360 + hue;\n                }\n\n                return hue;\n            }\n\n            function pickSaturation(hue, options) {\n\n                if (options.luminosity === 'random') {\n                    return randomWithin([0, 100]);\n                }\n\n                if (options.hue === 'monochrome') {\n                    return 0;\n                }\n\n                var saturationRange = getSaturationRange(hue);\n\n                var sMin = saturationRange[0],\n                    sMax = saturationRange[1];\n\n                switch (options.luminosity) {\n\n                    case 'bright':\n                        sMin = 55;\n                        break;\n\n                    case 'dark':\n                        sMin = sMax - 10;\n                        break;\n\n                    case 'light':\n                        sMax = 55;\n                        break;\n                }\n\n                return randomWithin([sMin, sMax]);\n            }\n\n            function pickBrightness(H, S, options) {\n\n                var bMin = getMinimumBrightness(H, S),\n                    bMax = 100;\n\n                switch (options.luminosity) {\n\n                    case 'dark':\n                        bMax = bMin + 20;\n                        break;\n\n                    case 'light':\n                        bMin = (bMax + bMin) / 2;\n                        break;\n\n                    case 'random':\n                        bMin = 0;\n                        bMax = 100;\n                        break;\n                }\n\n                return randomWithin([bMin, bMax]);\n            }\n\n            function setFormat(hsv, options) {\n\n                switch (options.format) {\n\n                    case 'hsvArray':\n                        return hsv;\n\n                    case 'hslArray':\n                        return HSVtoHSL(hsv);\n\n                    case 'hsl':\n                        var hsl = HSVtoHSL(hsv);\n                        return 'hsl(' + hsl[0] + ', ' + hsl[1] + '%, ' + hsl[2] + '%)';\n\n                    case 'hsla':\n                        var hslColor = HSVtoHSL(hsv);\n                        var alpha = options.alpha || Math.random();\n                        return 'hsla(' + hslColor[0] + ', ' + hslColor[1] + '%, ' + hslColor[2] + '%, ' + alpha + ')';\n\n                    case 'rgbArray':\n                        return HSVtoRGB(hsv);\n\n                    case 'rgb':\n                        var rgb = HSVtoRGB(hsv);\n                        return 'rgb(' + rgb.join(', ') + ')';\n\n                    case 'rgba':\n                        var rgbColor = HSVtoRGB(hsv);\n                        var alpha = options.alpha || Math.random();\n                        return 'rgba(' + rgbColor.join(', ') + ', ' + alpha + ')';\n\n                    default:\n                        return HSVtoHex(hsv);\n                }\n            }\n\n            function getMinimumBrightness(H, S) {\n\n                var lowerBounds = getColorInfo(H).lowerBounds;\n\n                for (var i = 0; i < lowerBounds.length - 1; i++) {\n\n                    var s1 = lowerBounds[i][0],\n                        v1 = lowerBounds[i][1];\n\n                    var s2 = lowerBounds[i + 1][0],\n                        v2 = lowerBounds[i + 1][1];\n\n                    if (S >= s1 && S <= s2) {\n\n                        var m = (v2 - v1) / (s2 - s1),\n                            b = v1 - m * s1;\n\n                        return m * S + b;\n                    }\n                }\n\n                return 0;\n            }\n\n            function getHueRange(colorInput) {\n\n                if (typeof parseInt(colorInput) === 'number') {\n\n                    var number = parseInt(colorInput);\n\n                    if (number < 360 && number > 0) {\n                        return [number, number];\n                    }\n                }\n\n                if (typeof colorInput === 'string') {\n\n                    if (colorDictionary[colorInput]) {\n                        var color = colorDictionary[colorInput];\n                        if (color.hueRange) {\n                            return color.hueRange;\n                        }\n                    }\n                }\n\n                return [0, 360];\n            }\n\n            function getSaturationRange(hue) {\n                return getColorInfo(hue).saturationRange;\n            }\n\n            function getColorInfo(hue) {\n\n                // Maps red colors to make picking hue easier\n                if (hue >= 334 && hue <= 360) {\n                    hue -= 360;\n                }\n\n                for (var colorName in colorDictionary) {\n                    var color = colorDictionary[colorName];\n                    if (color.hueRange && hue >= color.hueRange[0] && hue <= color.hueRange[1]) {\n                        return colorDictionary[colorName];\n                    }\n                }\n                return 'Color not found';\n            }\n\n            function randomWithin(range) {\n                if (seed === null) {\n                    return Math.floor(range[0] + Math.random() * (range[1] + 1 - range[0]));\n                } else {\n                    //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n                    var max = range[1] || 1;\n                    var min = range[0] || 0;\n                    seed = (seed * 9301 + 49297) % 233280;\n                    var rnd = seed / 233280.0;\n                    return Math.floor(min + rnd * (max - min));\n                }\n            }\n\n            function HSVtoHex(hsv) {\n\n                var rgb = HSVtoRGB(hsv);\n\n                function componentToHex(c) {\n                    var hex = c.toString(16);\n                    return hex.length == 1 ? '0' + hex : hex;\n                }\n\n                var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\n\n                return hex;\n            }\n\n            function defineColor(name, hueRange, lowerBounds) {\n\n                var sMin = lowerBounds[0][0],\n                    sMax = lowerBounds[lowerBounds.length - 1][0],\n                    bMin = lowerBounds[lowerBounds.length - 1][1],\n                    bMax = lowerBounds[0][1];\n\n                colorDictionary[name] = {\n                    hueRange: hueRange,\n                    lowerBounds: lowerBounds,\n                    saturationRange: [sMin, sMax],\n                    brightnessRange: [bMin, bMax]\n                };\n            }\n\n            function loadColorBounds() {\n\n                defineColor('monochrome', null, [[0, 0], [100, 0]]);\n\n                defineColor('red', [-26, 18], [[20, 100], [30, 92], [40, 89], [50, 85], [60, 78], [70, 70], [80, 60], [90, 55], [100, 50]]);\n\n                defineColor('orange', [19, 46], [[20, 100], [30, 93], [40, 88], [50, 86], [60, 85], [70, 70], [100, 70]]);\n\n                defineColor('yellow', [47, 62], [[25, 100], [40, 94], [50, 89], [60, 86], [70, 84], [80, 82], [90, 80], [100, 75]]);\n\n                defineColor('green', [63, 178], [[30, 100], [40, 90], [50, 85], [60, 81], [70, 74], [80, 64], [90, 50], [100, 40]]);\n\n                defineColor('blue', [179, 257], [[20, 100], [30, 86], [40, 80], [50, 74], [60, 60], [70, 52], [80, 44], [90, 39], [100, 35]]);\n\n                defineColor('purple', [258, 282], [[20, 100], [30, 87], [40, 79], [50, 70], [60, 65], [70, 59], [80, 52], [90, 45], [100, 42]]);\n\n                defineColor('pink', [283, 334], [[20, 100], [30, 90], [40, 86], [60, 84], [80, 80], [90, 75], [100, 73]]);\n            }\n\n            function HSVtoRGB(hsv) {\n\n                // this doesn't work for the values of 0 and 360\n                // here's the hacky fix\n                var h = hsv[0];\n                if (h === 0) {\n                    h = 1;\n                }\n                if (h === 360) {\n                    h = 359;\n                }\n\n                // Rebase the h,s,v values\n                h = h / 360;\n                var s = hsv[1] / 100,\n                    v = hsv[2] / 100;\n\n                var h_i = Math.floor(h * 6),\n                    f = h * 6 - h_i,\n                    p = v * (1 - s),\n                    q = v * (1 - f * s),\n                    t = v * (1 - (1 - f) * s),\n                    r = 256,\n                    g = 256,\n                    b = 256;\n\n                switch (h_i) {\n                    case 0:\n                        r = v;\n                        g = t;\n                        b = p;\n                        break;\n                    case 1:\n                        r = q;\n                        g = v;\n                        b = p;\n                        break;\n                    case 2:\n                        r = p;\n                        g = v;\n                        b = t;\n                        break;\n                    case 3:\n                        r = p;\n                        g = q;\n                        b = v;\n                        break;\n                    case 4:\n                        r = t;\n                        g = p;\n                        b = v;\n                        break;\n                    case 5:\n                        r = v;\n                        g = p;\n                        b = q;\n                        break;\n                }\n\n                var result = [Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)];\n                return result;\n            }\n\n            function HSVtoHSL(hsv) {\n                var h = hsv[0],\n                    s = hsv[1] / 100,\n                    v = hsv[2] / 100,\n                    k = (2 - s) * v;\n\n                return [h, Math.round(s * v / (k < 1 ? k : 2 - k) * 10000) / 100, k / 2 * 100];\n            }\n\n            function stringToInteger(string) {\n                var total = 0;\n                for (var i = 0; i !== string.length; i++) {\n                    if (total >= Number.MAX_SAFE_INTEGER) break;\n                    total += string.charCodeAt(i);\n                }\n                return total;\n            }\n\n            exports.default = randomColor;\n        }, {}], 15: [function (require, module, exports) {\n            \"use strict\";\n\n            Object.defineProperty(exports, \"__esModule\", {\n                value: true\n            });\n\n            var _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n                return typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n            } : function (obj) {\n                return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === \"undefined\" ? \"undefined\" : _typeof2(obj);\n            };\n\n            // TinyColor v1.4.1\n            // https://github.com/bgrins/TinyColor\n            // Brian Grinstead, MIT License\n\n\n            var trimLeft = /^\\s+/,\n                trimRight = /\\s+$/,\n                tinyCounter = 0,\n                mathRound = Math.round,\n                mathMin = Math.min,\n                mathMax = Math.max,\n                mathRandom = Math.random;\n\n            function tinycolor(color, opts) {\n\n                color = color ? color : '';\n                opts = opts || {};\n\n                // If input is already a tinycolor, return itself\n                if (color instanceof tinycolor) {\n                    return color;\n                }\n                // If we are called as a function, call using new instead\n                if (!(this instanceof tinycolor)) {\n                    return new tinycolor(color, opts);\n                }\n\n                var rgb = inputToRGB(color);\n                this._originalInput = color, this._r = rgb.r, this._g = rgb.g, this._b = rgb.b, this._a = rgb.a, this._roundA = mathRound(100 * this._a) / 100, this._format = opts.format || rgb.format;\n                this._gradientType = opts.gradientType;\n\n                // Don't let the range of [0,255] come back in [0,1].\n                // Potentially lose a little bit of precision here, but will fix issues where\n                // .5 gets interpreted as half of the total, instead of half of 1\n                // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n                if (this._r < 1) {\n                    this._r = mathRound(this._r);\n                }\n                if (this._g < 1) {\n                    this._g = mathRound(this._g);\n                }\n                if (this._b < 1) {\n                    this._b = mathRound(this._b);\n                }\n\n                this._ok = rgb.ok;\n                this._tc_id = tinyCounter++;\n            }\n\n            tinycolor.prototype = {\n                isDark: function isDark() {\n                    return this.getBrightness() < 128;\n                },\n                isLight: function isLight() {\n                    return !this.isDark();\n                },\n                isValid: function isValid() {\n                    return this._ok;\n                },\n                getOriginalInput: function getOriginalInput() {\n                    return this._originalInput;\n                },\n                getFormat: function getFormat() {\n                    return this._format;\n                },\n                getAlpha: function getAlpha() {\n                    return this._a;\n                },\n                getBrightness: function getBrightness() {\n                    //http://www.w3.org/TR/AERT#color-contrast\n                    var rgb = this.toRgb();\n                    return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n                },\n                getLuminance: function getLuminance() {\n                    //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n                    var rgb = this.toRgb();\n                    var RsRGB, GsRGB, BsRGB, R, G, B;\n                    RsRGB = rgb.r / 255;\n                    GsRGB = rgb.g / 255;\n                    BsRGB = rgb.b / 255;\n\n                    if (RsRGB <= 0.03928) {\n                        R = RsRGB / 12.92;\n                    } else {\n                        R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n                    }\n                    if (GsRGB <= 0.03928) {\n                        G = GsRGB / 12.92;\n                    } else {\n                        G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n                    }\n                    if (BsRGB <= 0.03928) {\n                        B = BsRGB / 12.92;\n                    } else {\n                        B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n                    }\n                    return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n                },\n                setAlpha: function setAlpha(value) {\n                    this._a = boundAlpha(value);\n                    this._roundA = mathRound(100 * this._a) / 100;\n                    return this;\n                },\n                toHsv: function toHsv() {\n                    var hsv = rgbToHsv(this._r, this._g, this._b);\n                    return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n                },\n                toHsvString: function toHsvString() {\n                    var hsv = rgbToHsv(this._r, this._g, this._b);\n                    var h = mathRound(hsv.h * 360),\n                        s = mathRound(hsv.s * 100),\n                        v = mathRound(hsv.v * 100);\n                    return this._a == 1 ? \"hsv(\" + h + \", \" + s + \"%, \" + v + \"%)\" : \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \" + this._roundA + \")\";\n                },\n                toHsl: function toHsl() {\n                    var hsl = rgbToHsl(this._r, this._g, this._b);\n                    return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n                },\n                toHslString: function toHslString() {\n                    var hsl = rgbToHsl(this._r, this._g, this._b);\n                    var h = mathRound(hsl.h * 360),\n                        s = mathRound(hsl.s * 100),\n                        l = mathRound(hsl.l * 100);\n                    return this._a == 1 ? \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\" : \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \" + this._roundA + \")\";\n                },\n                toHex: function toHex(allow3Char) {\n                    return rgbToHex(this._r, this._g, this._b, allow3Char);\n                },\n                toHexString: function toHexString(allow3Char) {\n                    return '#' + this.toHex(allow3Char);\n                },\n                toHex8: function toHex8(allow4Char) {\n                    return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n                },\n                toHex8String: function toHex8String(allow4Char) {\n                    return '#' + this.toHex8(allow4Char);\n                },\n                toRgb: function toRgb() {\n                    return { r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a };\n                },\n                toRgbString: function toRgbString() {\n                    return this._a == 1 ? \"rgb(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \")\" : \"rgba(\" + mathRound(this._r) + \", \" + mathRound(this._g) + \", \" + mathRound(this._b) + \", \" + this._roundA + \")\";\n                },\n                toPercentageRgb: function toPercentageRgb() {\n                    return {\n                        r: mathRound(bound01(this._r, 255) * 100) + \"%\",\n                        g: mathRound(bound01(this._g, 255) * 100) + \"%\",\n                        b: mathRound(bound01(this._b, 255) * 100) + \"%\",\n                        a: this._a\n                    };\n                },\n                toPercentageRgbString: function toPercentageRgbString() {\n                    return this._a == 1 ? \"rgb(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%)\" : \"rgba(\" + mathRound(bound01(this._r, 255) * 100) + \"%, \" + mathRound(bound01(this._g, 255) * 100) + \"%, \" + mathRound(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n                },\n                toName: function toName() {\n                    if (this._a === 0) {\n                        return \"transparent\";\n                    }\n\n                    if (this._a < 1) {\n                        return false;\n                    }\n\n                    return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n                },\n                toFilter: function toFilter(secondColor) {\n                    var hex8String = '#' + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n                    var secondHex8String = hex8String;\n                    var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n                    if (secondColor) {\n                        var s = tinycolor(secondColor);\n                        secondHex8String = '#' + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n                    }\n\n                    return \"progid:DXImageTransform.Microsoft.gradient(\" + gradientType + \"startColorstr=\" + hex8String + \",endColorstr=\" + secondHex8String + \")\";\n                },\n                toString: function toString(format) {\n                    var formatSet = !!format;\n                    format = format || this._format;\n\n                    var formattedString = false;\n                    var hasAlpha = this._a < 1 && this._a >= 0;\n                    var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n                    if (needsAlphaFormat) {\n                        // Special case for \"transparent\", all other non-alpha formats\n                        // will return rgba when there is transparency.\n                        if (format === \"name\" && this._a === 0) {\n                            return this.toName();\n                        }\n                        return this.toRgbString();\n                    }\n                    if (format === \"rgb\") {\n                        formattedString = this.toRgbString();\n                    }\n                    if (format === \"prgb\") {\n                        formattedString = this.toPercentageRgbString();\n                    }\n                    if (format === \"hex\" || format === \"hex6\") {\n                        formattedString = this.toHexString();\n                    }\n                    if (format === \"hex3\") {\n                        formattedString = this.toHexString(true);\n                    }\n                    if (format === \"hex4\") {\n                        formattedString = this.toHex8String(true);\n                    }\n                    if (format === \"hex8\") {\n                        formattedString = this.toHex8String();\n                    }\n                    if (format === \"name\") {\n                        formattedString = this.toName();\n                    }\n                    if (format === \"hsl\") {\n                        formattedString = this.toHslString();\n                    }\n                    if (format === \"hsv\") {\n                        formattedString = this.toHsvString();\n                    }\n\n                    return formattedString || this.toHexString();\n                },\n                clone: function clone() {\n                    return tinycolor(this.toString());\n                },\n\n                _applyModification: function _applyModification(fn, args) {\n                    var color = fn.apply(null, [this].concat([].slice.call(args)));\n                    this._r = color._r;\n                    this._g = color._g;\n                    this._b = color._b;\n                    this.setAlpha(color._a);\n                    return this;\n                },\n                lighten: function lighten() {\n                    return this._applyModification(_lighten, arguments);\n                },\n                brighten: function brighten() {\n                    return this._applyModification(_brighten, arguments);\n                },\n                darken: function darken() {\n                    return this._applyModification(_darken, arguments);\n                },\n                desaturate: function desaturate() {\n                    return this._applyModification(_desaturate, arguments);\n                },\n                saturate: function saturate() {\n                    return this._applyModification(_saturate, arguments);\n                },\n                greyscale: function greyscale() {\n                    return this._applyModification(_greyscale, arguments);\n                },\n                spin: function spin() {\n                    return this._applyModification(_spin, arguments);\n                },\n\n                _applyCombination: function _applyCombination(fn, args) {\n                    return fn.apply(null, [this].concat([].slice.call(args)));\n                },\n                analogous: function analogous() {\n                    return this._applyCombination(_analogous, arguments);\n                },\n                complement: function complement() {\n                    return this._applyCombination(_complement, arguments);\n                },\n                monochromatic: function monochromatic() {\n                    return this._applyCombination(_monochromatic, arguments);\n                },\n                splitcomplement: function splitcomplement() {\n                    return this._applyCombination(_splitcomplement, arguments);\n                },\n                triad: function triad() {\n                    return this._applyCombination(_triad, arguments);\n                },\n                tetrad: function tetrad() {\n                    return this._applyCombination(_tetrad, arguments);\n                }\n            };\n\n            // If input is an object, force 1 into \"1.0\" to handle ratios properly\n            // String input requires \"1.0\" as input, so 1 will be treated as 1\n            tinycolor.fromRatio = function (color, opts) {\n                if ((typeof color === \"undefined\" ? \"undefined\" : _typeof(color)) == \"object\") {\n                    var newColor = {};\n                    for (var i in color) {\n                        if (color.hasOwnProperty(i)) {\n                            if (i === \"a\") {\n                                newColor[i] = color[i];\n                            } else {\n                                newColor[i] = convertToPercentage(color[i]);\n                            }\n                        }\n                    }\n                    color = newColor;\n                }\n\n                return tinycolor(color, opts);\n            };\n\n            // Given a string or object, convert that input to RGB\n            // Possible string inputs:\n            //\n            //     \"red\"\n            //     \"#f00\" or \"f00\"\n            //     \"#ff0000\" or \"ff0000\"\n            //     \"#ff000000\" or \"ff000000\"\n            //     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n            //     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n            //     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n            //     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n            //     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n            //     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n            //     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n            //\n            function inputToRGB(color) {\n\n                var rgb = { r: 0, g: 0, b: 0 };\n                var a = 1;\n                var s = null;\n                var v = null;\n                var l = null;\n                var ok = false;\n                var format = false;\n\n                if (typeof color == \"string\") {\n                    color = stringInputToObject(color);\n                }\n\n                if ((typeof color === \"undefined\" ? \"undefined\" : _typeof(color)) == \"object\") {\n                    if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n                        rgb = rgbToRgb(color.r, color.g, color.b);\n                        ok = true;\n                        format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n                    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n                        s = convertToPercentage(color.s);\n                        v = convertToPercentage(color.v);\n                        rgb = hsvToRgb(color.h, s, v);\n                        ok = true;\n                        format = \"hsv\";\n                    } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n                        s = convertToPercentage(color.s);\n                        l = convertToPercentage(color.l);\n                        rgb = hslToRgb(color.h, s, l);\n                        ok = true;\n                        format = \"hsl\";\n                    }\n\n                    if (color.hasOwnProperty(\"a\")) {\n                        a = color.a;\n                    }\n                }\n\n                a = boundAlpha(a);\n\n                return {\n                    ok: ok,\n                    format: color.format || format,\n                    r: mathMin(255, mathMax(rgb.r, 0)),\n                    g: mathMin(255, mathMax(rgb.g, 0)),\n                    b: mathMin(255, mathMax(rgb.b, 0)),\n                    a: a\n                };\n            }\n\n            // Conversion Functions\n            // --------------------\n\n            // `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n            // <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n            // `rgbToRgb`\n            // Handle bounds / percentage checking to conform to CSS color spec\n            // <http://www.w3.org/TR/css3-color/>\n            // *Assumes:* r, g, b in [0, 255] or [0, 1]\n            // *Returns:* { r, g, b } in [0, 255]\n            function rgbToRgb(r, g, b) {\n                return {\n                    r: bound01(r, 255) * 255,\n                    g: bound01(g, 255) * 255,\n                    b: bound01(b, 255) * 255\n                };\n            }\n\n            // `rgbToHsl`\n            // Converts an RGB color value to HSL.\n            // *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n            // *Returns:* { h, s, l } in [0,1]\n            function rgbToHsl(r, g, b) {\n\n                r = bound01(r, 255);\n                g = bound01(g, 255);\n                b = bound01(b, 255);\n\n                var max = mathMax(r, g, b),\n                    min = mathMin(r, g, b);\n                var h,\n                    s,\n                    l = (max + min) / 2;\n\n                if (max == min) {\n                    h = s = 0; // achromatic\n                } else {\n                    var d = max - min;\n                    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n                    switch (max) {\n                        case r:\n                            h = (g - b) / d + (g < b ? 6 : 0);\n                            break;\n                        case g:\n                            h = (b - r) / d + 2;\n                            break;\n                        case b:\n                            h = (r - g) / d + 4;\n                            break;\n                    }\n\n                    h /= 6;\n                }\n\n                return { h: h, s: s, l: l };\n            }\n\n            // `hslToRgb`\n            // Converts an HSL color value to RGB.\n            // *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n            // *Returns:* { r, g, b } in the set [0, 255]\n            function hslToRgb(h, s, l) {\n                var r, g, b;\n\n                h = bound01(h, 360);\n                s = bound01(s, 100);\n                l = bound01(l, 100);\n\n                function hue2rgb(p, q, t) {\n                    if (t < 0) t += 1;\n                    if (t > 1) t -= 1;\n                    if (t < 1 / 6) return p + (q - p) * 6 * t;\n                    if (t < 1 / 2) return q;\n                    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n                    return p;\n                }\n\n                if (s === 0) {\n                    r = g = b = l; // achromatic\n                } else {\n                    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n                    var p = 2 * l - q;\n                    r = hue2rgb(p, q, h + 1 / 3);\n                    g = hue2rgb(p, q, h);\n                    b = hue2rgb(p, q, h - 1 / 3);\n                }\n\n                return { r: r * 255, g: g * 255, b: b * 255 };\n            }\n\n            // `rgbToHsv`\n            // Converts an RGB color value to HSV\n            // *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n            // *Returns:* { h, s, v } in [0,1]\n            function rgbToHsv(r, g, b) {\n\n                r = bound01(r, 255);\n                g = bound01(g, 255);\n                b = bound01(b, 255);\n\n                var max = mathMax(r, g, b),\n                    min = mathMin(r, g, b);\n                var h,\n                    s,\n                    v = max;\n\n                var d = max - min;\n                s = max === 0 ? 0 : d / max;\n\n                if (max == min) {\n                    h = 0; // achromatic\n                } else {\n                    switch (max) {\n                        case r:\n                            h = (g - b) / d + (g < b ? 6 : 0);\n                            break;\n                        case g:\n                            h = (b - r) / d + 2;\n                            break;\n                        case b:\n                            h = (r - g) / d + 4;\n                            break;\n                    }\n                    h /= 6;\n                }\n                return { h: h, s: s, v: v };\n            }\n\n            // `hsvToRgb`\n            // Converts an HSV color value to RGB.\n            // *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n            // *Returns:* { r, g, b } in the set [0, 255]\n            function hsvToRgb(h, s, v) {\n\n                h = bound01(h, 360) * 6;\n                s = bound01(s, 100);\n                v = bound01(v, 100);\n\n                var i = Math.floor(h),\n                    f = h - i,\n                    p = v * (1 - s),\n                    q = v * (1 - f * s),\n                    t = v * (1 - (1 - f) * s),\n                    mod = i % 6,\n                    r = [v, q, p, p, t, v][mod],\n                    g = [t, v, v, q, p, p][mod],\n                    b = [p, p, t, v, v, q][mod];\n\n                return { r: r * 255, g: g * 255, b: b * 255 };\n            }\n\n            // `rgbToHex`\n            // Converts an RGB color to hex\n            // Assumes r, g, and b are contained in the set [0, 255]\n            // Returns a 3 or 6 character hex\n            function rgbToHex(r, g, b, allow3Char) {\n\n                var hex = [pad2(mathRound(r).toString(16)), pad2(mathRound(g).toString(16)), pad2(mathRound(b).toString(16))];\n\n                // Return a 3 character hex if possible\n                if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n                    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n                }\n\n                return hex.join(\"\");\n            }\n\n            // `rgbaToHex`\n            // Converts an RGBA color plus alpha transparency to hex\n            // Assumes r, g, b are contained in the set [0, 255] and\n            // a in [0, 1]. Returns a 4 or 8 character rgba hex\n            function rgbaToHex(r, g, b, a, allow4Char) {\n\n                var hex = [pad2(mathRound(r).toString(16)), pad2(mathRound(g).toString(16)), pad2(mathRound(b).toString(16)), pad2(convertDecimalToHex(a))];\n\n                // Return a 4 character hex if possible\n                if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n                    return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n                }\n\n                return hex.join(\"\");\n            }\n\n            // `rgbaToArgbHex`\n            // Converts an RGBA color to an ARGB Hex8 string\n            // Rarely used, but required for \"toFilter()\"\n            function rgbaToArgbHex(r, g, b, a) {\n\n                var hex = [pad2(convertDecimalToHex(a)), pad2(mathRound(r).toString(16)), pad2(mathRound(g).toString(16)), pad2(mathRound(b).toString(16))];\n\n                return hex.join(\"\");\n            }\n\n            // `equals`\n            // Can be called with any tinycolor input\n            tinycolor.equals = function (color1, color2) {\n                if (!color1 || !color2) {\n                    return false;\n                }\n                return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n            };\n\n            tinycolor.random = function () {\n                return tinycolor.fromRatio({\n                    r: mathRandom(),\n                    g: mathRandom(),\n                    b: mathRandom()\n                });\n            };\n\n            // Modification Functions\n            // ----------------------\n            // Thanks to less.js for some of the basics here\n            // <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\n            function _desaturate(color, amount) {\n                amount = amount === 0 ? 0 : amount || 10;\n                var hsl = tinycolor(color).toHsl();\n                hsl.s -= amount / 100;\n                hsl.s = clamp01(hsl.s);\n                return tinycolor(hsl);\n            }\n\n            function _saturate(color, amount) {\n                amount = amount === 0 ? 0 : amount || 10;\n                var hsl = tinycolor(color).toHsl();\n                hsl.s += amount / 100;\n                hsl.s = clamp01(hsl.s);\n                return tinycolor(hsl);\n            }\n\n            function _greyscale(color) {\n                return tinycolor(color).desaturate(100);\n            }\n\n            function _lighten(color, amount) {\n                amount = amount === 0 ? 0 : amount || 10;\n                var hsl = tinycolor(color).toHsl();\n                hsl.l += amount / 100;\n                hsl.l = clamp01(hsl.l);\n                return tinycolor(hsl);\n            }\n\n            function _brighten(color, amount) {\n                amount = amount === 0 ? 0 : amount || 10;\n                var rgb = tinycolor(color).toRgb();\n                rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * -(amount / 100))));\n                rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * -(amount / 100))));\n                rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * -(amount / 100))));\n                return tinycolor(rgb);\n            }\n\n            function _darken(color, amount) {\n                amount = amount === 0 ? 0 : amount || 10;\n                var hsl = tinycolor(color).toHsl();\n                hsl.l -= amount / 100;\n                hsl.l = clamp01(hsl.l);\n                return tinycolor(hsl);\n            }\n\n            // Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n            // Values outside of this range will be wrapped into this range.\n            function _spin(color, amount) {\n                var hsl = tinycolor(color).toHsl();\n                var hue = (hsl.h + amount) % 360;\n                hsl.h = hue < 0 ? 360 + hue : hue;\n                return tinycolor(hsl);\n            }\n\n            // Combination Functions\n            // ---------------------\n            // Thanks to jQuery xColor for some of the ideas behind these\n            // <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\n            function _complement(color) {\n                var hsl = tinycolor(color).toHsl();\n                hsl.h = (hsl.h + 180) % 360;\n                return tinycolor(hsl);\n            }\n\n            function _triad(color) {\n                var hsl = tinycolor(color).toHsl();\n                var h = hsl.h;\n                return [tinycolor(color), tinycolor({ h: (h + 120) % 360, s: hsl.s, l: hsl.l }), tinycolor({ h: (h + 240) % 360, s: hsl.s, l: hsl.l })];\n            }\n\n            function _tetrad(color) {\n                var hsl = tinycolor(color).toHsl();\n                var h = hsl.h;\n                return [tinycolor(color), tinycolor({ h: (h + 90) % 360, s: hsl.s, l: hsl.l }), tinycolor({ h: (h + 180) % 360, s: hsl.s, l: hsl.l }), tinycolor({ h: (h + 270) % 360, s: hsl.s, l: hsl.l })];\n            }\n\n            function _splitcomplement(color) {\n                var hsl = tinycolor(color).toHsl();\n                var h = hsl.h;\n                return [tinycolor(color), tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l }), tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l })];\n            }\n\n            function _analogous(color, results, slices) {\n                results = results || 6;\n                slices = slices || 30;\n\n                var hsl = tinycolor(color).toHsl();\n                var part = 360 / slices;\n                var ret = [tinycolor(color)];\n\n                for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results;) {\n                    hsl.h = (hsl.h + part) % 360;\n                    ret.push(tinycolor(hsl));\n                }\n                return ret;\n            }\n\n            function _monochromatic(color, results) {\n                results = results || 6;\n                var hsv = tinycolor(color).toHsv();\n                var h = hsv.h,\n                    s = hsv.s,\n                    v = hsv.v;\n                var ret = [];\n                var modification = 1 / results;\n\n                while (results--) {\n                    ret.push(tinycolor({ h: h, s: s, v: v }));\n                    v = (v + modification) % 1;\n                }\n\n                return ret;\n            }\n\n            // Utility Functions\n            // ---------------------\n\n            tinycolor.mix = function (color1, color2, amount) {\n                amount = amount === 0 ? 0 : amount || 50;\n\n                var rgb1 = tinycolor(color1).toRgb();\n                var rgb2 = tinycolor(color2).toRgb();\n\n                var p = amount / 100;\n\n                var rgba = {\n                    r: (rgb2.r - rgb1.r) * p + rgb1.r,\n                    g: (rgb2.g - rgb1.g) * p + rgb1.g,\n                    b: (rgb2.b - rgb1.b) * p + rgb1.b,\n                    a: (rgb2.a - rgb1.a) * p + rgb1.a\n                };\n\n                return tinycolor(rgba);\n            };\n\n            // Readability Functions\n            // ---------------------\n            // <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n            // `contrast`\n            // Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\n            tinycolor.readability = function (color1, color2) {\n                var c1 = tinycolor(color1);\n                var c2 = tinycolor(color2);\n                return (Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) / (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05);\n            };\n\n            // `isReadable`\n            // Ensure that foreground and background color combinations meet WCAG2 guidelines.\n            // The third argument is an optional Object.\n            //      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n            //      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n            // If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n            // *Example*\n            //    tinycolor.isReadable(\"#000\", \"#111\") => false\n            //    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\n            tinycolor.isReadable = function (color1, color2, wcag2) {\n                var readability = tinycolor.readability(color1, color2);\n                var wcag2Parms, out;\n\n                out = false;\n\n                wcag2Parms = validateWCAG2Parms(wcag2);\n                switch (wcag2Parms.level + wcag2Parms.size) {\n                    case \"AAsmall\":\n                    case \"AAAlarge\":\n                        out = readability >= 4.5;\n                        break;\n                    case \"AAlarge\":\n                        out = readability >= 3;\n                        break;\n                    case \"AAAsmall\":\n                        out = readability >= 7;\n                        break;\n                }\n                return out;\n            };\n\n            // `mostReadable`\n            // Given a base color and a list of possible foreground or background\n            // colors for that base, returns the most readable color.\n            // Optionally returns Black or White if the most readable color is unreadable.\n            // *Example*\n            //    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n            //    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n            //    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n            //    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\n            tinycolor.mostReadable = function (baseColor, colorList, args) {\n                var bestColor = null;\n                var bestScore = 0;\n                var readability;\n                var includeFallbackColors, level, size;\n                args = args || {};\n                includeFallbackColors = args.includeFallbackColors;\n                level = args.level;\n                size = args.size;\n\n                for (var i = 0; i < colorList.length; i++) {\n                    readability = tinycolor.readability(baseColor, colorList[i]);\n                    if (readability > bestScore) {\n                        bestScore = readability;\n                        bestColor = tinycolor(colorList[i]);\n                    }\n                }\n\n                if (tinycolor.isReadable(baseColor, bestColor, { \"level\": level, \"size\": size }) || !includeFallbackColors) {\n                    return bestColor;\n                } else {\n                    args.includeFallbackColors = false;\n                    return tinycolor.mostReadable(baseColor, [\"#fff\", \"#000\"], args);\n                }\n            };\n\n            // Big List of Colors\n            // ------------------\n            // <http://www.w3.org/TR/css3-color/#svg-color>\n            var names = tinycolor.names = {\n                aliceblue: \"f0f8ff\",\n                antiquewhite: \"faebd7\",\n                aqua: \"0ff\",\n                aquamarine: \"7fffd4\",\n                azure: \"f0ffff\",\n                beige: \"f5f5dc\",\n                bisque: \"ffe4c4\",\n                black: \"000\",\n                blanchedalmond: \"ffebcd\",\n                blue: \"00f\",\n                blueviolet: \"8a2be2\",\n                brown: \"a52a2a\",\n                burlywood: \"deb887\",\n                burntsienna: \"ea7e5d\",\n                cadetblue: \"5f9ea0\",\n                chartreuse: \"7fff00\",\n                chocolate: \"d2691e\",\n                coral: \"ff7f50\",\n                cornflowerblue: \"6495ed\",\n                cornsilk: \"fff8dc\",\n                crimson: \"dc143c\",\n                cyan: \"0ff\",\n                darkblue: \"00008b\",\n                darkcyan: \"008b8b\",\n                darkgoldenrod: \"b8860b\",\n                darkgray: \"a9a9a9\",\n                darkgreen: \"006400\",\n                darkgrey: \"a9a9a9\",\n                darkkhaki: \"bdb76b\",\n                darkmagenta: \"8b008b\",\n                darkolivegreen: \"556b2f\",\n                darkorange: \"ff8c00\",\n                darkorchid: \"9932cc\",\n                darkred: \"8b0000\",\n                darksalmon: \"e9967a\",\n                darkseagreen: \"8fbc8f\",\n                darkslateblue: \"483d8b\",\n                darkslategray: \"2f4f4f\",\n                darkslategrey: \"2f4f4f\",\n                darkturquoise: \"00ced1\",\n                darkviolet: \"9400d3\",\n                deeppink: \"ff1493\",\n                deepskyblue: \"00bfff\",\n                dimgray: \"696969\",\n                dimgrey: \"696969\",\n                dodgerblue: \"1e90ff\",\n                firebrick: \"b22222\",\n                floralwhite: \"fffaf0\",\n                forestgreen: \"228b22\",\n                fuchsia: \"f0f\",\n                gainsboro: \"dcdcdc\",\n                ghostwhite: \"f8f8ff\",\n                gold: \"ffd700\",\n                goldenrod: \"daa520\",\n                gray: \"808080\",\n                green: \"008000\",\n                greenyellow: \"adff2f\",\n                grey: \"808080\",\n                honeydew: \"f0fff0\",\n                hotpink: \"ff69b4\",\n                indianred: \"cd5c5c\",\n                indigo: \"4b0082\",\n                ivory: \"fffff0\",\n                khaki: \"f0e68c\",\n                lavender: \"e6e6fa\",\n                lavenderblush: \"fff0f5\",\n                lawngreen: \"7cfc00\",\n                lemonchiffon: \"fffacd\",\n                lightblue: \"add8e6\",\n                lightcoral: \"f08080\",\n                lightcyan: \"e0ffff\",\n                lightgoldenrodyellow: \"fafad2\",\n                lightgray: \"d3d3d3\",\n                lightgreen: \"90ee90\",\n                lightgrey: \"d3d3d3\",\n                lightpink: \"ffb6c1\",\n                lightsalmon: \"ffa07a\",\n                lightseagreen: \"20b2aa\",\n                lightskyblue: \"87cefa\",\n                lightslategray: \"789\",\n                lightslategrey: \"789\",\n                lightsteelblue: \"b0c4de\",\n                lightyellow: \"ffffe0\",\n                lime: \"0f0\",\n                limegreen: \"32cd32\",\n                linen: \"faf0e6\",\n                magenta: \"f0f\",\n                maroon: \"800000\",\n                mediumaquamarine: \"66cdaa\",\n                mediumblue: \"0000cd\",\n                mediumorchid: \"ba55d3\",\n                mediumpurple: \"9370db\",\n                mediumseagreen: \"3cb371\",\n                mediumslateblue: \"7b68ee\",\n                mediumspringgreen: \"00fa9a\",\n                mediumturquoise: \"48d1cc\",\n                mediumvioletred: \"c71585\",\n                midnightblue: \"191970\",\n                mintcream: \"f5fffa\",\n                mistyrose: \"ffe4e1\",\n                moccasin: \"ffe4b5\",\n                navajowhite: \"ffdead\",\n                navy: \"000080\",\n                oldlace: \"fdf5e6\",\n                olive: \"808000\",\n                olivedrab: \"6b8e23\",\n                orange: \"ffa500\",\n                orangered: \"ff4500\",\n                orchid: \"da70d6\",\n                palegoldenrod: \"eee8aa\",\n                palegreen: \"98fb98\",\n                paleturquoise: \"afeeee\",\n                palevioletred: \"db7093\",\n                papayawhip: \"ffefd5\",\n                peachpuff: \"ffdab9\",\n                peru: \"cd853f\",\n                pink: \"ffc0cb\",\n                plum: \"dda0dd\",\n                powderblue: \"b0e0e6\",\n                purple: \"800080\",\n                rebeccapurple: \"663399\",\n                red: \"f00\",\n                rosybrown: \"bc8f8f\",\n                royalblue: \"4169e1\",\n                saddlebrown: \"8b4513\",\n                salmon: \"fa8072\",\n                sandybrown: \"f4a460\",\n                seagreen: \"2e8b57\",\n                seashell: \"fff5ee\",\n                sienna: \"a0522d\",\n                silver: \"c0c0c0\",\n                skyblue: \"87ceeb\",\n                slateblue: \"6a5acd\",\n                slategray: \"708090\",\n                slategrey: \"708090\",\n                snow: \"fffafa\",\n                springgreen: \"00ff7f\",\n                steelblue: \"4682b4\",\n                tan: \"d2b48c\",\n                teal: \"008080\",\n                thistle: \"d8bfd8\",\n                tomato: \"ff6347\",\n                turquoise: \"40e0d0\",\n                violet: \"ee82ee\",\n                wheat: \"f5deb3\",\n                white: \"fff\",\n                whitesmoke: \"f5f5f5\",\n                yellow: \"ff0\",\n                yellowgreen: \"9acd32\"\n            };\n\n            // Make it easy to access colors via `hexNames[hex]`\n            var hexNames = tinycolor.hexNames = flip(names);\n\n            // Utilities\n            // ---------\n\n            // `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\n            function flip(o) {\n                var flipped = {};\n                for (var i in o) {\n                    if (o.hasOwnProperty(i)) {\n                        flipped[o[i]] = i;\n                    }\n                }\n                return flipped;\n            }\n\n            // Return a valid alpha value [0,1] with all invalid values being set to 1\n            function boundAlpha(a) {\n                a = parseFloat(a);\n\n                if (isNaN(a) || a < 0 || a > 1) {\n                    a = 1;\n                }\n\n                return a;\n            }\n\n            // Take input from [0, n] and return it as [0, 1]\n            function bound01(n, max) {\n                if (isOnePointZero(n)) {\n                    n = \"100%\";\n                }\n\n                var processPercent = isPercentage(n);\n                n = mathMin(max, mathMax(0, parseFloat(n)));\n\n                // Automatically convert percentage into number\n                if (processPercent) {\n                    n = parseInt(n * max, 10) / 100;\n                }\n\n                // Handle floating point rounding errors\n                if (Math.abs(n - max) < 0.000001) {\n                    return 1;\n                }\n\n                // Convert into [0, 1] range if it isn't already\n                return n % max / parseFloat(max);\n            }\n\n            // Force a number between 0 and 1\n            function clamp01(val) {\n                return mathMin(1, mathMax(0, val));\n            }\n\n            // Parse a base-16 hex value into a base-10 integer\n            function parseIntFromHex(val) {\n                return parseInt(val, 16);\n            }\n\n            // Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n            // <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\n            function isOnePointZero(n) {\n                return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n            }\n\n            // Check to see if string passed in is a percentage\n            function isPercentage(n) {\n                return typeof n === \"string\" && n.indexOf('%') != -1;\n            }\n\n            // Force a hex value to have 2 characters\n            function pad2(c) {\n                return c.length == 1 ? '0' + c : '' + c;\n            }\n\n            // Replace a decimal with it's percentage value\n            function convertToPercentage(n) {\n                if (n <= 1) {\n                    n = n * 100 + \"%\";\n                }\n\n                return n;\n            }\n\n            // Converts a decimal to a hex value\n            function convertDecimalToHex(d) {\n                return Math.round(parseFloat(d) * 255).toString(16);\n            }\n            // Converts a hex value to a decimal\n            function convertHexToDecimal(h) {\n                return parseIntFromHex(h) / 255;\n            }\n\n            var matchers = function () {\n\n                // <http://www.w3.org/TR/css3-values/#integers>\n                var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n                // <http://www.w3.org/TR/css3-values/#number-value>\n                var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n                // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n                var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n                // Actual matching.\n                // Parentheses and commas are optional, but not required.\n                // Whitespace can take the place of commas or opening paren\n                var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n                var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n                return {\n                    CSS_UNIT: new RegExp(CSS_UNIT),\n                    rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n                    rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n                    hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n                    hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n                    hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n                    hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n                    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n                    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n                    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n                    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n                };\n            }();\n\n            // `isValidCSSUnit`\n            // Take in a single string / number and check to see if it looks like a CSS unit\n            // (see `matchers` above for definition).\n            function isValidCSSUnit(color) {\n                return !!matchers.CSS_UNIT.exec(color);\n            }\n\n            // `stringInputToObject`\n            // Permissive string parsing.  Take in a number of formats, and output an object\n            // based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\n            function stringInputToObject(color) {\n\n                color = color.replace(trimLeft, '').replace(trimRight, '').toLowerCase();\n                var named = false;\n                if (names[color]) {\n                    color = names[color];\n                    named = true;\n                } else if (color == 'transparent') {\n                    return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n                }\n\n                // Try to match string input using regular expressions.\n                // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n                // Just return an object and let the conversion functions handle that.\n                // This way the result will be the same whether the tinycolor is initialized with string or object.\n                var match;\n                if (match = matchers.rgb.exec(color)) {\n                    return { r: match[1], g: match[2], b: match[3] };\n                }\n                if (match = matchers.rgba.exec(color)) {\n                    return { r: match[1], g: match[2], b: match[3], a: match[4] };\n                }\n                if (match = matchers.hsl.exec(color)) {\n                    return { h: match[1], s: match[2], l: match[3] };\n                }\n                if (match = matchers.hsla.exec(color)) {\n                    return { h: match[1], s: match[2], l: match[3], a: match[4] };\n                }\n                if (match = matchers.hsv.exec(color)) {\n                    return { h: match[1], s: match[2], v: match[3] };\n                }\n                if (match = matchers.hsva.exec(color)) {\n                    return { h: match[1], s: match[2], v: match[3], a: match[4] };\n                }\n                if (match = matchers.hex8.exec(color)) {\n                    return {\n                        r: parseIntFromHex(match[1]),\n                        g: parseIntFromHex(match[2]),\n                        b: parseIntFromHex(match[3]),\n                        a: convertHexToDecimal(match[4]),\n                        format: named ? \"name\" : \"hex8\"\n                    };\n                }\n                if (match = matchers.hex6.exec(color)) {\n                    return {\n                        r: parseIntFromHex(match[1]),\n                        g: parseIntFromHex(match[2]),\n                        b: parseIntFromHex(match[3]),\n                        format: named ? \"name\" : \"hex\"\n                    };\n                }\n                if (match = matchers.hex4.exec(color)) {\n                    return {\n                        r: parseIntFromHex(match[1] + '' + match[1]),\n                        g: parseIntFromHex(match[2] + '' + match[2]),\n                        b: parseIntFromHex(match[3] + '' + match[3]),\n                        a: convertHexToDecimal(match[4] + '' + match[4]),\n                        format: named ? \"name\" : \"hex8\"\n                    };\n                }\n                if (match = matchers.hex3.exec(color)) {\n                    return {\n                        r: parseIntFromHex(match[1] + '' + match[1]),\n                        g: parseIntFromHex(match[2] + '' + match[2]),\n                        b: parseIntFromHex(match[3] + '' + match[3]),\n                        format: named ? \"name\" : \"hex\"\n                    };\n                }\n\n                return false;\n            }\n\n            function validateWCAG2Parms(parms) {\n                // return valid WCAG2 parms for isReadable.\n                // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n                var level, size;\n                parms = parms || { \"level\": \"AA\", \"size\": \"small\" };\n                level = (parms.level || \"AA\").toUpperCase();\n                size = (parms.size || \"small\").toLowerCase();\n                if (level !== \"AA\" && level !== \"AAA\") {\n                    level = \"AA\";\n                }\n                if (size !== \"small\" && size !== \"large\") {\n                    size = \"small\";\n                }\n                return { \"level\": level, \"size\": size };\n            }\n\n            exports.default = tinycolor;\n        }, {}], 16: [function (require, module, exports) {\n            /* global module, wx, window: false, document: false */\n            'use strict';\n\n            Object.defineProperty(exports, \"__esModule\", {\n                value: true\n            });\n            exports.WxCanvasRenderingContext2D = undefined;\n\n            var _createClass = function () {\n                function defineProperties(target, props) {\n                    for (var i = 0; i < props.length; i++) {\n                        var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n                    }\n                }return function (Constructor, protoProps, staticProps) {\n                    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n                };\n            }();\n\n            var _helper = require('./helper');\n\n            function _toConsumableArray(arr) {\n                if (Array.isArray(arr)) {\n                    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n                        arr2[i] = arr[i];\n                    }return arr2;\n                } else {\n                    return Array.from(arr);\n                }\n            }\n\n            function _classCallCheck(instance, Constructor) {\n                if (!(instance instanceof Constructor)) {\n                    throw new TypeError(\"Cannot call a class as a function\");\n                }\n            }\n\n            // Chart default config\n            var WX_CANVAS_DEFAULT_PROPERTY = {\n                width: 300,\n                height: 200\n            };\n            var WX_CANVAS_CTX_DEFAULT_PROPERTY = {\n                fillStyle: '#000000',\n                lineCap: 'butt',\n                lineJoin: 'miter',\n                miterLimit: 10,\n                lineWidth: 1,\n                strokeStyle: '#000000',\n                shadowBlur: 0,\n                shadowOffsetX: 0,\n                shadowOffsetY: 0,\n                shadowColor: '#000000',\n                font: '10px',\n                textBaseline: 'alphabetic', // only support top, middle and alphabetic\n                textAlign: 'start' // only support start, end and center\n            };\n\n            // Base text size\n            var WX_BASE_TEXT_SIZE = 9;\n\n            var pxReg = /([\\d.]+)px/;\n            /**\n             * Compatible canvas object\n             */\n\n            var WxCanvas = function () {\n                function WxCanvas(id, config, contextOptions) {\n                    _classCallCheck(this, WxCanvas);\n\n                    var me = this;\n\n                    me.isWeiXinAPP = (0, _helper.checkWX)();\n                    me._config = (0, _helper.extend)({}, WX_CANVAS_DEFAULT_PROPERTY, me.initConfig(config));\n\n                    // Acquire canvas context\n\n                    var _acquireContext = this.acquireContext(id, config),\n                        canvas = _acquireContext.canvas,\n                        context = _acquireContext.context;\n\n                    me._canvas = canvas;\n                    me._ctx = context;\n                    me.wxCanvasRenderingContext2D = new WxCanvasRenderingContext2D(canvas, context, contextOptions);\n\n                    return me;\n                }\n\n                /**\n                 * Initialization WxCanvas config\n                 * @param {Object} config\n                 * @returns {boolean}\n                 */\n\n                _createClass(WxCanvas, [{\n                    key: 'initConfig',\n                    value: function initConfig(config) {\n                        if (!config) {\n                            return;\n                        }\n\n                        if (typeof config.width != 'undefined') {\n                            config.width = (0, _helper.wxConverToPx)(config.width);\n                        }\n                        if (typeof config.height != 'undefined') {\n                            config.height = (0, _helper.wxConverToPx)(config.height);\n                        }\n                        return config;\n                    }\n\n                    /**\n                     * Create Canvas context\n                     * @param {String} id\n                     * @param {Object} config\n                     * @returns {*}\n                     */\n\n                }, {\n                    key: 'acquireContext',\n                    value: function acquireContext(id, config) {\n                        var me = this,\n                            canvas = void 0,\n                            context = void 0;\n                        if (_helper.is.String(id)) {\n                            canvas = me.isWeiXinAPP ? context = wx.createCanvasContext(id) : document.getElementById(id);\n                        } else if (me.isWeiXinAPP) {\n                            throw new Error('Should set an id');\n                        }\n\n                        if (typeof HTMLCanvasElement != 'undefined' && canvas instanceof HTMLCanvasElement) {\n                            context = canvas.getContext && canvas.getContext('2d');\n                        }\n\n                        if (!canvas || !context) {\n                            console.error(\"Failed to create WxCanvas: can't acquire context!\");\n                        }\n\n                        this.initCanvas(canvas);\n                        return { canvas: canvas, context: context };\n                    }\n\n                    /**\n                     * Initializes the HTMLCanvasElement style and render size without modifying the canvas display size\n                     */\n\n                }, {\n                    key: 'initCanvas',\n                    value: function initCanvas(canvas) {\n                        var config = this._config,\n                            renderHeight = void 0,\n                            renderWidth = void 0,\n                            display = void 0,\n                            height = void 0,\n                            width = void 0;\n                        if (this.isWeiXinAPP) {\n                            renderHeight = height = config.height;\n                            renderWidth = width = config.width;\n                            display = config.display;\n                        } else {\n                            var style = canvas.style;\n\n                            // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n                            // returns null or '' if no explicit value has been set to the canvas attribute.\n                            renderHeight = canvas.getAttribute('height');\n                            renderWidth = canvas.getAttribute('width');\n\n                            // Force canvas to display as block to avoid extra space caused by inline\n                            // elements, which would interfere with the responsive resize process.\n                            // https://github.com/chartjs/Chart.js/issues/2538\n                            style.display = style.display || 'block';\n\n                            if (renderWidth === null || renderWidth === '') {\n                                var displayWidth = (0, _helper.readUsedSize)(canvas, 'width');\n                                if (displayWidth !== undefined) {\n                                    canvas.width = displayWidth;\n                                    width = displayWidth;\n                                }\n                            }\n\n                            if (renderHeight === null || renderHeight === '') {\n                                if (canvas.style.height === '') {\n                                    // If no explicit render height and style height, let's apply the aspect ratio,\n                                    // which one can be specified by the user but also by charts as default option\n                                    // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n                                    canvas.height = height = canvas.width / (config.options.aspectRatio || 2);\n                                } else {\n                                    var displayHeight = (0, _helper.readUsedSize)(canvas, 'height');\n                                    if (displayWidth !== undefined) {\n                                        canvas.height = displayHeight;\n                                        height = displayHeight;\n                                    }\n                                }\n                            }\n                        }\n\n                        // Chart.js modifies some canvas values that we want to restore on destroy\n                        config._wxChart = {\n                            initial: {\n                                height: renderHeight,\n                                width: renderWidth,\n                                style: {\n                                    display: display,\n                                    height: height,\n                                    width: width\n                                }\n                            }\n                        };\n\n                        return canvas;\n                    }\n\n                    /**\n                     * Restores the canvas initial state, such as render/display sizes and style.\n                     */\n\n                }, {\n                    key: 'releaseContext',\n                    value: function releaseContext() {\n                        var canvas = this._canvas,\n                            config = this._config;\n                        if (!config._wxChart) {\n                            return;\n                        }\n\n                        var initial = config._wxChart.initial;\n                        if (this.isWeiXinAPP) {\n                            // Do nothing\n                        } else {\n                            ['height', 'width'].forEach(function (prop) {\n                                var value = initial[prop];\n                                if (value === undefined || value === null) {\n                                    canvas.removeAttribute(prop);\n                                } else {\n                                    canvas.setAttribute(prop, value);\n                                }\n                            });\n\n                            var _iteratorNormalCompletion = true;\n                            var _didIteratorError = false;\n                            var _iteratorError = undefined;\n\n                            try {\n                                for (var _iterator = initial.style[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                                    var key = _step.value;\n\n                                    canvas.style[key] = initial.style[key];\n                                }\n\n                                // The canvas render size might have been changed (and thus the state stack discarded),\n                                // we can't use save() and restore() to restore the initial state. So make sure that at\n                                // least the canvas context is reset to the default state by setting the canvas width.\n                                // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n                            } catch (err) {\n                                _didIteratorError = true;\n                                _iteratorError = err;\n                            } finally {\n                                try {\n                                    if (!_iteratorNormalCompletion && _iterator.return) {\n                                        _iterator.return();\n                                    }\n                                } finally {\n                                    if (_didIteratorError) {\n                                        throw _iteratorError;\n                                    }\n                                }\n                            }\n\n                            canvas.width = canvas.width;\n                        }\n\n                        delete config._wxChart;\n                    }\n                }, {\n                    key: 'getContext',\n                    value: function getContext(str) {\n                        if (str === '2d') {\n                            return this.wxCanvasRenderingContext2D;\n                        }\n                    }\n\n                    // Property\n\n                }, {\n                    key: 'height',\n                    get: function get() {\n                        if (this.isWeiXinAPP) {\n                            return this._config.height;\n                        } else {\n                            var renderHeight = (0, _helper.wxConverToPx)(this._canvas.getAttribute('height'));\n                            if (renderHeight === null || renderHeight === '') {\n                                return (0, _helper.readUsedSize)(canvas, 'height');\n                            }\n                            return renderHeight;\n                        }\n                    },\n                    set: function set(val) {\n                        if (this.isWeiXinAPP) {\n                            // Can not set WeiXin app height\n                        } else {\n                            this._canvas.height = val;\n                        }\n                    }\n                }, {\n                    key: 'width',\n                    get: function get() {\n                        if (this.isWeiXinAPP) {\n                            return this._config.width;\n                        } else {\n                            var renderWidth = (0, _helper.wxConverToPx)(this._canvas.getAttribute('width'));\n                            if (renderWidth === null || renderWidth === '') {\n                                return (0, _helper.readUsedSize)(canvas, 'width');\n                            }\n                            return renderWidth;\n                        }\n                    },\n                    set: function set(val) {\n                        if (this.isWeiXinAPP) {\n                            // Can not set WeiXin app height\n                        } else {\n                            this._canvas.width = val;\n                        }\n                    }\n                }]);\n\n                return WxCanvas;\n            }();\n\n            exports.default = WxCanvas;\n\n            var WxCanvasRenderingContext2D = exports.WxCanvasRenderingContext2D = function () {\n                function WxCanvasRenderingContext2D(canvas, context, options) {\n                    _classCallCheck(this, WxCanvasRenderingContext2D);\n\n                    var me = this;\n\n                    me.canvas = canvas;\n                    me._ctx = context;\n                    me.isWeiXinAPP = (0, _helper.checkWX)();\n\n                    // Canvas property cache stack\n                    me._ctxOptions = options;\n                    me._propertyCache = [(0, _helper.extend)({}, WX_CANVAS_CTX_DEFAULT_PROPERTY, options)];\n                    me.cp = me._propertyCache[0];\n\n                    me.createStyleProperty();\n                    me.createShadowsProperty();\n                    me.createTextProperty();\n                    me.createLineProperty();\n                    me.createRectProperty();\n                    me.createGradientProperty();\n                    me.createPathProperty();\n                    me.createTransformationProperty();\n                    me.createGlobalAlphaProperty();\n                    return me;\n                }\n\n                // Save function\n\n\n                _createClass(WxCanvasRenderingContext2D, [{\n                    key: 'save',\n                    value: function save() {\n                        var me = this;\n                        me._ctx.save();\n                        var nProperty = (0, _helper.extend)({}, WX_CANVAS_CTX_DEFAULT_PROPERTY, me._ctxOptions);\n                        me._propertyCache.push(nProperty);\n                        me.cp = nProperty;\n                        return me.cp;\n                    }\n\n                    // Restore function\n\n                }, {\n                    key: 'restore',\n                    value: function restore() {\n                        var me = this;\n                        me._ctx.restore();\n                        if (me.cp != null && me._propertyCache.length > 1) {\n                            me._propertyCache.pop();\n                            me.cp = me._propertyCache[me._propertyCache.length - 1];\n                        }\n                        return me.cp;\n                    }\n\n                    // Property\n\n                }, {\n                    key: '_wxSetPropertyCallable',\n                    value: function _wxSetPropertyCallable(value, propertyName) {\n                        var wxSetName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'set' + propertyName.replace(/(\\w)/, function (v) {\n                            return v.toUpperCase();\n                        });\n\n                        var me = this;\n\n                        if (_helper.is.Null(value) || _helper.is.Undefined(value)) {\n                            return value;\n                        }\n                        if (me.isWeiXinAPP) {\n                            me._ctx[wxSetName](value);\n                            me.cp[propertyName] = value;\n                        } else {\n                            me._ctx[propertyName] = value;\n                            me.cp[propertyName] = me._ctx[propertyName];\n                        }\n                        return value;\n                    }\n\n                    // Normally property weixin app not support\n\n                }, {\n                    key: '_wxSetProperty',\n                    value: function _wxSetProperty(value, propertyName) {\n                        var setWX = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n                        var me = this;\n\n                        if (_helper.is.Null(value) || _helper.is.Undefined(value)) {\n                            return value;\n                        }\n                        if (me.isWeiXinAPP) {\n                            me.cp[propertyName] = value;\n                            setWX ? me._ctx[propertyName] = value : null;\n                        } else {\n                            me._ctx[propertyName] = value;\n                            me.cp[propertyName] = me._ctx[propertyName];\n                        }\n                        return value;\n                    }\n                }, {\n                    key: 'createStyleProperty',\n                    value: function createStyleProperty() {\n                        var me = this;\n\n                        var styleProperty = ['fillStyle', 'strokeStyle'];\n                        styleProperty.forEach(function (p) {\n                            Object.defineProperty(me, p, {\n                                get: function get() {\n                                    return me.cp[p];\n                                },\n                                set: function set(value) {\n                                    if (value) {\n                                        return me._wxSetPropertyCallable(value.toLowerCase(), p);\n                                    }\n                                }\n                            });\n                        });\n                    }\n                }, {\n                    key: 'createShadowsProperty',\n                    value: function createShadowsProperty() {\n                        var _this = this;\n\n                        var me = this;\n                        // Shadow property\n                        ['shadowBlur', 'shadowOffsetX', 'shadowOffsetY', 'shadowColor'].forEach(function (p) {\n                            Object.defineProperty(me, p, {\n                                get: function get() {\n                                    return me.cp[p];\n                                },\n                                set: function set(value) {\n                                    var me = _this;\n                                    if (me.isWeiXinAPP) {\n                                        me.cp[p] = value;\n                                        me._ctx.setShadow(me.cp['shadowOffsetX'] || 0, me.cp['shadowOffsetY'] || 0, me.cp['shadowBlur'] || 0, me.cp['shadowColor'] || '#000000');\n                                    } else if (!_helper.is.Null(value) && !_helper.is.Undefined(value)) {\n                                        me._ctx[p] = value;\n                                        me.cp[p] = me._ctx[p];\n                                    }\n                                    return value;\n                                }\n                            });\n                        });\n                    }\n\n                    // Text property\n\n                }, {\n                    key: 'createTextProperty',\n                    value: function createTextProperty() {\n                        var me = this;\n\n                        ['textAlign', 'textBaseline'].forEach(function (p) {\n                            Object.defineProperty(me, p, {\n                                get: function get() {\n                                    return me.cp[p];\n                                },\n                                set: function set(value) {\n                                    return me._wxSetProperty(value, p);\n                                }\n                            });\n                        });\n\n                        Object.defineProperty(me, 'font', {\n                            get: function get() {\n                                return me.cp.font;\n                            },\n                            set: function set(value) {\n                                if (me.isWeiXinAPP) {\n                                    var m = value.match(pxReg);\n                                    if (!!m) {\n                                        var fontSize = +m[1];\n                                        me._ctx.setFontSize(fontSize);\n                                        me.cp.font = value;\n                                    }\n                                } else {\n                                    me._ctx.font = value;\n                                    me.cp.font = me._ctx.font;\n                                }\n                                return me.cp.font;\n                            }\n                        });\n\n                        Object.defineProperty(me, 'fontSize', {\n                            get: function get() {\n                                return parseInt(me.cp.font);\n                            },\n                            set: function set(value) {\n                                var fontSize = parseInt(value);\n                                if (_helper.is.NaN(fontSize)) {\n                                    return;\n                                }\n\n                                var currentFont = me.isWeiXinAPP ? me.cp.font : me._ctx.font;\n                                currentFont = currentFont.replace(pxReg, fontSize + 'px');\n                                if (me.isWeiXinAPP) {\n                                    me._ctx.setFontSize(fontSize);\n                                    me.cp.font = currentFont;\n                                } else {\n                                    me._ctx.font = currentFont;\n                                    me.cp.font = me._ctx.font;\n                                }\n                                return me.cp.font;\n                            }\n                        });\n                    }\n                    // Wrapper 'measureText' function for WeiXin APP\n\n                }, {\n                    key: 'measureText',\n                    value: function measureText(text) {\n                        var fontSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.fontSize;\n\n                        var me = this;\n                        if (me.isWeiXinAPP) {\n                            if (!text) {\n                                return 0;\n                            }\n                            var textLen = text.length;\n                            var hanzi = text.match(new RegExp(_helper.REG_HANZI, 'g'));\n                            var hanziNum = !!hanzi ? hanzi.length : 0;\n                            var otherNum = textLen - hanziNum;\n\n                            return {\n                                'width': fontSize * (otherNum + hanziNum * 2) / 2 + fontSize / 4\n                            };\n                        } else {\n                            return me._ctx.measureText(text);\n                        }\n                    }\n                }, {\n                    key: '_calculateYForTextBaseline',\n                    value: function _calculateYForTextBaseline(y, text) {\n                        var baseNum = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : WX_BASE_TEXT_SIZE;\n\n                        var me = this,\n                            culY = y;\n\n                        if (!me.isWeiXinAPP) {\n                            return culY;\n                        }\n\n                        var fontSize = me.fontSize;\n                        var textBaseline = me.textBaseline;\n                        switch (textBaseline) {\n                            case 'top':\n                                culY = fontSize * baseNum / 10 + y;\n                                break;\n                            case 'middle':\n                                culY = fontSize * baseNum / 20 + y;\n                                break;\n                            case 'alphabetic':\n                                break;\n                        }\n                        return culY;\n                    }\n                }, {\n                    key: '_calculateXFortextAlign',\n                    value: function _calculateXFortextAlign(x, text) {\n                        var baseNum = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : WX_BASE_TEXT_SIZE;\n\n                        var me = this,\n                            culX = x;\n                        if (!me.isWeiXinAPP) {\n                            return culX;\n                        }\n\n                        var textAlign = me.textAlign;\n                        switch (textAlign) {\n                            case 'end':\n                                culX = x - me.measureText(text).width;\n                                break;\n                            case 'center':\n                                culX = x - me.measureText(text).width / 2;\n                                break;\n                            case 'start':\n                                break;\n                        }\n                        return culX;\n                    }\n                    /**\n                     * Overwrite fillText\n                     * Weixin 0.12 not support 'textBaseline', 'textAlign' attribute, so we should figure out it.\n                     * @param text\n                     * @param x\n                     * @param y\n                     * @param options - [maxWidth, baseNum = WX_BASE_TEXT_SIZE]\n                     * @returns {*}\n                     */\n\n                }, {\n                    key: 'fillText',\n                    value: function fillText(text, x, y) {\n                        for (var _len = arguments.length, options = Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n                            options[_key - 3] = arguments[_key];\n                        }\n\n                        var me = this,\n                            maxWidth = 0 in options ? options[0] : undefined,\n                            baseNum = 1 in options ? options[1] : WX_BASE_TEXT_SIZE;\n                        if (me.isWeiXinAPP) {\n                            var culX = void 0,\n                                culY = void 0;\n                            culY = me._calculateYForTextBaseline(y, text, baseNum);\n                            culX = me._calculateXFortextAlign(x, text, baseNum);\n                            return me._ctx.fillText(text, culX, culY);\n                        } else {\n                            return me._ctx.fillText(text, x, y, maxWidth);\n                        }\n                    }\n                }, {\n                    key: 'strokeText',\n                    value: function strokeText(text, x, y) {\n                        var me = this;\n\n                        for (var _len2 = arguments.length, options = Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n                            options[_key2 - 3] = arguments[_key2];\n                        }\n\n                        if (me.isWeiXinAPP) {\n                            return me.fillText.apply(me, [text, x, y].concat(options));\n                        } else {\n                            var _me$_ctx;\n\n                            return (_me$_ctx = me._ctx).strokeText.apply(_me$_ctx, [text, x, y].concat(options));\n                        }\n                    }\n\n                    // Line property\n\n                }, {\n                    key: 'createLineProperty',\n                    value: function createLineProperty() {\n                        var me = this;\n                        var smProperty = ['lineCap', 'lineJoin', 'miterLimit', 'lineWidth'];\n                        smProperty.forEach(function (p) {\n                            Object.defineProperty(me, p, {\n                                get: function get() {\n                                    return me.cp[p];\n                                },\n                                set: function set(value) {\n                                    return me._wxSetPropertyCallable(value, p);\n                                }\n                            });\n                        });\n\n                        ['lineDashOffset'].forEach(function (p) {\n                            Object.defineProperty(me, p, {\n                                get: function get() {\n                                    return me.cp[p];\n                                },\n                                set: function set(value) {\n                                    return me._wxSetProperty(value, p);\n                                }\n                            });\n                        });\n                    }\n                }, {\n                    key: 'setLineDash',\n                    value: function setLineDash() {}\n                }, {\n                    key: 'getLineDash',\n                    value: function getLineDash() {}\n\n                    // Drawing rectangles\n\n                }, {\n                    key: 'createRectProperty',\n                    value: function createRectProperty() {\n                        var me = this;\n                        ['clearRect', 'fillRect', 'strokeRect'].forEach(function (functionName) {\n                            me[functionName] = function () {\n                                var _me$_ctx2;\n\n                                return (_me$_ctx2 = me._ctx)[functionName].apply(_me$_ctx2, arguments);\n                            };\n                        });\n                    }\n\n                    // Gradient\n\n                }, {\n                    key: 'createGradientProperty',\n                    value: function createGradientProperty() {\n                        var me = this;\n                        ['createLinearGradient'].forEach(function (functionName) {\n                            me[functionName] = function () {\n                                var _me$_ctx3;\n\n                                return (_me$_ctx3 = me._ctx)[functionName].apply(_me$_ctx3, arguments);\n                            };\n                        });\n                    }\n                }, {\n                    key: 'createRadialGradient',\n                    value: function createRadialGradient(x0, y0, r0, x1, y1, r1) {\n                        var me = this;\n                        if (me.isWeiXinAPP) {\n                            return me._ctx.createCircularGradient(x0, y0, r0);\n                        } else {\n                            return me._ctx.createRadialGradient(x0, y0, r0, x1, y1, r1);\n                        }\n                    }\n\n                    // Paths and Drawing paths\n\n                }, {\n                    key: 'createPathProperty',\n                    value: function createPathProperty() {\n                        var me = this;\n                        ['beginPath', 'closePath', 'moveTo', 'lineTo', 'bezierCurveTo', 'quadraticCurveTo', 'arc', 'rect'].forEach(function (functionName) {\n                            me[functionName] = function () {\n                                var _me$_ctx4;\n\n                                return (_me$_ctx4 = me._ctx)[functionName].apply(_me$_ctx4, arguments);\n                            };\n                        });\n\n                        ['fill', 'stroke'].forEach(function (functionName) {\n                            me[functionName] = function () {\n                                var _me$_ctx5;\n\n                                return (_me$_ctx5 = me._ctx)[functionName].apply(_me$_ctx5, arguments);\n                            };\n                        });\n                    }\n                }, {\n                    key: 'clip',\n                    value: function clip() {\n                        var me = this;\n                        if (me.isWeiXinAPP) {\n                            throw new Error('WeiXin APP not support \"clip\" function yet!');\n                        } else {\n                            var _me$_ctx6;\n\n                            return (_me$_ctx6 = me._ctx).clip.apply(_me$_ctx6, arguments);\n                        }\n                    }\n\n                    // Transformations\n\n                }, {\n                    key: 'createTransformationProperty',\n                    value: function createTransformationProperty() {\n                        var me = this;\n                        ['rotate', 'scale', 'translate'].forEach(function (functionName) {\n                            me[functionName] = function () {\n                                var _me$_ctx7;\n\n                                return (_me$_ctx7 = me._ctx)[functionName].apply(_me$_ctx7, arguments);\n                            };\n                        });\n                    }\n                }, {\n                    key: 'transform',\n                    value: function transform() {\n                        var me = this;\n                        if (me.isWeiXinAPP) {\n                            throw new Error('WeiXin APP not support \"transform\" function yet!');\n                        } else {\n                            var _me$_ctx8;\n\n                            return (_me$_ctx8 = me._ctx).transform.apply(_me$_ctx8, _toConsumableArray(args));\n                        }\n                    }\n\n                    // globalAlpha\n\n                }, {\n                    key: 'createGlobalAlphaProperty',\n                    value: function createGlobalAlphaProperty() {\n                        var me = this;\n                        ['globalAlpha'].forEach(function (p) {\n                            Object.defineProperty(me, p, {\n                                get: function get() {\n                                    return me.cp[p];\n                                },\n                                set: function set(value) {\n                                    return me._wxSetPropertyCallable(value, p);\n                                }\n                            });\n                        });\n                    }\n                    // Draw function\n\n                }, {\n                    key: 'draw',\n                    value: function draw() {\n                        var ctu = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n                        if (this.isWeiXinAPP) {\n                            this._ctx.draw(ctu);\n                        }\n                    }\n                }]);\n\n                return WxCanvasRenderingContext2D;\n            }();\n        }, { \"./helper\": 13 }], 17: [function (require, module, exports) {\n            \"use strict\";\n\n            Object.defineProperty(exports, \"__esModule\", {\n                value: true\n            });\n            exports.WxBar = exports.WxLiner = exports.WxDoughnut = exports.WxChart = undefined;\n\n            var _wxChart = require('./charts/wxChart');\n\n            var _wxChart2 = _interopRequireDefault(_wxChart);\n\n            var _doughnut = require('../src/charts/doughnut');\n\n            var _doughnut2 = _interopRequireDefault(_doughnut);\n\n            var _liner = require('../src/charts/liner');\n\n            var _liner2 = _interopRequireDefault(_liner);\n\n            var _bar = require('../src/charts/bar');\n\n            var _bar2 = _interopRequireDefault(_bar);\n\n            function _interopRequireDefault(obj) {\n                return obj && obj.__esModule ? obj : { default: obj };\n            }\n\n            exports.WxChart = _wxChart2.default;\n            exports.WxDoughnut = _doughnut2.default;\n            exports.WxLiner = _liner2.default;\n            exports.WxBar = _bar2.default;\n        }, { \"../src/charts/bar\": 1, \"../src/charts/doughnut\": 2, \"../src/charts/liner\": 3, \"./charts/wxChart\": 4 }] }, {}, [17])(17);\n});"]}